// ===========================================================================
// Verilog module generated by IPexpress
// Filename: ddr3_sdram_mem_top.v  
// Copyright 2010 (c) Lattice Semiconductor Corporation. All rights reserved.
// ===========================================================================

`timescale 1ns/100ps

module ddr3core (

   // Clock and reset
   sclk2x,
   eclk,
   sclk,
   rst_n,
   mem_rst_n,

   // Input signals from the User I/F  
   init_start,  
   cmd,
   addr,
   cmd_burst_cnt,
   cmd_valid,   
   ofly_burst_len, 
   write_data,
   datain_rdy,
   data_mask,
   read_pulse_tap,


   // Output signals to the User I/F
   cmd_rdy,
   init_done,
   wl_err,  
   read_data,
   read_data_valid,
   wl_rst_datapath,
   uddcntln,
   dqsbufd_rst,
   dqsdel,
   clocking_good,

   // Memory side signals 
   em_ddr_reset_n,          
   em_ddr_data,
   em_ddr_dqs,
   em_ddr_clk,
   em_ddr_cke,
   em_ddr_ras_n,
   em_ddr_cas_n,
   em_ddr_we_n,
   em_ddr_cs_n,
   em_ddr_odt,
   em_ddr_dm,           
   em_ddr_ba,
   em_ddr_addr
)/* synthesis syn_black_box black_box_pad_pin="em_ddr_data[15:0],em_ddr_dqs[1:0],em_ddr_clk[0:0],em_ddr_odt[0:0],em_ddr_cke[0:0],em_ddr_cs_n[0:0],em_ddr_addr[25:0],em_ddr_ba[2:0],em_ddr_ras_n,em_ddr_cas_n,em_ddr_we_n" */;

// ====================================================================
// Port definition 
// ====================================================================
input                            sclk2x;
input                            eclk;
input                            sclk;
input                            rst_n;
input                            mem_rst_n;

// Input signals from the User I/F
input                            init_start; 
input   [3:0]                    cmd;
input   [25:0]           addr;
input   [4:0]                    cmd_burst_cnt;
input                            cmd_valid;
input                            ofly_burst_len;
input   [5:0]         read_pulse_tap;

input   [63:0]                write_data;
input   [7:0]              data_mask;
output  [63:0]                read_data /* synthesis syn_useioff = 0 */;
//pragma attribute read_data outff false

output                           datain_rdy;


// Output signals to the User I/F
output                           cmd_rdy;
output                           init_done;
output                           wl_err;  
output                           read_data_valid  /* synthesis syn_useioff = 0 */;
//pragma attribute read_data_valid outff false

input                            clocking_good;
input                            dqsbufd_rst;
input                            dqsdel;

output                           wl_rst_datapath;
output                           uddcntln;

// Memory side signals 
inout   [15:0]           em_ddr_data;
output                           em_ddr_reset_n;
inout   [1:0]            em_ddr_dqs;
output  [1:0]            em_ddr_dm;
output  [0:0]           em_ddr_clk;
output  [0:0]            em_ddr_cke;
output                           em_ddr_ras_n;
output                           em_ddr_cas_n;
output                           em_ddr_we_n;
output  [0:0]          em_ddr_cs_n;
output  [0:0]             em_ddr_odt;
output  [12:0]            em_ddr_addr;
output  [2:0]           em_ddr_ba;


endmodule
