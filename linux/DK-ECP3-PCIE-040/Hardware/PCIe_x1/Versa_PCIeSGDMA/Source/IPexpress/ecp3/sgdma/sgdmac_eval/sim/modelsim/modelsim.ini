; Copyright 2006 Mentor Graphics Corporation
;
; All Rights Reserved.
;
; THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION WHICH IS THE PROPERTY OF 
; MENTOR GRAPHICS CORPORATION OR ITS LICENSORS AND IS SUBJECT TO LICENSE TERMS.
;   
[Library]

generics = $MODEL_TECH/../lattice/vhdl/mach_gen/mach_gen
gen_aux = $MODEL_TECH/../lattice/vhdl/gen_aux/gen_aux
j2svlib = $MODEL_TECH/../lattice/vhdl/j2svlib/j2svlib
vanmacro = $MODEL_TECH/../lattice/vhdl/vhd_mac/vhd_macro
lat_vhd = $MODEL_TECH/../lattice/vhdl/lat_vhd/lat_vhd
lat_vitl = $MODEL_TECH/../lattice/vhdl/lat_vitl/lat_vitl
lattice = $MODEL_TECH/../lattice/vhdl/lat_vhd/lat_vhd
lc4k = $MODEL_TECH/../lattice/vhdl/mach/mach
lc5kve = $MODEL_TECH/../lattice/vhdl/mach/mach
lc5kvg = $MODEL_TECH/../lattice/vhdl/lc5kvg/lc5kvg
lc5kb = $MODEL_TECH/../lattice/vhdl/mach/mach
mach = $MODEL_TECH/../lattice/vhdl/mach/mach
gdx2 = $MODEL_TECH/../lattice/vhdl/gdx2/gdx2
lc5kmx = $MODEL_TECH/../lattice/vhdl/lc5kmx/lc5kmx
lava1 = $MODEL_TECH/../lattice/vhdl/xpga/xpga
xpga = $MODEL_TECH/../lattice/vhdl/xpga/xpga
neoprims = $MODEL_TECH/../lattice/vhdl/neoprims/work
orca2 = $MODEL_TECH/../lattice/vhdl/orca2/work
orca3 = $MODEL_TECH/../lattice/vhdl/orca3/work
orca4 = $MODEL_TECH/../lattice/vhdl/orca4/work

sc = $MODEL_TECH/../lattice/vhdl/sc/work
scm = $MODEL_TECH/../lattice/vhdl/sc/work
xp = $MODEL_TECH/../lattice/vhdl/xp/work
ec = $MODEL_TECH/../lattice/vhdl/ec/work
ecp = $MODEL_TECH/../lattice/vhdl/ecp/work
machxo = $MODEL_TECH/../lattice/vhdl/machxo/work
ecp2 = $MODEL_TECH/../lattice/vhdl/ecp2/work
ecp2m = $MODEL_TECH/../lattice/vhdl/ecp2/work
xp2 = $MODEL_TECH/../lattice/vhdl/xp2/work

; Verilog Section
;
mgen_vlog = $MODEL_TECH/../lattice/verilog/mach_gen/mgen_vlog
j2svlib = $MODEL_TECH/../lattice/verilog/mach_gen/mgen_vlog
vlog_macro = $MODEL_TECH/../lattice/verilog/vlog_mac/vlog_mac
lsc_vlg = $MODEL_TECH/../lattice/verilog/lsc/lsc_vlg
lscsub_vlg = $MODEL_TECH/../lattice/verilog/lscsub/lscsub_vlg
lc4k_vlg = $MODEL_TECH/../lattice/verilog/mach/mach_vlg
lc5kve_vlg = $MODEL_TECH/../lattice/verilog/mach/mach_vlg
lc5kb_vlg = $MODEL_TECH/../lattice/verilog/mach/mach_vlg
;lc5kva_vlg = $MODEL_TECH/../lattice/verilog/mach/mach_vlg
lc5kvg_vlg = $MODEL_TECH/../lattice/verilog/lc5kvg/lc5kvg_vlg
mach_vlg = $MODEL_TECH/../lattice/verilog/mach/mach_vlg
gdx2_vlg = $MODEL_TECH/../lattice/verilog/gdx2/gdx2_vlg
lc5kmx_vlg = $MODEL_TECH/../lattice/verilog/lc5kmx/lc5kmx_vlg
lava1_vlg = $MODEL_TECH/../lattice/verilog/xpga/xpga_vlg
xpga_vlg = $MODEL_TECH/../lattice/verilog/xpga/xpga_vlg
neoprims_vlg = $MODEL_TECH/../lattice/verilog/neoprims/neoprims
orca2_vlg = $MODEL_TECH/../lattice/verilog/orca2/orca2
orca2a_vlg = $MODEL_TECH/../lattice/verilog/orca2a/orca2a
orca3_vlg = $MODEL_TECH/../lattice/verilog/orca3/orca3
orca4_vlg = $MODEL_TECH/../lattice/verilog/orca4/orca4
orli10g_work = $MODEL_TECH/../lattice/verilog/orli10g_work/orli10g_work
ort8850_work = $MODEL_TECH/../lattice/verilog/ort8850_work/ort8850_work
orso82g5_work = $MODEL_TECH/../lattice/verilog/orso82g5_work/orso82g5_work
orspi4_work = $MODEL_TECH/../lattice/verilog/orspi4_work/orspi4_work
ort82g5_work = $MODEL_TECH/../lattice/verilog/ort82g5_work/ort82g5_work
sysbus_work = $MODEL_TECH/../lattice/verilog/sysbus_work/sysbus_work


sysbusa_mti_work = $MODEL_TECH/../lattice/verilog/sc/sysbusa_mti_work
pcsa_mti_work = $MODEL_TECH/../lattice/verilog/sc/pcsa_mti_work
pcsc_mti_work = $MODEL_TECH/../lattice/verilog/ecp2/pcsc_mti_work

sc_vlg = $MODEL_TECH/../lattice/verilog/sc/sc_vlg
scm_vlg = $MODEL_TECH/../lattice/verilog/sc/sc_vlg
xp_vlg = $MODEL_TECH/../lattice/verilog/xp/xp_vlg
ecp_vlg = $MODEL_TECH/../lattice/verilog/ecp/ecp_vlg
ec_vlg = $MODEL_TECH/../lattice/verilog/ec/ec_vlg
machxo_vlg = $MODEL_TECH/../lattice/verilog/machxo/machxo_vlg
ecp2_vlg = $MODEL_TECH/../lattice/verilog/ecp2/ecp2_vlg
ecp2m_vlg = $MODEL_TECH/../lattice/verilog/ecp2/ecp2_vlg
xp2_vlg = $MODEL_TECH/../lattice/verilog/xp2/xp2_vlg
sysbusa_mti_work = $MODEL_TECH/../lattice/verilog/sc/sysbusa_mti_work
pcsa_mti_work = $MODEL_TECH/../lattice/verilog/sc/pcsa_mti_work
pcsc_mti_work = $MODEL_TECH/../lattice/verilog/ecp2/pcsc_mti_work




std = $MODEL_TECH/../std
ieee = $MODEL_TECH/../ieee
verilog = $MODEL_TECH/../verilog
ieeepure = $MODEL_TECH/../ieeepure
std_developerskit = $MODEL_TECH/../std_developerskit
vital2.2b = $MODEL_TECH/../vital2.2b
synopsys = $MODEL_TECH/../synopsys
modelsim_lib = $MODEL_TECH/../modelsim_lib
vital2000 = $MODEL_TECH/../vital2000
sv_std = $MODEL_TECH/../sv_std
[vcom]
; Resolves ambiguous function overloading in favor of explicit declarations
Explicit = 1

; VHDL93 variable selects language version as the default. 
; Default is VHDL-2002.
; Value of 0 or 1987 for VHDL-1987.
; Value of 1 or 1993 for VHDL-1993.
; Default or value of 2 or 2002 for VHDL-2002.
VHDL93 = 2002

; Show source line containing error. Default is off.
; Show_source = 1

; Turn off unbound-component warnings. Default is on.
; Show_Warning1 = 0

; Turn off process-without-a-wait-statement warnings. Default is on.
; Show_Warning2 = 0

; Turn off null-range warnings. Default is on.
; Show_Warning3 = 0

; Turn off no-space-in-time-literal warnings. Default is on.
; Show_Warning4 = 0

; Turn off multiple-drivers-on-unresolved-signal warnings. Default is on.
; Show_Warning5 = 0

; Turn off optimization for IEEE std_logic_1164 package. Default is on.
; Optimize_1164 = 0

; Turn on resolving of ambiguous function overloading in favor of the
; "explicit" function declaration (not the one automatically created by
; the compiler for each type declaration). Default is off.
; Explicit = 1

; Turn off VITAL compliance checking. Default is checking on.
; NoVitalCheck = 1

; Ignore VITAL compliance checking errors. Default is to not ignore.
; IgnoreVitalErrors = 1

; Turn off VITAL compliance checking warnings. Default is to show warnings.
; Show_VitalChecksWarnings = false

; Turn off "loading..." messages. Default is messages on.
; Quiet = 1

; Turn on some limited synthesis rule compliance checking. Checks only:
;	-- signals used (read) by a process must be in the sensitivity list
; CheckSynthesis = 1

[vlog]

; Turn off "loading..." messages. Default is messages on.
; Quiet = 1

; Turn on Verilog hazard checking (order-dependent accessing of global vars).
; Default is off.
; Hazard = 1

; Turn on converting regular Verilog identifiers to uppercase. Allows case
; insensitivity for module names. Default is no conversion.
; UpCase = 1

; Turns on incremental compilation of modules 
; Incremental = 1

[vsim]
; Simulator resolution
; Set to fs, ps, ns, us, ms, or sec with optional prefix of 1, 10, or 100.
Resolution = ps

; User time unit for run commands
; Set to default, fs, ps, ns, us, ms, or sec. The default is to use the
; unit specified for Resolution. For example, if Resolution is 100ps,
; then UserTimeUnit defaults to ps.
UserTimeUnit = default

; Default run length
RunLength = 100

; Maximum iterations that can be run without advancing simulation time
IterationLimit = 500000

; Directive to license manager:
; vhdl          Immediately reserve a VHDL license
; vlog          Immediately reserve a Verilog license
; plus          Immediately reserve a VHDL and Verilog license
; nomgc         Do not look for Mentor Graphics Licenses
; nomti         Do not look for Model Technology Licenses
; noqueue       Do not wait in the license queue when a license isn't available
; License = plus

; Stop the simulator after an assertion message
; 0 = Note  1 = Warning  2 = Error  3 = Failure  4 = Fatal
BreakOnAssertion = 3

; Assertion Message Format
; %S - Severity Level 
; %R - Report Message
; %T - Time of assertion
; %D - Delta
; %I - Instance or Region pathname (if available)
; %% - print '%' character
; AssertionFormat = "** %S: %R\n   Timf: %T  Iteration: %D%I\n"

; Assertion File - alternate file for storing assertion messages
; AssertFile = assert.log

; Default radix for all windows and commands...
; Set to symbolic, ascii, binary, octal, decimal, hex, unsigned
DefaultRadix = symbolic

; VSIM Startup command
; Startup = do startup.do

; File for saving command transcript
TranscriptFile = transcript

; File for saving command history 
;CommandHistory = cmdhist.log

; Specify whether paths in simulator commands should be described 
; in VHDL or Verilog format. For VHDL, PathSeparator = /
; for Verilog, PathSeparator = .
PathSeparator = /

; Specify the dataset separator for fully rooted contexts.
; The default is ':'. For example, sim:/top
; Must not be the same character as PathSeparator.
DatasetSeparator = :

; Disable assertion messages
; IgnoreNote = 1
; IgnoreWarning = 1
; IgnoreError = 1
; IgnoreFailure = 1

; Default force kind. May be freeze, drive, or deposit 
; or in other terms, fixed, wired or charged.
; DefaultForceKind = freeze

; If zero, open files when elaborated
; else open files on first read or write
; DelayFileOpen = 0

; Control VHDL files opened for write
;   0 = Buffered, 1 = Unbuffered
UnbufferedOutput = 0

; Control number of VHDL files open concurrently
;   This number should always be less then the 
;   current ulimit setting for max file descriptors
;   0 = unlimited
ConcurrentFileLimit = 40

; This controls the number of hierarchical regions displayed as
; part of a signal name shown in the waveform window.  The default
; value or a value of zero tells VSIM to display the full name.
; WaveSignalNameWidth = 0

; Turn off warnings from the std_logic_arith, std_logic_unsigned
; and std_logic_signed packages.
; StdArithNoWarnings = 1

; Turn off warnings from the IEEE numeric_std and numeric_bit
; packages.
; NumericStdNoWarnings = 1

; Control the format of a generate statement label. Don't quote it.
; GenerateFormat = %s__%d

; Specify whether checkpoint files should be compressed.
; The default is to be compressed.
; CheckpointCompressMode = 0

; List of dynamically loaded objects for Verilog PLI applications
; Veriuser = veriuser.sl

[lmc]
