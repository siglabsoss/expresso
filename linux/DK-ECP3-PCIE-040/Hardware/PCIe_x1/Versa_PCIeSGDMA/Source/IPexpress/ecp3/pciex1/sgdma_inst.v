//=============================================================================
// Verilog module generated by IPExpress    01/20/2010    14:16:54          
// Filename: sgdma_inst.v                                               
// Copyright(c) 2005 Lattice Semiconductor Corporation. All rights reserved.   
//=============================================================================

//--------------------------------------------------------------
// sgdma instance template               
//--------------------------------------------------------------

sgdma sgdma_inst (
    .clk				(clk),
    .rstn				(rstn),
    .rst_core			(rst_core),
    .a_addr			(sga_addr[31:0]),
    .a_wdat			(sga_wdat[63:0]),
    .a_rdat			(sga_rdat[63:0]),
    .a_sel			(sga_sel[7:0]),
    .a_we				(sga_we),
    .a_cyc			(sga_cyc),
    .a_stb			(sga_stb),
    .a_lock			(sga_lock),
    .a_cti			(sga_cti[2:0]),
    .a_ack			(sga_ack),
    .a_err			(sga_err),
    .a_retry			(sga_retry),
    .a_eod			(sga_eod),
    .b_addr			(sgb_addr[31:0]),
    .b_wdat			(sgb_wdat[63:0]),
    .b_rdat			(sgb_rdat[63:0]),
    .b_sel			(sgb_sel[7:0]),
    .b_we				(sgb_we),
    .b_cyc			(sgb_cyc),
    .b_stb			(sgb_stb),
    .b_lock			(sgb_lock),
    .b_cti			(sgb_cti[2:0]),
    .b_ack			(sgb_ack),
    .b_err			(sgb_err),
    .b_retry			(sgb_retry),
    .b_eod			(sgb_eod),
    .b_active			(b_active),
    .saddr                        (sgs_addr[31:0]),
    .swdat			(sgs_wdat[31:0]),
    .srdat			(sgs_rdat[31:0]),
    .scyc				(sgs_cyc),
    .sstb				(sgs_stb),
    .ssel				(sgs_sel[3:0]),
    .swe				(sgs_we),
    .sack				(sgs_ack),
    .serr				(sgs_err),
    .bd_waddr			(bd_waddr[9:0]),
    .bd_raddr			(bd_raddr[9:0]),
    .bd_wdat			(bd_wdat[31:0]),
    .bd_rdat			(bd_rdat[31:0]),
    .bd_we			(bd_we),
    .bd_re			(bd_re),
    .bd_rval			(bd_rval),
    .dma_req			(dma_req[1:0]),
    .dma_ack			(dma_ack[1:0]),
    .eventx			(eventx[1:0]),
    .errorx			(errorx[1:0]),
    .actchan			(actchan[0:0]),
    .subchan			(subchan[0:0]),
    .a_active			(a_active),
    .max_burst_size	(max_burst_size[15:0])
);


