//=============================================================================
// Verilog module generated by IPExpress    12/10/2008    10:31:45         
// Filename: USERNAME.v                                          
// Copyright(c) 2010 Lattice Semiconductor Corporation. All rights reserved.   
//=============================================================================

/* WARNING - Changes to this file should be performed by re-running IPexpress
or modifying the .LPC file and regenerating the core.  Other changes may lead
to inconsistent simulation and/or implementation results */

//--------------------------
// USERNAME module 
//--------------------------

`timescale 1ns/1ps
module ddr3core_core (
// Inputs
  clk,
  rst_n,
  param_trcd,
  param_trp,
  param_twr,
  param_tras,
  param_trc,
  param_trrd,
  param_trtp,
  param_twtr,
  param_tckesr,
  param_tzqoper,
  param_tzqs,
  param_tmrd,
  param_tpd,
  param_txpdll,
  param_tcke,
  param_txpr,
  param_tmod,
  param_tzqinit,
  addr_init_0,
  addr_init_1,
  addr_init_2,
  addr_init_3,
  wl_phase_dly_cnt,
  
  phy_init_act, 
  wl_act,
  wl_done,                             

// Input signals from the User I/F  
  init_start,
  cmd,
  addr,
  cmd_burst_cnt,
  cmd_valid,
  ofly_burst_len,
  
  
// Input signals from  configuration 
  trefi,                           
  ar_burst_cnt, 
  
//data  coming from user I/F
  datain,
  dmsel,
  DataRdy2Data,
  
// To the IOs
  pio_read,
  cal_bc4,
  ddr_cs_n,
  ddr_ras_n,
  ddr_cas_n,
  ddr_we_n,
  ddr_ba,
  ddr_addr,
  ddr_cke,
  datain_valid, 

// Output signals to the User I/F
  cmd_rdy,                             
  init_done,   
  
// Signals going to IOs for write      
  ddr_dq_out,
  ddr_wr_lat_odd,
  dqs_out,
  dqs_out_en,
  dqs_out_en_erly,
  dq_out_en,
  ddr_dqm,
  
  mem_odt_out,
  cntl_odt_out ,
  rd_odd,
  mirror_on
);

input                        rst_n;
input                        clk;
 
input [1:0]         param_trcd;    
input [1:0]          param_trp;      
input [1:0]          param_twr;          
input [3:0]         param_tras;     
input [3:0]          param_trc;        
input [1:0]         param_trrd;        
input [1:0]         param_trtp;    
input [1:0]         param_twtr;    
input [1:0]       param_tckesr ;
input [7:0]      param_tzqoper ;
input [5:0]         param_tzqs;
input [1:0]         param_tmrd;
input [1:0]          param_tpd;
input [2:0]       param_txpdll;
input [1:0]         param_tcke;
input [4:0]         param_txpr;
input [2:0]         param_tmod;
input [8:0]      param_tzqinit;

input [15:0]                 addr_init_0;
input [15:0]                 addr_init_1;
input [15:0]                 addr_init_2;
input [15:0]                 addr_init_3;
input [7:0]                  wl_phase_dly_cnt;

input                        init_start;
input                        phy_init_act;
input                        wl_act;
input                        wl_done;
input [63:0]              datain;
input [7:0]            dmsel; 
input [1:0]                  DataRdy2Data;

input [3:0]                  cmd;
input [25:0]         addr;
input [4:0]                  cmd_burst_cnt;
input                        cmd_valid;
input                        ofly_burst_len;


input [15:0]                 trefi;
input [2:0]                  ar_burst_cnt;

output                       pio_read;
output                       cal_bc4;

output [0:0]          ddr_cs_n;
output                       ddr_ras_n;
output                       ddr_cas_n;
output                       ddr_we_n;
output [2:0]        ddr_ba;
output [12:0]         ddr_addr ;
output                       datain_valid;
output [63:0]             ddr_dq_out;
output                       ddr_wr_lat_odd;
output [1:0]         dqs_out;
output                       dqs_out_en;
output                       dqs_out_en_erly;
output                       dq_out_en;

output [7:0]           ddr_dqm;
output                       ddr_cke;


output                       cmd_rdy;
output                       init_done;

output [0:0]          mem_odt_out;       
output                       cntl_odt_out;
output                       rd_odd;
output                       mirror_on;

ddr3_sdram_core U1_LSC_IP_ddr_core (

  .clk(clk),
  .rst_n(rst_n),
  .param_trcd(param_trcd),
  .param_trp(param_trp),
  .param_twr(param_twr),
  .param_tras(param_tras),
  .param_trc(param_trc),
  .param_trrd(param_trrd),
  .param_trtp(param_trtp),
  .param_twtr(param_twtr),
  .param_tckesr(param_tckesr),
  .param_tzqoper(param_tzqoper),
  .param_tzqs(param_tzqs),
  .param_tmrd(param_tmrd),
  .param_tpd(param_tpd),
  .param_txpdll(param_txpdll),
  .param_tcke(param_tcke),
  .param_txpr(param_txpr),
  .param_tmod(param_tmod),
  .param_tzqinit(param_tzqinit),
  .addr_init_0(addr_init_0),
  .addr_init_1(addr_init_1),
  .addr_init_2(addr_init_2),
  .addr_init_3(addr_init_3),
  .wl_phase_dly_cnt(wl_phase_dly_cnt),
  .phy_init_act(phy_init_act),
  .wl_act(wl_act),
  .wl_done(wl_done),
// Input signals from the User I/F  
  .init_start(init_start),
  .cmd(cmd),
  .addr(addr),
  .cmd_burst_cnt(cmd_burst_cnt),
  .cmd_valid(cmd_valid),
  .ofly_burst_len(ofly_burst_len),
  
  
// Input signals from  configuration 
  .trefi(trefi),
  .ar_burst_cnt(ar_burst_cnt), 
  
//data  coming from user I/F
  .datain(datain),
  .dmsel(dmsel),
  .DataRdy2Data(DataRdy2Data),
  
//data coming from IOs (read)   
//.ddr_rd_data(ddr_rd_data),
//.ddr_rd_data_vld(ddr_rd_data_vld),
  
// To the user I/F 
//.read_data(read_data),
//.read_data_vld(read_data_vld),
// To the IOs
  .pio_read(pio_read),
  .cal_bc4(cal_bc4),
  .ddr_cs_n(ddr_cs_n),
  .ddr_ras_n(ddr_ras_n),
  .ddr_cas_n(ddr_cas_n),
  .ddr_we_n(ddr_we_n),
  .ddr_ba(ddr_ba),
  .ddr_addr(ddr_addr),
  .ddr_cke(ddr_cke),
  .datain_valid(datain_valid),

// Output signals to the User I/F
  .cmd_rdy(cmd_rdy),
  .init_done(init_done),
  
// Signals going to IOs for write      
  .ddr_dq_out(ddr_dq_out),
  .ddr_wr_lat_odd(ddr_wr_lat_odd),
  .dqs_out(dqs_out),
  .dqs_out_en(dqs_out_en),
  .dqs_out_en_erly(dqs_out_en_erly),
  .dq_out_en(dq_out_en),
  .ddr_dqm(ddr_dqm),
  
  .mem_odt_out(mem_odt_out),
  .cntl_odt_out(cntl_odt_out) ,
  .rd_odd(rd_odd),
  .mirror_on(mirror_on)
);

endmodule
// ddr3_obf_temp.v generated by Lattice IP Model Creator version 1
// created on Mon Dec  6 08:40:19 MPST 2010
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe version 1.mar0807

// top






























`timescale 1 ns / 100 ps
module tw861d9 (
   
    clk,
    rst_n,
    phy_init_act,
    
   
   end96c9,			 
   wwcb64d,			 
   en5b269,			 
   uvd934c,			 
   wjc9a65,			 
   dm4d32d,			 
   dm6996a,			 
   su4cb52,			 
   yx65a91,
   db2d48c,
   yx6a467,
   fa5233c,		 
   zz919e2,		 

   
   ba8cf16,			 
   qg678b3,			 
   ux3c599,			 
   ipe2ccc,			 
   jr16665,			 
   cob332e,			 
   tw99971,			 
   kdccb8a,			 
   mr65c55,
   ie2e2ac,
   jp71560,   
   ux8ab06,
   ld55834,		 
   swac1a6,

   of60d31,
   bn698c,			
   ie34c66,
   oua6331,
   ym31988,
   ng8cc41,
   jc6620b,
   ks3105a,

   aa882d0,
   gb41680,			
   xyb404,
   nr5a023,
   ned011e,
   oh808f3,
   ng479d,
   cb23cea,   

   ls1e755,
   zxf3aaa,
   qi9d556,
   oseaab1,
   jp55589,
   jraac4f, 
   su5627f,
   yzb13f8,
   je89fc4,
   fn4fe23,
   uv7f11e,
   mrf88f5,
   ykc47ad,
   mt23d68,
   ng1eb45,
   qgf5a2b,
   addr_init_0,
   addr_init_1,
   addr_init_2,
   addr_init_3,
      
   param_trcd, 
   param_trp,  
   param_twr,  
   param_tras, 
   param_trc,  
   param_trrd,  
   param_trtp, 
   param_twtr,

   param_tckesr ,
   param_tzqoper ,
   param_tzqs,
   param_tmrd,
   param_tpd,
   param_txpdll,
   param_tcke,
   ldf9017,
   param_txpr,
   param_tmod,
   param_tzqinit ,  
    

   datain,
   dmsel,
   DataRdy2Data,





   mgb6966,
   sjb4b30, 
   wl_act,  
   oh2cc2e,
   dm66174,
   pu30ba2,
   ux85d13,
   
   wl_done,
  

   nr744e9,			 
   zma274e,
   lf13a72,		   
   wy9d397,
   nre9cb9,
   wj4e5ce,
   cm72e75,		 
   ou973a8,			 
   qib9d40,
   eacea01,
   mr75008,
   ria8044,
   ddr_cs_n,
   ddr_ras_n,
   ddr_cas_n,
   ddr_we_n,
   ddr_ba,
   ddr_addr,
   ddr_cke,
   datain_valid,   


   wyacaa4,

   

   ddr_dq_out,
   dqs_out,
   dqs_out_en,
   dqs_out_en_erly,
   dq_out_en,
   ddr_dqm,
   

   pio_read,
   
   
   ay5ca81,
   mee5408,
   ng2a041,
   xj5020a,
   cal_bc4,
   ir82be,
   sh415f4,
   ouafa4,
   ne57d20 ,
   ohbe903 ,
   lqf481c ,
   oha40e3 ,
   do2071d,
   rd_odd,
   ph1c75e,
   jpe3af7 ,
`ifdef DIR_SREF_EXT
   sref_ent_cmd,
   sref_ext_cmd,
`endif
   mirror_on        
);
input                           clk;
input                           rst_n;
input                           phy_init_act;
input                           end96c9;
input                           wwcb64d;
input                           en5b269;
input                           uvd934c;
input                           wjc9a65;
input                           dm4d32d;
input [4:0]                     dm6996a;
input [`CS_WIDTH-1:0]           su4cb52;
input [`COL_WIDTH -1:0]         yx65a91;
input [`BANK_WIDTH -1 :0]       db2d48c;
input [`ROW_WIDTH -1:0]         yx6a467;
input [2:0]                     fa5233c;
input                           zz919e2;
input                           ba8cf16;
input                           qg678b3;
input                           ux3c599;
input                           ipe2ccc;
input                           jr16665;
input                           cob332e;
input [4:0]                     tw99971;
input [`CS_WIDTH-1:0]           kdccb8a;
input [`COL_WIDTH -1:0]         mr65c55;
input [`BANK_WIDTH -1 :0]       ie2e2ac;
input [`ROW_WIDTH -1:0]         jp71560;
input [2:0]                     ux8ab06;
input                           ld55834;
input                           wl_done;
input [`AL_WIDTH-1:0]           su5627f;
input [`CL_WIDTH-1:0]           yzb13f8;
input [`CWL_WIDTH-1:0]          fn4fe23;
input                           uv7f11e;
input                           je89fc4;
input                           mrf88f5;
input                           ykc47ad;
input                           mt23d68;
input                           ng1eb45;
input                           qgf5a2b;
input                           wl_act;
input                           mgb6966;
input [`DQS_WIDTH-1:0]          sjb4b30;
input                           oh2cc2e;
input                           dm66174;
input [`CS_WIDTH-1:0]           pu30ba2;
input [15:0]                    ux85d13;
input                           of60d31;
input                           bn698c;
input                           ie34c66;
input                           oua6331;
input                           ym31988;
input                           ng8cc41;
input                           jc6620b;
input                           ks3105a;
input                           aa882d0;
input                           gb41680;
input                           xyb404;
input                           nr5a023;
input                           ned011e;
input                           oh808f3;
input                           ng479d;
input                           cb23cea;
input                           ls1e755;
input                           zxf3aaa;
input                           qi9d556;
input                           oseaab1;
input                           jp55589;
input                           jraac4f;
input [`TRCD_WIDTH-1:0]         param_trcd;
input [`TRP_WIDTH-1:0]          param_trp;
input [`TWR_WIDTH-1:0]          param_twr;
input [`TRAS_WIDTH-1:0]         param_tras;
input [`TRC_WIDTH-1:0]          param_trc;
input [`TRRD_WIDTH-1:0]         param_trrd;
input [`TRTP_WIDTH-1:0]         param_trtp;
input [`TWTR_WIDTH-1:0]         param_twtr;
input [`TCKESR_WIDTH-1:0]       param_tckesr ;
input [`TZQOPER_WIDTH-1:0]      param_tzqoper ;
input [`TZQS_WIDTH-1:0]         param_tzqs;
input [`TMRD_WIDTH-1:0]         param_tmrd;
input [`TPD_WIDTH-1:0]          param_tpd;
input [`TXPDLL_WIDTH-1:0]       param_txpdll;
input [`TCKE_WIDTH-1:0]         param_tcke;
input [`TXPR_WIDTH-1:0] param_txpr;
input [`TMOD_WIDTH-1:0] param_tmod;
input [`TZQINIT_WIDTH-1:0] param_tzqinit;
input [15:0]                    addr_init_0;
input [15:0]                    addr_init_1;
input [15:0]                    addr_init_2;
input [15:0]                    addr_init_3;
input [`DSIZE -1:0]             datain;
input [`USER_DM -1:0]           dmsel;
input [1:0]        DataRdy2Data;
input                           swac1a6;
input [2:0]                     ldf9017;
output                          nr744e9;
output                          zma274e;
output                          lf13a72;
output                          wy9d397;
output                          nre9cb9;
output                          wj4e5ce;
output                          cm72e75;
output                          ou973a8;
output                          qib9d40;
output                          eacea01;
output                          mr75008;
output                          mirror_on;
output                          ria8044;
output [`CS_WIDTH -1:0]         ddr_cs_n;
output [`CS_WIDTH -1:0]         ng2a041;
output                          ddr_ras_n;
output                          ddr_cas_n;
output                          ddr_we_n;
output [`BANK_WIDTH-1:0]         ddr_ba;

`ifdef ROW_WIDTH_12
output [`ROW_WIDTH:0]         ddr_addr ;

`else
output [`ROW_WIDTH-1:0]         ddr_addr ;

`endif
output                          datain_valid;
output [`DSIZE -1:0]            ddr_dq_out;
output [`DQS_WIDTH-1:0]         dqs_out;
output                          dqs_out_en;
output                          dqs_out_en_erly;
output                          dq_out_en;
output [`USER_DM -1:0]          ddr_dqm;
output                          ddr_cke;
output                          pio_read;
output                          ay5ca81;
output                          mee5408;
output                          xj5020a;
output                          cal_bc4;
output                          ir82be;
output                          wyacaa4;
output                          sh415f4;
output                          ouafa4;
output                          ne57d20 ;
output                          ohbe903 ;
output                          lqf481c ;
output                          oha40e3  ;
output                          do2071d;
output                          rd_odd;
output                          ph1c75e;
output                          jpe3af7;

`ifdef DIR_SREF_EXT
output                          sref_ent_cmd;
output                          sref_ext_cmd;

`endif
wire                            ph1c75e;
wire                            jpe3af7;

`ifdef DIR_SREF_EXT
wire                              sref_ent_cmd;
wire                              sref_ext_cmd;

`endif
wire [4:0]                      dm6996a;
wire [`DSIZE -1:0]              ddr_dq_out;
wire [`USER_DM -1:0]            ddr_dqm;
wire [`CS_WIDTH -1:0]           ng2a041;
wire [`DQS_WIDTH-1:0]           dqs_out;
wire [`ROW_WIDTH-1:0]           ng2517e;
wire [`COL_WIDTH:0]             xl28bf3;
wire [`BANK_WIDTH-1:0]           zx45f9e;
wire [`BANK_WIDTH-1:0]           ddr_ba;

`ifdef ROW_WIDTH_12
wire [`ROW_WIDTH:0]             ddr_addr ;

`else
wire [`ROW_WIDTH-1:0]           ddr_addr ;

`endif
wire [`COL_WIDTH -1:0]          yx65a91;
wire [`BANK_WIDTH -1 :0]          db2d48c;
wire [`ROW_WIDTH -1:0]          yx6a467;
wire [4:0]                      tw99971;
wire [`COL_WIDTH -1:0]          mr65c55;
wire [`BANK_WIDTH -1 :0]          ie2e2ac;
wire [`ROW_WIDTH -1:0]          jp71560;
wire [`CS_WIDTH -1:0]           ddr_cs_n;
wire [`RL_WIDTH-1:0]            dm6351f;
wire [`WL_WIDTH-1:0]            ou1a8fa;
wire [`AL_WIDTH-1:0]            su5627f;
wire [`CL_WIDTH-1:0]            yzb13f8;
wire [`CWL_WIDTH-1:0]           fn4fe23;
wire [`DQS_WIDTH-1:0]           sjb4b30;
wire [`CS_WIDTH-1:0]            pu30ba2;
wire [15:0]                     ux85d13;
wire                            ykc47ad;
wire                            mrf88f5;
wire                            ng1eb45;
wire                            mt23d68;
wire [`TRCD_WIDTH-1:0]          param_trcd;
wire [`TRP_WIDTH-1:0]           param_trp;
wire [`TRAS_WIDTH-1:0]          param_tras;
wire [`TRC_WIDTH-1:0]           param_trc;
wire [`TRTP_WIDTH-1:0]          param_trtp;
wire [`TWTR_WIDTH-1:0]          param_twtr;
wire [`TCKESR_WIDTH-1:0]        param_tckesr ;
wire [`TZQOPER_WIDTH-1:0]       param_tzqoper ;
wire [`TZQS_WIDTH-1:0]          param_tzqs;
wire [`TMRD_WIDTH-1:0]          param_tmrd;
wire [`TPD_WIDTH-1:0]           param_tpd;
wire [`TXPDLL_WIDTH-1:0]        param_txpdll;
wire [`TCKE_WIDTH-1:0]          param_tcke;
wire [`TXPR_WIDTH-1:0] param_txpr;
wire [`TMOD_WIDTH-1:0] param_tmod;
wire [`TZQINIT_WIDTH-1:0] param_tzqinit;
wire [15:0]                     addr_init_0;
wire [15:0]                     addr_init_1;
wire [15:0]                     addr_init_2;
wire [15:0]                     addr_init_3;
wire [2:0]                      ldf9017;
wire                            cal_bc4 ;
wire                            ir82be ;
wire [`DSIZE -1:0]              datain;
wire [`USER_DM -1:0]            dmsel;
wire [`CS_WIDTH -1:0]           yz8a3aa;
wire                            mee5408, xj5020a;
wire                            wj75566, vxaab34;
wire                            nr559a7,ieacd3e;
wire  [`CS_WIDTH-1:0]           su4cb52;
wire  [`CS_WIDTH-1:0]           kdccb8a;
wire                            nga7c19;
wire [5:0]                      uk3e0cb ;
wire                            swac1a6;
wire [2:0]                      ba832c8;
wire                            ph19643;
wire                            wj4e5ce;
reg                             ea590f9;
wire                            wl_act;

`ifdef DIR_SREF_EXT

`endif
reg ww43e4e;
reg uk1f270;
reg thf9380;
reg alc9c06;
reg kd4e035;
reg mr701ad;
reg sj80d6c;
reg [2 : 0] vx6b65;
reg ng35b2e;
reg doad973;
reg tu6cb9a;
reg sh65cd2;
reg ec2e694;
reg by734a0;
reg mt9a503;
reg [2 : 0] hbd281c;
reg tj940e7;
reg lfa073f;
reg hd39ff;
reg hd1cffe;
reg she7ff6;
reg je3ffb5;
reg wwffdaa;
reg xwfed50;
reg hbf6a82;
reg fpb5416;
reg phaa0b6;
reg nr505b6;
reg mg82db7;
reg vx16db8;
reg ymb6dc7;
reg ieb6e38;
reg lsb71c0;
reg ngb8e03;
reg jpc701b;
reg bn380df;
reg lqc06fe;
reg nt37f2;
reg fc1bf97;
reg fadfcbb;
reg fafe5db;
reg wjf2edb;
reg sw976dc;
reg yzbb6e0;
reg qgdb705;
reg kqdb828;
reg uvdc141;
reg [`TWR_WIDTH - 1 : 0] uie0a0d;
reg [`TRRD_WIDTH - 1 : 0] uk5068;
reg [1 : 0] hd28340;
reg en41a07;
reg mtd03d;
reg ww681ec;
reg vv40f61;
reg sj7b0f;
reg [`ROW_WIDTH - 1 : 0] rv3d87c;
reg [`COL_WIDTH : 0] pfec3e7;
reg [`BANK_WIDTH - 1 : 0] rt61f3f;
reg [`RL_WIDTH - 1 : 0] wyf9fe;
reg [`WL_WIDTH - 1 : 0] zk7cff0;
reg [`CS_WIDTH - 1 : 0] ale7f83;
reg vk3fc1d;
reg psfe0ea;
reg wwf0753;
reg tw83a98;
reg yz1d4c2;
reg [5 : 0] ayea615;
reg [2 : 0] ui530a8;
reg mg98540;
reg ldc2a01;
reg [2047:0] ks1500e;
wire [69:0] pua8071;

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef DIR_SREF_EXT

`endif

`ifdef DIR_SREF_EXT

`endif

`ifdef ROW_WIDTH_12

`else

`endif



`ifdef DIR_SREF_EXT

`endif




localparam rt4038b = 70,hq1c5e = 32'hfdfff40b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef DIR_SREF_EXT


`endif


`ifdef DIR_SREF_EXT


`endif


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef DIR_SREF_EXT


`endif



















`ifdef ROW_WIDTH_12



`else



`endif





`ifdef DIR_SREF_EXT



`endif




`ifdef DIR_SREF_EXT



`endif










`ifdef ROW_WIDTH_12



`else



`endif









assign                          mee5408 = vk3fc1d;
assign                          xj5020a = psfe0ea;


assign                          ir82be = !cal_bc4 ;
assign                          ph1c75e = wwf0753;
assign                          jpe3af7 = tw83a98;
assign                          ng2a041 = ale7f83;

assign                          wj4e5ce = sj7b0f && !ldc2a01;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) ea590f9 <= 1'b0;   else ea590f9 <= sj7b0f;
end

al7f801 fnfc00c(
   .clk(clk ) ,   .rst_n(rst_n ),
   .lq6621f(ww43e4e ),   .ym887d0(ym887d0 ),   .ie1f400(ie1f400 ),   .ks3105a(fpb5416 ),   .cb23cea(ngb8e03 ),   .end96c9(uk1f270 ),   .ba8cf16(doad973 ),   .swac1a6(lfa073f ),

   .gd12245(gd12245 ),   .ri89167(ri89167 ),   .vv459d3(vv459d3) ,   .ic674fc(ic674fc),   .gbd3f03(gbd3f03)   );
vvfc0ed ose076e(
   .clk(clk ),   .rst_n(rst_n ),   .param_trp(param_trp ) ,   .param_tckesr(param_tckesr ) ,   .param_tzqoper(param_tzqoper ) ,   .param_tzqs(param_tzqs ),   .param_tmrd(param_tmrd ),   .param_tpd(param_tpd ),   .param_twr(uie0a0d ),   .param_txpdll(param_txpdll ),   .param_tcke(param_tcke ),   .qgf5a2b(uvdc141 ),   .dm6351f(wyf9fe ),   .ri89167(ri89167 ),   .gbd3f03(gbd3f03),   .of60d31(hd39ff ),   .bn698c(hd1cffe ),
   .ie34c66(she7ff6 ),   .oua6331(je3ffb5 ),   .ym31988(wwffdaa ),   .ng8cc41(xwfed50 ),   .jc6620b(hbf6a82 ),   .ks3105a(fpb5416 ),   .aa882d0(phaa0b6 ),   .gb41680(nr505b6 ),
   .xyb404(mg82db7 ),   .nr5a023(vx16db8 ),   .ned011e(ymb6dc7 ),   .oh808f3(ieb6e38 ),   .ng479d(lsb71c0 ),   .cb23cea(ngb8e03 ),   .rg63244(lfa073f ),

   .kdc9117(kdc9117 ),   .of445e3(of445e3 ),   .gd178e7(gd178e7 ),   .rte39e8(rte39e8 ),   .mre7a3e(mre7a3e ),   .uve8fae(uve8fae),   .sw3eba2(qgf5d10 ),   .cbae881(cbae881 ),   .fca206e(fca206e ),   .vx81b91(vx81b91 ),   .ria8044(ria8044 ),   .ie1f400(ie1f400 ),
   .lf13a72(lf13a72 ),
   .wy9d397(wy9d397 ),   .nre9cb9(nre9cb9 ),   .ecafb5(ecafb5 ),   .yzbed43(yzbed43 ),   .cm72e75(cm72e75 ),
   .ou973a8(ou973a8 ),
   .qib9d40(qib9d40 ),   .eacea01(eacea01 ),   .mr75008(mr75008 ),   .ay5ca81(ay5ca81),   .sh415f4(sh415f4),   .ouafa4(ouafa4),

`ifdef DIR_SREF_EXT
   .sref_ent_cmd (sref_ent_cmd),   .sref_ext_cmd (sref_ext_cmd),

`endif
   .ps66136(lqf481c),   .jr84d93(oha40e3)   );
wl364fd xyb27ed(
   .clk(clk ),   .rst_n(rst_n ),   .fn6b76d(gd12245 ),
      .end96c9(uk1f270 ),
   .wwcb64d(thf9380 ),
   .en5b269(alc9c06 ),
   .uvd934c(kd4e035 ),
   .wjc9a65(mr701ad ),
   .dm4d32d(sj80d6c ),
   .dm6996a(dm6996a ),
   .su4cb52(su4cb52 ),
   .yx65a91(yx65a91 ),   .db2d48c(db2d48c ),   .yx6a467(yx6a467 ),   .zz919e2(ng35b2e ),      .ba8cf16(doad973 ),
   .qg678b3(tu6cb9a ),
   .ux3c599(sh65cd2 ),
   .ipe2ccc(ec2e694 ),
   .jr16665(by734a0 ),
   .cob332e(mt9a503 ),
   .tw99971(tw99971 ),
   .kdccb8a(kdccb8a ),
   .mr65c55(mr65c55 ),   .ie2e2ac(ie2e2ac ),   .jp71560(jp71560 ),   .ld55834(tj940e7 ),   .sh7f693(fpb5416 || ngb8e03 || lfa073f),
  .vv459d3(vv459d3) ,   .su5627f(su5627f ),   .yzb13f8(yzb13f8 ),   .je89fc4(fafe5db ),   .fn4fe23(fn4fe23 ),   .uv7f11e(wjf2edb),   .mrf88f5(sw976dc ),   .ykc47ad(yzbb6e0 ),   .mt23d68(qgdb705 ),   .ng1eb45(kqdb828 ),   .ls1e755(jpc701b),   .zxf3aaa(bn380df),   .qi9d556(lqc06fe),   .oseaab1(nt37f2),   .jp55589(fc1bf97 ),   .jraac4f(fadfcbb ),   .param_trcd(param_trcd ),   .param_trp(param_trp ),   .param_tras(param_tras ),   .param_trc(param_trc ),   .param_trrd(uk5068 ),   .param_trtp(param_trtp ),   .param_twtr(param_twtr ),   .ldf9017(ldf9017),   .ks3105a(fpb5416),   .cb23cea(ngb8e03),   .fa5233c(vx6b65),   .ux8ab06(hbd281c),

   .dm6351f(dm6351f ),   .ou1a8fa(ou1a8fa ),   .xwc566d(xwc566d ),   .kq59b50(kq59b50 ),   .wj75566(wj75566 ),   .vxaab34(vxaab34 ),   .sw3eba2(sw3eba2 ),   .ym887d0(ym887d0 ),   .yz8a3aa(yz8a3aa ),   .ww6da7c(xl28bf3),   .ho69f01(zx45f9e ),   .ne7c056(ng2517e ),   .nr744e9(nr744e9 ),
   .zma274e(zma274e ),   .nr559a7(nr559a7 ),   .ieacd3e(ieacd3e ),   .ps66136(ne57d20),   .jr84d93(ohbe903),   .nga7c19(nga7c19) ,   .uk3e0cb(uk3e0cb) ,   .ba832c8(ba832c8),   .do2071d(do2071d),   .rd_odd(rd_odd),   .fp1c880(fp1c880)
);
fp22033 ec1019e(
   .clk(clk ),   .rst_n(rst_n ),   .mre7a3e(mre7a3e ),   .uve8fae(uve8fae),   .the666b(1'b0 ),   .oh3335e(1'b0 ),   .ls99af5(1'b0 ),   .zxcd7aa(1'b0 ),   .zx6bd56(1'b0 ),   .sh5eab7(1'b0 ),   .eaf55bd(1'b0 ),   .hdaade8(1'b0 ),   .cbae881(cbae881 ),   .kdc9117(kdc9117 ),   .rg47294(of445e3 ),   .sw3eba2(sw3eba2 ),   .ria8044(qgf5d10 ),   .kq59b50(kq59b50 ),   .zm1be7e(vk3fc1d ),   .jpf9f9a(psfe0ea ),   .xwc566d(xwc566d ),   .gd178e7(gd178e7 ),   .rte39e8(rte39e8 ),
   .fpbfbb7(1'b0 ),   .ieacd3e(tw83a98 ),   .fca206e(fca206e ),   .vx81b91(vx81b91 ),   .yz8a3aa(ale7f83 ),   .ba832c8(ui530a8),
   .lq6621f(ww43e4e),   .ng2517e(rv3d87c),   .zx45f9e(rt61f3f),   .xl28bf3(pfec3e7),   .addr_init_0(addr_init_0),   .addr_init_1(addr_init_1),   .addr_init_2(addr_init_2),   .addr_init_3(addr_init_3),
   .yxc60d6(wj4e5ce),   .yzbed43(yzbed43),   .ecafb5(ecafb5),   .wl_act(mtd03d),   .oh2cc2e(ww681ec),   .dm66174(vv40f61),   .pu30ba2(pu30ba2),   .ux85d13(ux85d13),   .nga7c19(yz1d4c2 ),   .uk3e0cb(ayea615 ),   .fp1c880(fp1c880),      .vv459d3(ic674fc),   
   .ddr_cs_n(ddr_cs_n ),   .ddr_ras_n(ddr_ras_n ),   .ddr_cas_n(ddr_cas_n ),   .ddr_we_n(ddr_we_n ),   .ddr_ba(ddr_ba ),   .ddr_addr(ddr_addr ),   .ddr_cke(ddr_cke),   .wyacaa4(wyacaa4),   .mirror_on(mirror_on)
);


tw2fad4 ui7d6a3(
   .clk(clk ),   .rst_n(rst_n ),   .datain(datain ),   .dmsel(dmsel ),   .wj75566(vk3fc1d ),   .vxaab34(psfe0ea ),   .nr559a7(wwf0753 ),   .dm6351f(wyf9fe ),   .ou1a8fa(zk7cff0 ),   .DataRdy2Data(hd28340 ),   .mgb6966(en41a07 ),   .sjb4b30(sjb4b30 ),   .wl_act(mtd03d ),

  .datain_valid(datain_valid ),  .ddr_dq_out(ddr_dq_out ),  .dqs_out(dqs_out ),  .dqs_out_en(dqs_out_en ),  .dqs_out_en_erly(dqs_out_en_erly ),  .dq_out_en(dq_out_en ),  .ddr_dqm(ddr_dqm ),  .pio_read(pio_read ),  .cal_bc4(cal_bc4 )   );


always@* begin ww43e4e<=pua8071[0];uk1f270<=pua8071[1];thf9380<=pua8071[2];alc9c06<=pua8071[3];kd4e035<=pua8071[4];mr701ad<=pua8071[5];sj80d6c<=pua8071[6];vx6b65<={fa5233c>>1,pua8071[7]};ng35b2e<=pua8071[8];doad973<=pua8071[9];tu6cb9a<=pua8071[10];sh65cd2<=pua8071[11];ec2e694<=pua8071[12];by734a0<=pua8071[13];mt9a503<=pua8071[14];hbd281c<={ux8ab06>>1,pua8071[15]};tj940e7<=pua8071[16];lfa073f<=pua8071[17];hd39ff<=pua8071[18];hd1cffe<=pua8071[19];she7ff6<=pua8071[20];je3ffb5<=pua8071[21];wwffdaa<=pua8071[22];xwfed50<=pua8071[23];hbf6a82<=pua8071[24];fpb5416<=pua8071[25];phaa0b6<=pua8071[26];nr505b6<=pua8071[27];mg82db7<=pua8071[28];vx16db8<=pua8071[29];ymb6dc7<=pua8071[30];ieb6e38<=pua8071[31];lsb71c0<=pua8071[32];ngb8e03<=pua8071[33];jpc701b<=pua8071[34];bn380df<=pua8071[35];lqc06fe<=pua8071[36];nt37f2<=pua8071[37];fc1bf97<=pua8071[38];fadfcbb<=pua8071[39];fafe5db<=pua8071[40];wjf2edb<=pua8071[41];sw976dc<=pua8071[42];yzbb6e0<=pua8071[43];qgdb705<=pua8071[44];kqdb828<=pua8071[45];uvdc141<=pua8071[46];uie0a0d<={param_twr>>1,pua8071[47]};uk5068<={param_trrd>>1,pua8071[48]};hd28340<={DataRdy2Data>>1,pua8071[49]};en41a07<=pua8071[50];mtd03d<=pua8071[51];ww681ec<=pua8071[52];vv40f61<=pua8071[53];sj7b0f<=pua8071[54];rv3d87c<={ng2517e>>1,pua8071[55]};pfec3e7<={xl28bf3>>1,pua8071[56]};rt61f3f<={zx45f9e>>1,pua8071[57]};wyf9fe<={dm6351f>>1,pua8071[58]};zk7cff0<={ou1a8fa>>1,pua8071[59]};ale7f83<={yz8a3aa>>1,pua8071[60]};vk3fc1d<=pua8071[61];psfe0ea<=pua8071[62];wwf0753<=pua8071[63];tw83a98<=pua8071[64];yz1d4c2<=pua8071[65];ayea615<={uk3e0cb>>1,pua8071[66]};ui530a8<={ba832c8>>1,pua8071[67]};mg98540<=pua8071[68];ldc2a01<=pua8071[69];end
always@* begin ks1500e[2047]<=end96c9;ks1500e[2046]<=wwcb64d;ks1500e[2044]<=en5b269;ks1500e[2040]<=uvd934c;ks1500e[2032]<=wjc9a65;ks1500e[2016]<=dm4d32d;ks1500e[2011]<=qi9d556;ks1500e[1984]<=fa5233c[0];ks1500e[1974]<=oseaab1;ks1500e[1941]<=aa882d0;ks1500e[1920]<=zz919e2;ks1500e[1914]<=ph19643;ks1500e[1901]<=jp55589;ks1500e[1835]<=gb41680;ks1500e[1834]<=zx45f9e[0];ks1500e[1793]<=ba8cf16;ks1500e[1780]<=ea590f9;ks1500e[1754]<=jraac4f;ks1500e[1749]<=mrf88f5;ks1500e[1721]<=oh2cc2e;ks1500e[1709]<=ng1eb45;ks1500e[1679]<=bn698c;ks1500e[1623]<=xyb404;ks1500e[1621]<=dm6351f[0];ks1500e[1539]<=qg678b3;ks1500e[1526]<=ls1e755;ks1500e[1502]<=uk3e0cb[0];ks1500e[1482]<=ng2517e[0];ks1500e[1461]<=je89fc4;ks1500e[1454]<=mgb6966;ks1500e[1451]<=ykc47ad;ks1500e[1405]<=ng479d;ks1500e[1399]<=ieacd3e;ks1500e[1394]<=dm66174;ks1500e[1387]<=param_trrd[0];ks1500e[1373]<=vxaab34;ks1500e[1370]<=qgf5a2b;ks1500e[1310]<=ie34c66;ks1500e[1199]<=nr5a023;ks1500e[1195]<=ou1a8fa[0];ks1500e[1145]<=ym31988;ks1500e[1030]<=ux3c599;ks1500e[1023]<=phy_init_act;ks1500e[1005]<=zxf3aaa;ks1500e[970]<=ks3105a;ks1500e[957]<=ba832c8[0];ks1500e[917]<=xl28bf3[0];ks1500e[874]<=uv7f11e;ks1500e[860]<=wl_act;ks1500e[854]<=mt23d68;ks1500e[839]<=of60d31;ks1500e[763]<=cb23cea;ks1500e[751]<=nga7c19;ks1500e[741]<=wl_done;ks1500e[727]<=DataRdy2Data[0];ks1500e[702]<=oh808f3;ks1500e[699]<=nr559a7;ks1500e[693]<=param_twr[0];ks1500e[686]<=wj75566;ks1500e[572]<=oua6331;ks1500e[485]<=jc6620b;ks1500e[419]<=swac1a6;ks1500e[351]<=ned011e;ks1500e[343]<=yz8a3aa[0];ks1500e[242]<=ng8cc41;ks1500e[209]<=ld55834;ks1500e[104]<=ux8ab06[0];ks1500e[52]<=cob332e;ks1500e[26]<=jr16665;ks1500e[13]<=ipe2ccc;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule






























`timescale 1 ns / 100 ps
module qtd3872 (
    
    clk,			               
    rst_n,		                   

    
    cmd,                           
    addr,                          
    cmd_burst_cnt,                 
    cmd_valid,                     
    init_start,                    
    ofly_burst_len,                

    
    wj4e5ce,                 
    wy9d397,                 
    cm72e75,                 
    nr744e9,                     
    zma274e,                     
    sh415f4,                   
    ouafa4,                   
    ou973a8,                      
    mr75008,                       
    qib9d40,                     
    lf13a72,                     
    nre9cb9,                     
    yxf7d30,                    
    `ifdef EXT_AUTO_REF
    ext_auto_ref,                  
    ext_auto_ref_ack,              
    `endif

    
    trefi,                         
    ar_burst_cnt,                  
    vx848c3,                     
    qi2461f,                     
    ux230f9,                     

    
    cmd_rdy,                       
    

    
    mrc3e65,                    
    sw1f32c,                   
    dzf9960,               
    gbccb07,            
    gb6583d,                    
    oh2c1ec,                
    ip60f65,                  
    ep7b2c,                       
    jr3d964,                   
    dzecb27,                      
    ldf9017,                      

    
    end96c9,                    
    wwcb64d,                   
    en5b269,                      
    uvd934c,                       
    wjc9a65,                        
    of60d31,                
    bn698c,                
    ie34c66,                  
    oua6331,                  
    uvc397a,                 
    hd1cbd4,                
    yx6a467,                      
    yx65a91,                      
    db2d48c,                       
    su4cb52,                        
    ym31988,                         
    ks3105a,                  
    zz919e2,                   
    pu14010,                     
    dm4d32d,                    
    dm6996a,                   
    oh20f8,                         
    mg107c5,                         
    fa5233c,                       

    
    ba8cf16,                    
    qg678b3,                   
    ux3c599,                      
    ipe2ccc,                       
    jr16665,                        
    aa882d0,                
    gb41680,                
    xyb404,                  
    nr5a023,                  
    zzafd1e,                 
    th7e8f7,                
    jp71560,                      
    mr65c55,                      
    ie2e2ac,                       
    kdccb8a,                        
    ned011e,                         
    cb23cea,                  
    ld55834,                   
    jr8b96f,                     
    cob332e,                    
    tw99971,                   
    nt2df80,                         
    wj6fc06,                         
    ux8ab06,                       

    suf01af,                      
    oh80d78,                      
    
    ph6bc5,                
    swac1a6                       

);
input                                 clk;
input                                 rst_n;
input   [3:0]                         cmd;
input   [`ADDR_WIDTH-1:0]             addr;
input   [4:0]                         cmd_burst_cnt;
input                                 cmd_valid;
input                                 init_start;
input                                 ofly_burst_len;
input                                 wj4e5ce;
input                                 wy9d397;
input                                 cm72e75;
input                                 nr744e9;
input                                 zma274e;
input                                 sh415f4;
input                                 ouafa4;
input                                 ou973a8;
input                                 mr75008;
input                                 qib9d40;
input                                 lf13a72;
input                                 nre9cb9;
input                                 yxf7d30;

`ifdef EXT_AUTO_REF
input                                 ext_auto_ref;
output                                ext_auto_ref_ack;

`endif
input   [15:0]                        trefi;
input   [2:0]                         ar_burst_cnt;
input   [15:0]                        vx848c3;
input   [15:0]                        qi2461f;
input   [15:0]                        ux230f9;
output                                cmd_rdy;
output                                mrc3e65;
output  [3:0]                         sw1f32c;
output                                dzf9960;
output                                gbccb07;
output  [1:0]                         gb6583d;
output  [2:0]                         oh2c1ec;
output                                ip60f65;
output                                ep7b2c;
output                                jr3d964;
output                                dzecb27;
output  [2:0]                         ldf9017;
output                                end96c9;
output                                wwcb64d;
output                                en5b269;
output                                uvd934c;
output                                wjc9a65;
output                                of60d31;
output                                bn698c;
output                                ie34c66;
output                                oua6331;
output                                uvc397a;
output                                hd1cbd4;
output  [`ROW_WIDTH-1:0]              yx6a467;
output  [`COL_WIDTH-1:0]              yx65a91;
output  [2:0]                         db2d48c;
output  [`CS_WIDTH-1:0]               su4cb52;
output                                ym31988;
output                                ks3105a;
output                                zz919e2;
output                                pu14010;
output                                dm4d32d;
output  [4:0]                         dm6996a;
output                                oh20f8;
output                                mg107c5;
output  [2:0]                         fa5233c;
output                                ba8cf16;
output                                qg678b3;
output                                ux3c599;
output                                ipe2ccc;
output                                jr16665;
output                                aa882d0;
output                                gb41680;
output                                xyb404;
output                                nr5a023;
output                                zzafd1e;
output                                th7e8f7;
output  [`ROW_WIDTH-1:0]              jp71560;
output  [`COL_WIDTH-1:0]              mr65c55;
output  [2:0]                         ie2e2ac;
output  [`CS_WIDTH-1:0]               kdccb8a;
output                                ned011e;
output                                cb23cea;
output                                ld55834;
output                                jr8b96f;
output                                cob332e;
output  [4:0]                         tw99971;
output                                nt2df80;
output                                wj6fc06;
output  [2:0]                         ux8ab06;
output                          suf01af;
output                          oh80d78;
output  [3:0]                         ph6bc5;
output                                swac1a6;

`define CDL_READ        4'b0001

`define CDL_WRITE       4'b0010

`define CDL_READA       4'b0011

`define CDL_WRITEA      4'b0100

`define PWRDN_ENTRY     4'b0101

`define LOAD_MR         4'b0110

`define SEFL_REF_ENTRY  4'b1000

`define SEFL_REF_EXIT   4'b1001

`define PWRDN_EXIT      4'b1011

`define ZQ_CAL_LONG     4'b1100

`define ZQ_CAL_SHORT    4'b1101

`define INT_BANK        8

`define AR_CNT          4'd8

`define WORST_CMD_SEQ_CLK   16'd320    //To be adjusted for DDR3

`ifdef AR_BURST_8

`define TREFI_ADJUST ((`WORST_CMD_SEQ_CLK / 16'h8) )

`else

`ifdef AR_BURST_1

`define TREFI_ADJUST `WORST_CMD_SEQ_CLK 

`else

`define TREFI_ADJUST ((`WORST_CMD_SEQ_CLK / `AR_BURST_EN) )

`endif

`endif
parameter enf7233   = 1'b0;
parameter ieb919d   = 1'b1;
reg                     rtc8ce8;
reg   [3:0]             os46747 ;
reg   [3:0]             oh33a39 ;
reg   [3:0]             gq9d1cc ;
reg   [`ADDR_WIDTH-1:0] ofe8e61;
reg   [`ADDR_WIDTH-1:0] dm4730c;
reg   [4:0]             ep39863 ;
reg   [4:0]             ofcc31d ;
reg                     pf618ec;
reg                     jrc766;
reg                     cmd_rdy ;
reg                     mrc3e65;
reg                     xjecd9c;
reg                     xw66ce6;
reg   [3:0]             yz36733 ;
reg   [2:0]             ldf9017;
reg   [2:0]             ri9cce8;
reg                     ip60f65;
reg                     ep7b2c;
reg                     jr3d964;
reg                     yxe85a1;
reg   [`ROW_WIDTH-1:0]  yx6a467;
reg   [`COL_WIDTH-1:0]  yx65a91;
reg   [2:0]             db2d48c;
reg   [`CS_WIDTH-1:0]   su4cb52;
reg   [4:0]             dm6996a;
reg                     oh20f8;
reg                     mg107c5;
reg   [2:0]             fa5233c;
reg   [`ROW_WIDTH-1:0]  jp71560;
reg   [`COL_WIDTH-1:0]  mr65c55;
reg   [2:0]             ie2e2ac;
reg   [`CS_WIDTH-1:0]   kdccb8a;
reg   [4:0]             tw99971;
reg                     nt2df80;
reg                     wj6fc06;
reg   [2:0]             ux8ab06;
reg   [`CS_WIDTH-1:0]   ep182fb;
reg                     end96c9;
reg                     ba8cf16;
reg                     th5f742;
reg                     jcfba16;
wire  [2:0]             zxdd0b2;
reg                     en5b269;
reg                     wwcb64d;
reg                     wjc9a65;
reg                     uvd934c;
reg                     dm4d32d;
reg                     ie34c66;
reg                     oua6331;
reg                     of60d31;
reg                     bn698c;
reg                     uvc397a;
reg                     hd1cbd4;
reg                     ym31988;
reg                     ks3105a;
reg                     zz919e2;
reg                     pu14010 ;
reg                    suf01af ;
reg                     ux3c599;
reg                     qg678b3;
reg                     jr16665;
reg                     ipe2ccc;
reg                     cob332e;
reg                     xyb404;
reg                     nr5a023;
reg                     aa882d0;
reg                     gb41680;
reg                     zzafd1e;
reg                     th7e8f7;
reg                     ned011e;
reg                     cb23cea;
reg                     ld55834;
reg                     jr8b96f ;
reg                    oh80d78 ;
reg                     rt7efa4;
reg                     kdf7d26;
reg                     cbbe934;
reg                     tuf49a4;
reg                     ana4d23;
reg                     sj2691c;
reg                     ie348e5;
reg                     qva4729;
reg                     ux2394d;
reg                     bn1ca6d;
reg                     uie536e;
reg                an29b71;
reg                     vi4db8c;
reg                     ui6dc63;
reg                     bl6e318;
reg                     fn718c6;
reg                     ri8c637;
reg                     lq631ba;
reg                     cb18dd2;
reg                     enc6e94;
reg                     jr374a4;
reg                     zzba527;
reg                     bld293f;
reg                xl949ff;
wire                    mta4ffe;
wire                    lf27ff4;
wire                    fc3ffa7;
wire                    qgffd3a;
wire                    byfe9d0;
wire                    lqf4e82;
wire                    dzf9960;
wire                    gbccb07;
reg   [1:0]             ned04d3;
reg   [3:0]             sw1f32c;
reg   [3:0]             zz134d9;
reg   [1:0]             gb6583d;
reg   [2:0]             oh2c1ec;
reg   [2:0]             rv9b3a4;
reg                     uvd9d26 ;
reg   [2:0]             qgce934;
reg   [1:0]             fn749a0;
reg   [3:0]             sja4d07;
reg   [1:0]             gd2683c;
reg   [2:0]             qi341e5;
reg                     zza0f28;
reg                     kf7946;
reg                     ep3ca34;
reg                     mee51a5 ;
reg                     ph28d29;
reg                     kq4694e;
wire                    dzecb27;
wire                    vxa5381;
wire                    ir29c0f;
wire                    ip4e07c;
wire                    wj703e5;
wire                    vx81f2c;
wire                    qif967;
wire                    dm7cb38;
wire                    eae59c3;
wire                    sref_ext_cmd;
wire                    ea670c4;
wire                    zz38620;
wire                    wjc3106;
wire  [`BSIZE-1:0]      an18835;
wire  [3:0]             mec41ac;
wire  [3:0]             tw20d60;
wire                    ph6b02;
reg   [`BSIZE-1:0]      ri35816;
reg                     ieac0b3 ;
reg                     mr60599 ;
reg                     oh2ccd ;
reg                     lf1666c  ;

`ifdef EXT_AUTO_REF
reg                     swb3366;

`else
reg   [15:0]            ri99b31;
reg                     vvcd98a;
reg                     vi6cc57;
reg                     ho662ba;
reg                     uk315d2;
reg   [15:0]            ep8ae90 ;
reg   [ 3:0]            lq57484;

`endif
reg   [ 3:0]            ph6bc5;
reg                     swac1a6;
reg                     wl908be;
reg                     fp845f4;
reg                     rv22fa6;
reg                     cb17d37;
reg                     epbe9bd;
reg                     jcf4dec;
reg                     wya6f63;
reg                     rv37b19;
reg                     fcbd8ce  ;
reg                     xjec673 ;
reg                     by6339f ;
reg                     bn19cfa;
reg                     uice7d6  ;
reg                     ne73eb1 ;
reg                     an9f58a ;
reg   [1:0]             mefac54;
reg                     wjd62a0;
reg [(`CS_WIDTH* 8)-1:0]   epb1504;
reg [(`CS_WIDTH* 8)-1:0]   gd8a824;
reg [(`CS_WIDTH* 8)-1:0]   cz54124;
reg [(`CS_WIDTH* 8)-1:0]   fpa0925;
reg [(`CS_WIDTH* 8)-1:0]   fc492e;
reg                     sw24973;
reg                     ec24b98 ;
reg [2:0]               xy25cc0;
wire                    sw2e602 ;
wire                    jc73010 ;
wire                    wy98083 ;
wire                    lqc0419 ;
reg                     mt20ca ;
reg                     wy10655 ;
reg                     hq832a9 ;
reg                     lf1954b ;
reg   [`ROW_WIDTH-1:0]  bycaa5f;
wire  [5:0]             pf552fa;
wire                    coa97d7;
wire                    qt4beb9;
wire                    fn5f5cc;
wire                    ayfae66;
wire  [`ROW_WIDTH-1:0]  fnd7330;
wire                    wyb9986;

`ifdef CS_WIDTH_4
wire                    czccc31;

`else
reg                     czccc31;

`endif
reg                     je30c6a;
wire                    xy86353;
wire                    gq31a9b;
wire                    ym8d4d9;
wire                    qt6a6c8;
wire                    su53644;
wire                    zz9b220;
wire                    gbd9106;
wire                    pfc8835;
reg   [`ROW_WIDTH-1:0]  al441af;
wire  [`ROW_WIDTH-1:0]  ba20d7c;
wire                    bn6be2;
wire                    je35f16;
wire                    zzaf8b3;

`ifdef CS_WIDTH_2
wire                    rg7c59f;
reg                     kde2cfa ;

`endif

`ifdef CS_WIDTH_4
wire  [1:0]             rg7c59f;
reg   [1:0]             kde2cfa ;

`endif
reg                     an9f570;
wire                    mefab84;

`ifdef EXT_AUTO_REF
wire                    vid5c20;

`endif
wire                    wlae102;
wire                    qt70814;
reg                     db840a5;
reg                     zm2052e;
wire                    oh2973;
wire                    je14b9c;
wire                    fpa5ce2;
wire                    ec2e716;
wire                    by738b0;
wire                    hq9c582;
wire                    wje2c13;
wire                    rv1609d;
reg                     rvb04ee;
reg                     ec82776;
wire                    nt13bb1;
integer                 mg9dd8f;

`ifdef DIR_SREF_EXT

`else

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_1

`else

`endif

`ifdef CS_WIDTH_1

`else

`endif

`ifdef CS_WIDTH_1

`else

`endif
reg    faeec78;

`ifdef CS_WIDTH_1

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef EXT_AUTO_REF

`else

`endif

`ifdef EXT_AUTO_REF  //----------------------------

`else  //internal auto refresh              

`endif

`ifdef EXT_AUTO_REF  //

`else              

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_1

`endif

`ifdef CS_WIDTH_1

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_1

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif
reg [3 : 0] ne763c3;
reg [`ADDR_WIDTH - 1 : 0] epb1e1b;
reg [4 : 0] kf8f0dd;
reg kq786ed;
reg gbc3768;
reg ba1bb45;
reg bldda2b;
reg wjed15e;
reg su68af5;
reg ld457a8;
reg ks2bd46;
reg cz5ea31;
reg gof518d;
reg vka8c68;
reg go46342;
reg aa31a11;
reg co8d089;
reg ui68448;
reg dm42241;
reg [15 : 0] do1120b;
reg [2 : 0] ls8905b;
reg [15 : 0] ps482da;
reg [15 : 0] wj416d2;
reg [15 : 0] vkb694;
reg wj5b4a3;
reg [3 : 0] hoda51c;
reg [3 : 0] thd28e2;
reg [3 : 0] lf94717;
reg [`ADDR_WIDTH - 1 : 0] wya38bf;
reg [`ADDR_WIDTH - 1 : 0] rv1c5f9;
reg [4 : 0] yxe2fcf;
reg [4 : 0] gd17e7d;
reg lfbf3ed;
reg thf9f6f;
reg dmcfb7f;
reg cm7dbfa;
reg [3 : 0] yxedfd1;
reg [2 : 0] gb6fe8c;
reg wj7f465;
reg [`CS_WIDTH - 1 : 0] ayfa32d;
reg god1969;
reg fc8cb48;
reg [2 : 0] yx65a43;
reg db2d21c;
reg xw690e7;
reg by4873b;
reg me439da;
reg vx1ced0;
reg ale7686;
reg qi3b434;
reg fada1a1;
reg byd0d0a;
reg ri86852;
reg gq34292;
reg wla1490;
reg oua485;
reg rg52429;
reg ou9214a;
reg sj90a50;
reg yz85284;
reg mt29424;
reg th4a125;
reg hb5092f;
reg ph8497e;
reg uk24bf7;
reg vk25fb8;
reg do2fdc2;
reg zx7ee13;
reg wjf709e;
reg xyb84f5;
reg hbc27aa;
reg lf13d57;
reg zz9eabf;
reg [1 : 0] icf55ff;
reg [3 : 0] ntaaff8;
reg [2 : 0] zk57fc7;
reg hdbfe3b;
reg [2 : 0] goff1de;
reg [1 : 0] enf8ef1;
reg [3 : 0] pfc778d;
reg [1 : 0] uk3bc6f;
reg [2 : 0] gode378;
reg jcf1bc0;
reg wy8de03;
reg en6f019;
reg ay780cc;
reg dmc0660;
reg bn3302;
reg ph19817;
reg encc0be;
reg mr605f4;
reg oh2fa5;
reg kf17d2c;
reg qvbe965;
reg byf4b2c;
reg nta5963;
reg sj2cb1e;
reg kd658f4;
reg ux2c7a4;
reg dm63d25;
reg [`BSIZE - 1 : 0] tw1e92b;
reg [3 : 0] nef495b;
reg [3 : 0] epa4adb;
reg xy256dc;
reg [`BSIZE - 1 : 0] wy2b6e3;
reg qt5b718;
reg kqdb8c4;
reg uvdc621;
reg xje310d;
reg ux1886e;
reg qgc4374;
reg ym21ba0;
reg cbdd00;
reg bl6e805;
reg jp7402f;
reg vxa017e;
reg gqbf7;
reg aa5fb9;
reg fc2fdc9;
reg pf7ee4b;
reg uvf725e;
reg gqb92f5;
reg alc97a8;
reg gb4bd44;
reg [1 : 0] cz5ea24;
reg gof5125;
reg [(`CS_WIDTH * 8) - 1 : 0] vka8928;
reg [(`CS_WIDTH * 8) - 1 : 0] ip44942;
reg [(`CS_WIDTH * 8) - 1 : 0] qi24a15;
reg [(`CS_WIDTH * 8) - 1 : 0] pu250a8;
reg [(`CS_WIDTH * 8) - 1 : 0] nt28543;
reg zk42a1f;
reg sw150fa;
reg [2 : 0] baa87d1;
reg go43e8b;
reg wy1f458;
reg gofa2c0;
reg cmd1601;
reg fp8b009;
reg xw5804f;
reg tuc027b;
reg xy13da;
reg [`ROW_WIDTH - 1 : 0] fp9ed2;
reg [5 : 0] zx4f697;
reg dz7b4bf;
reg fada5ff;
reg dzd2ffa;
reg ks97fd7;
reg [`ROW_WIDTH - 1 : 0] rvbfeb9;
reg icff5ce;
reg sufae71;
reg thd7388;
reg ecb9c46;
reg mece231;
reg dz71189;
reg wy88c4e;
reg cm46271;
reg uk31389;
reg do89c48;
reg [`ROW_WIDTH - 1 : 0] ip4e243;
reg [`ROW_WIDTH - 1 : 0] xj7121d;
reg ba890ee;
reg ne48772;
reg ea43b92;
reg ir1dc90;
reg zkee484;
reg me72422;
reg uk92111;
reg oh90888;
reg tj84444;
reg zz22226;
reg je11136;
reg gq889b3;
reg gb44d99;
reg cb26ccd;
reg mt3666d;
reg ukb336d;
reg hq99b69;
reg thcdb4a;
reg ea6da57;
reg ay6d2b8;
reg zk695c1;
reg [2047:0] ks1500e;
wire [181:0] pua8071;

`ifdef EXT_AUTO_REF

`endif

`define CDL_READ        4'b0001

`define CDL_WRITE       4'b0010

`define CDL_READA       4'b0011

`define CDL_WRITEA      4'b0100

`define PWRDN_ENTRY     4'b0101

`define LOAD_MR         4'b0110

`define SEFL_REF_ENTRY  4'b1000

`define SEFL_REF_EXIT   4'b1001

`define PWRDN_EXIT      4'b1011

`define ZQ_CAL_LONG     4'b1100

`define ZQ_CAL_SHORT    4'b1101

`define INT_BANK        8

`define AR_CNT          4'd8

`define WORST_CMD_SEQ_CLK   16'd320    //To be adjusted for DDR3

`ifdef AR_BURST_8

`define TREFI_ADJUST ((`WORST_CMD_SEQ_CLK / 16'h8) )

`else

`ifdef AR_BURST_1

`define TREFI_ADJUST `WORST_CMD_SEQ_CLK 

`else

`define TREFI_ADJUST ((`WORST_CMD_SEQ_CLK / `AR_BURST_EN) )

`endif

`endif

`ifdef EXT_AUTO_REF

`else

`endif

`ifdef CS_WIDTH_4

`else

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef EXT_AUTO_REF

`endif

`ifdef DIR_SREF_EXT

`else

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_1

`else

`endif

`ifdef CS_WIDTH_1

`else

`endif

`ifdef CS_WIDTH_1

`else

`endif

`ifdef CS_WIDTH_1

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef EXT_AUTO_REF

`else

`endif

`ifdef EXT_AUTO_REF  //----------------------------

`else  //internal auto refresh              

`endif

`ifdef EXT_AUTO_REF  //

`else              

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_1

`endif


`ifdef CS_WIDTH_1

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_1

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4


`endif

localparam rt4038b = 182,hq1c5e = 32'hfdffc68b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef EXT_AUTO_REF


`endif


`define CDL_READ        4'b0001


`define CDL_WRITE       4'b0010


`define CDL_READA       4'b0011


`define CDL_WRITEA      4'b0100


`define PWRDN_ENTRY     4'b0101


`define LOAD_MR         4'b0110


`define SEFL_REF_ENTRY  4'b1000


`define SEFL_REF_EXIT   4'b1001


`define PWRDN_EXIT      4'b1011


`define ZQ_CAL_LONG     4'b1100


`define ZQ_CAL_SHORT    4'b1101


`define INT_BANK        8


`define AR_CNT          4'd8


`define WORST_CMD_SEQ_CLK   16'd320    //To be adjusted for DDR3


`ifdef AR_BURST_8


`define TREFI_ADJUST ((`WORST_CMD_SEQ_CLK / 16'h8) )


`else


`ifdef AR_BURST_1


`define TREFI_ADJUST `WORST_CMD_SEQ_CLK 


`else


`define TREFI_ADJUST ((`WORST_CMD_SEQ_CLK / `AR_BURST_EN) )


`endif


`endif


`ifdef EXT_AUTO_REF


`else


`endif


`ifdef CS_WIDTH_4


`else


`endif


`ifdef CS_WIDTH_2


`endif


`ifdef CS_WIDTH_4


`endif


`ifdef EXT_AUTO_REF


`endif


`ifdef DIR_SREF_EXT


`else


`endif


`ifdef CS_WIDTH_2


`endif


`ifdef CS_WIDTH_4


`endif


`ifdef CS_WIDTH_1


`else


`endif


`ifdef CS_WIDTH_1


`else


`endif


`ifdef CS_WIDTH_1


`else


`endif


`ifdef CS_WIDTH_1


`endif


`ifdef CS_WIDTH_2


`endif


`ifdef CS_WIDTH_4


`endif


`ifdef EXT_AUTO_REF


`else


`endif


`ifdef EXT_AUTO_REF  //----------------------------


`else  //internal auto refresh              


`endif


`ifdef EXT_AUTO_REF  //


`else              


`endif


`ifdef CS_WIDTH_4


`endif


`ifdef CS_WIDTH_2


`endif


`ifdef CS_WIDTH_1


`endif


`ifdef CS_WIDTH_1


`endif


`ifdef CS_WIDTH_2


`endif


`ifdef CS_WIDTH_4


`endif


`ifdef CS_WIDTH_1


`endif


`ifdef CS_WIDTH_2


`endif


`ifdef CS_WIDTH_4


`endif






`ifdef EXT_AUTO_REF



`endif












`define CDL_READ        4'b0001



`define CDL_WRITE       4'b0010



`define CDL_READA       4'b0011



`define CDL_WRITEA      4'b0100



`define PWRDN_ENTRY     4'b0101



`define LOAD_MR         4'b0110



`define SEFL_REF_ENTRY  4'b1000



`define SEFL_REF_EXIT   4'b1001



`define PWRDN_EXIT      4'b1011



`define ZQ_CAL_LONG     4'b1100



`define ZQ_CAL_SHORT    4'b1101




`define INT_BANK        8



`define AR_CNT          4'd8









`define WORST_CMD_SEQ_CLK   16'd320    //To be adjusted for DDR3




`ifdef AR_BURST_8



`define TREFI_ADJUST ((`WORST_CMD_SEQ_CLK / 16'h8) )



`else



`ifdef AR_BURST_1



`define TREFI_ADJUST `WORST_CMD_SEQ_CLK 



`else




`define TREFI_ADJUST ((`WORST_CMD_SEQ_CLK / `AR_BURST_EN) )



`endif



`endif









`ifdef EXT_AUTO_REF



`else



`endif



`ifdef CS_WIDTH_4



`else



`endif



`ifdef CS_WIDTH_2



`endif




`ifdef CS_WIDTH_4



`endif



`ifdef EXT_AUTO_REF



`endif






assign nt13bb1 = ((kqdb8c4 && ne763c3 != `SEFL_REF_EXIT) || (!kqdb8c4 && ne763c3 == `SEFL_REF_EXIT) ||                       (xje310d   && ne763c3 != `PWRDN_EXIT) || (!xje310d   && ne763c3 == `PWRDN_EXIT)) ? 1'b1 : 1'b0;

assign rv1609d = ( ne763c3 == 4'h0 || ne763c3 == 4'h7 || ne763c3 == 4'ha || ne763c3 == 4'he || ne763c3 == 4'hf || ay6d2b8 )                       ? 1'b1 : 1'b0;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      rtc8ce8          <= 1'b0;      os46747                <= 4'h0;      oh33a39               <= 4'h0;      gq9d1cc              <= 4'h0;      ofe8e61               <= {`ADDR_WIDTH{1'b0}};      dm4730c              <= {`ADDR_WIDTH{1'b0}};      ep39863      <= 5'b0;      ofcc31d     <= 5'b0;      fcbd8ce       <= 1'b0;      xjec673      <= 1'b0;      by6339f      <= 1'b0;      xjecd9c     <= 1'b0;      xw66ce6    <= 1'b0;      yz36733       <= `AR_CNT;   end   else begin      rtc8ce8          <= kq786ed & ~hq99b69;      os46747                <= ne763c3;      oh33a39               <= ne763c3;      gq9d1cc              <= hoda51c;      ofe8e61               <= epb1e1b;      dm4730c              <= wya38bf;      ep39863      <= kf8f0dd;      ofcc31d     <= yxe2fcf;      fcbd8ce       <= fada5ff;      xjec673      <= fada5ff;      by6339f      <= fada5ff;      xjecd9c     <= ba1bb45;      xw66ce6    <= dmcfb7f;      yz36733       <= {~(|(ls8905b)),ls8905b};    end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      jrc766         <= 1'b0;   end   else if (gbc3768 && !thf9f6f & !ay780cc) begin      jrc766         <= 1'b1;   end   else if (bldda2b) begin      jrc766         <= 1'b0;   end   else      jrc766         <= thf9f6f;
end
assign dzecb27             = thf9f6f & ~bldda2b;


always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      mee51a5      <= 1'b0;   end   else begin      mee51a5      <= bldda2b;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      pf618ec          <= 1'b0;   end   else if (!gof5125) begin      pf618ec          <= 1'b0;   end   else begin      pf618ec          <= ~lfbf3ed;   end
end
assign ip4e07c        = (hoda51c == `CDL_WRITE)  ? 1'b1 : 1'b0;
assign wj703e5        = (hoda51c == `CDL_READ)   ? 1'b1 : 1'b0;
assign vx81f2c       = (hoda51c == `CDL_WRITEA) ? 1'b1 : 1'b0;
assign qif967       = (hoda51c == `CDL_READA)  ? 1'b1 : 1'b0;
assign dm7cb38       = (hoda51c == `LOAD_MR)    ? 1'b1 : 1'b0;
assign eae59c3      = (hoda51c == `SEFL_REF_ENTRY) ? 1'b1 : 1'b0;
assign sref_ext_cmd  = (hoda51c == `SEFL_REF_EXIT)  ? 1'b1 : 1'b0;
assign ea670c4        = (hoda51c == `PWRDN_ENTRY)    ? 1'b1 : 1'b0;
assign zz38620    = (hoda51c == `PWRDN_EXIT)     ? 1'b1 : 1'b0;
assign wjc3106   = (hoda51c == `ZQ_CAL_LONG || hoda51c == `ZQ_CAL_SHORT )    ? 1'b1 : 1'b0;
assign qt70814 = thd28e2[3] & ~thd28e2[2] & thd28e2[0];
assign wlae102  = hoda51c[3]  & ~hoda51c[2]  & hoda51c[0];
assign vxa5381 = mr605f4 | oh2fa5 |  kf17d2c | qvbe965;
assign ir29c0f = ~thd28e2[3] & (~thd28e2[2] | (thd28e2[2] & ~thd28e2[1] & ~thd28e2[0]));
assign an18835 = wya38bf[`COL_WIDTH+`BSIZE-1:`COL_WIDTH];  


`ifdef DIR_SREF_EXT

assign qt4beb9  = uvf725e & wj5b4a3;
assign fn5f5cc  = gqb92f5 & wj5b4a3;
assign ayfae66  = gqb92f5 & wj5b4a3;
assign fnd7330  = wya38bf[`ADDR_WIDTH-1:`COL_WIDTH+`BSIZE];


`else

assign qt4beb9  = uvf725e & wj5b4a3 &                        (~oh90888 | me72422);

assign fn5f5cc  = gqb92f5 & wj5b4a3 &                        (~oh90888 | uk92111);
assign ayfae66  = gqb92f5 & wj5b4a3 &                        (~oh90888 );

`endif


assign fnd7330  = wya38bf[`ADDR_WIDTH-1:`COL_WIDTH+`BSIZE];
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      db840a5         <= 1'b0;   end   else if (me72422 && uvf725e && wj5b4a3) begin      db840a5         <= 1'b0;   end
   else if ((kd658f4 || nta5963) && uvf725e && wj5b4a3) begin      db840a5         <= 1'b1;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ieac0b3           <= 1'b0;      mr60599         <= 1'b0;   end   else if (nta5963 & fada5ff) begin      ieac0b3           <= 1'b1;      mr60599         <= 1'b1;   end   else if (sj2cb1e & fada5ff) begin      ieac0b3           <= 1'b0;      mr60599         <= 1'b0;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      oh2ccd           <= 1'b0;      lf1666c         <= 1'b0;   end   else if (kd658f4 & fada5ff) begin      oh2ccd           <= 1'b1;      lf1666c         <= 1'b1;   end   else if (ux2c7a4 & fada5ff) begin      oh2ccd           <= 1'b0;      lf1666c         <= 1'b0;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      sw24973           <= 1'b0;   end   else begin      sw24973           <= ph19817;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      xy25cc0          <= 3'b0;   end
   else if(zk42a1f && aa5fb9  )   begin      xy25cc0          <=  wya38bf[`COL_WIDTH+2:`COL_WIDTH];   end
end



`ifdef CS_WIDTH_2
    assign rg7c59f = wya38bf[`COL_WIDTH+3];    assign bn6be2 = (kde2cfa == wya38bf[`COL_WIDTH+3]);


`endif




`ifdef CS_WIDTH_4
    assign rg7c59f = wya38bf[`COL_WIDTH+4:`COL_WIDTH+3];    assign bn6be2 = (kde2cfa == wya38bf[`COL_WIDTH+4:`COL_WIDTH+3]);


`endif




`ifdef CS_WIDTH_1



`else

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      kde2cfa              <= {`CS_WIDTH/2{1'b0}};   end   else if(zk42a1f && fada5ff  )   begin      kde2cfa              <= rg7c59f ;   end
end

`endif






always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      yxe85a1      <= 1'b0;      ec24b98     <= 1'b0;   end   else if (aa5fb9) begin      yxe85a1      <= ~wj7f465;      ec24b98     <= ~sw150fa;   end
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      an9f570  <= 1'b0;   end   else if (fada5ff) begin      an9f570  <= ~ir1dc90;   end
end


always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      rvb04ee          <= 1'b0;   end   else begin      if (aa5fb9 && !wj7f465) begin         rvb04ee      <= (rv1c5f9[`COL_WIDTH+2:`COL_WIDTH] == baa87d1) ? 1'b1 : 1'b0  ;      end   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ec82776          <= 1'b0;   end   else begin      if (aa5fb9 && wj7f465) begin         ec82776      <= (rv1c5f9[`COL_WIDTH+2:`COL_WIDTH] == baa87d1) ? 1'b1 : 1'b0  ;      end   end
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      yx6a467             <= {`ROW_WIDTH{1'b0}};      yx65a91             <= {`COL_WIDTH{1'b0}};      db2d48c              <= 3'b0;      su4cb52               <= {`CS_WIDTH{1'b0}};      dm6996a          <= 5'b0;      oh20f8                <= enf7233;      mg107c5                <= ieb919d;      fa5233c              <= 3'h0;            jp71560             <= {`ROW_WIDTH{1'b0}};      mr65c55             <= {`COL_WIDTH{1'b0}};      ie2e2ac              <= 3'b0;      kdccb8a               <= {`CS_WIDTH{1'b0}};      tw99971          <= 5'b0;      nt2df80                <= enf7233;      wj6fc06                <= ieb919d;      ux8ab06              <= 3'h0;            pu14010            <= 1'b0;      jr8b96f            <= 1'b0;
   end   else begin      if (pf7ee4b && !wj7f465) begin         yx65a91         <= rv1c5f9[`COL_WIDTH-1:0];         db2d48c          <= (byf4b2c) ? rv1c5f9[18:16] : rv1c5f9[`COL_WIDTH+2:`COL_WIDTH];         su4cb52           <= ayfa32d;         yx6a467         <= rv1c5f9[`ADDR_WIDTH-1:`BSIZE+`COL_WIDTH];                  dm6996a      <= gd17e7d;         oh20f8            <= (icf55ff == 2'b01) ? ~cm7dbfa : icf55ff[1] ;         mg107c5            <= (icf55ff == 2'b01) ?  cm7dbfa : ~icf55ff[1] ;         


`ifdef CS_WIDTH_1
         pu14010        <= 1'b1;


`else
         pu14010        <= ba890ee & ph19817   ;


`endif
         fa5233c          <= rv1c5f9[12:10];      end      if (pf7ee4b && wj7f465) begin         mr65c55         <= rv1c5f9[`COL_WIDTH-1:0];         ie2e2ac          <= (byf4b2c) ? rv1c5f9[18:16] : rv1c5f9[`COL_WIDTH+2:`COL_WIDTH];         kdccb8a           <= ayfa32d;         jp71560         <= rv1c5f9[`ADDR_WIDTH-1:`COL_WIDTH+`BSIZE];                  tw99971      <= gd17e7d;         nt2df80            <= (icf55ff == 2'b01) ? ~cm7dbfa : icf55ff[1] ;         wj6fc06            <= (icf55ff == 2'b01) ?  cm7dbfa : ~icf55ff[1] ;         


`ifdef CS_WIDTH_1
         jr8b96f        <= 1'b1;


`else
         jr8b96f        <= ba890ee & ph19817  ;


`endif
         ux8ab06          <= rv1c5f9[12:10];      end   end
end


assign fc3ffa7 = fc2fdc9 & zk42a1f & ~wj7f465;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      mt20ca <= 1'b0;   end   else if (xyb84f5) begin      mt20ca <= 1'b1;   end   else if (ld457a8) begin      mt20ca <= 1'b0;   end
end
assign sw2e602 = xyb84f5 | fp8b009 ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      end96c9       <= 1'b0;      zz919e2      <= 1'b0;   end   else if (ld457a8) begin      end96c9       <= 1'b0;      zz919e2      <= 1'b0;   end   else if (go43e8b && ea43b92) begin      end96c9       <= 1'b1;      zz919e2      <= thcdb4a;   end
end


assign qgffd3a = fc2fdc9 & zk42a1f & wj7f465;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      wy10655 <= 1'b0;   end   else if (hbc27aa) begin      wy10655 <= 1'b1;   end   else if (ks2bd46) begin      wy10655 <= 1'b0;   end
end

assign jc73010 = hbc27aa | xw5804f ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ba8cf16       <= 1'b0;      ld55834      <= 1'b0;   end   else if (ks2bd46) begin      ba8cf16       <= 1'b0;      ld55834      <= 1'b0;   end   else if (wy1f458 && ne48772) begin      ba8cf16       <= 1'b1;      ld55834      <= ea6da57;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      th5f742       <= 1'b0;      jcfba16       <= 1'b0;   end   else begin      th5f742       <= end96c9;      jcfba16       <= ba8cf16;   end
end
assign mta4ffe = end96c9 & ~god1969;
assign lf27ff4 = ba8cf16 & ~fc8cb48;



always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ph28d29 <= 1'b0;      kq4694e <= 1'b0;   end   else begin      ph28d29 <= cz5ea31;      kq4694e <= gof518d;   end
end


assign byfe9d0 = fc2fdc9 & ~zk42a1f & ~wj7f465;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      hq832a9 <= 1'b0;   end   else if (lf13d57) begin      hq832a9 <= 1'b1;   end   else if (dmc0660) begin      hq832a9 <= 1'b0;   end
end
assign wy98083 = lf13d57 | tuc027b ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ks3105a       <= 1'b0;   end   else if (dmc0660) begin      ks3105a       <= 1'b0;   end   else if (gofa2c0 && ea43b92) begin      ks3105a       <= 1'b1;   end
end


assign lqf4e82 = fc2fdc9 & ~zk42a1f & wj7f465;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      lf1954b <= 1'b0;   end   else if (zz9eabf) begin      lf1954b <= 1'b1;   end   else if (bn3302) begin      lf1954b <= 1'b0;   end
end
assign lqc0419 = zz9eabf | xy13da ;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      cb23cea       <= 1'b0;   end   else if (bn3302) begin      cb23cea       <= 1'b0;   end   else if (cmd1601 && ne48772 ) begin      cb23cea       <= 1'b1;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      cmd_rdy         <= 1'b0;      bn19cfa       <= 1'b0;      uice7d6      <= 1'b0;      ne73eb1  <= 1'b0;      an9f58a <= 1'b0;   end   else  begin      cmd_rdy       <= ecb9c46 & ~gb4bd44;
      ne73eb1  <= ecb9c46 & ~gb4bd44;
      an9f58a <= ecb9c46;      bn19cfa       <= alc97a8;      uice7d6      <= alc97a8;   end
end







assign je35f16 = (~go43e8b  | ld457a8) & (~gofa2c0 | dmc0660);
assign zzaf8b3 = (~wy1f458  | ks2bd46) & (~cmd1601 | bn3302);

assign fpa5ce2 = (~fp8b009  | ld457a8) & (~tuc027b | dmc0660);
assign ec2e716 = (~xw5804f  | ks2bd46) & (~xy13da | bn3302);
assign oh2973  =  ym21ba0 | tj84444;
assign je14b9c  =  uvf725e & wj5b4a3 & (byf4b2c | sj2cb1e | ux2c7a4 | dm63d25);
assign mefab84 = ld457a8 | ks2bd46 | cz5ea31 | gof518d;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      faeec78           <= 1'b0;   end   else begin      faeec78           <= zkee484;   end
end
assign gq31a9b = (((lfbf3ed & ~zk695c1) | zkee484) & ~zz22226 & ~je11136 &                      ((~ir1dc90 & ~dzd2ffa & gq889b3)   |               (~ir1dc90 &  dzd2ffa & gb44d99)   |               ( ir1dc90 & ~dzd2ffa & gb44d99)   |                       ( ir1dc90 &  dzd2ffa & gq889b3)                      ));
always @(negedge rst_n or posedge clk) begin   if (!rst_n)      zm2052e     <= 1'b0;   else if (fada5ff && (byf4b2c || dm63d25 || sj2cb1e || ux2c7a4))      zm2052e     <= 1'b1;   else if (vka8c68 || go46342 || co8d089 || ui68448)      zm2052e     <= 1'b0;
end





`ifdef CS_WIDTH_1

always @ (tw1e92b) begin   ep182fb[0] = 0;
end

`endif




`ifdef CS_WIDTH_2

always @ (tw1e92b) begin   ep182fb = 2'h3;   case (tw1e92b[3])        1'b0 : ep182fb[0] = 0;      1'b1 : ep182fb[1] = 0;   endcase
end

`endif




`ifdef CS_WIDTH_4

always @ (tw1e92b) begin   ep182fb = 4'hf;   case (tw1e92b[4:3])        2'b00 : ep182fb[0] = 0;      2'b01 : ep182fb[1] = 0;      2'b10 : ep182fb[2] = 0;      2'b11 : ep182fb[3] = 0;   endcase
end

`endif









always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        ned04d3            <= 2'b0;        mrc3e65           <= 1'b0;        zz134d9         <= 4'h0;        ri9cce8            <= 3'b0;        gb6583d           <= 2'b0;        rv9b3a4      <= 3'b0;        ip60f65         <= 1'b0;        ep7b2c              <= 1'b0;        jr3d964          <= 1'b0;        qgce934         <= 3'b0;        fn749a0        <= 2'b0;        uvd9d26       <= 1'b0;        sja4d07      <= 4'b0;        gd2683c       <= 2'b0;        qi341e5   <= 3'b0;        zza0f28     <= 1'b0;        kf7946          <= 1'b0;        ep3ca34      <= 1'b0;
    end    else if (dzecb27) begin        ned04d3            <= ps482da[1:0];        mrc3e65           <= ps482da[3];        zz134d9         <= {ps482da[6:4],ps482da[2]};        ri9cce8            <= ps482da[11:9];        gb6583d           <= wj416d2[4:3];          rv9b3a4      <= vkb694[5:3];        ip60f65         <= ps482da[12];        ep7b2c              <= wj416d2[9]  | wj416d2[6] | wj416d2[2];        jr3d964          <= vkb694[10] | vkb694[9];        qgce934         <= 3'b001;                  fn749a0        <= 2'b00;                   uvd9d26       <= 1'b0;                    sja4d07      <= 4'b0010;        gd2683c       <= 2'b00;                   qi341e5   <= 3'b000;                  zza0f28     <= 1'b0;        kf7946          <= 1'b0;        ep3ca34      <= 1'b0;
    end    else begin                 if ((hoda51c == `LOAD_MR) && fada5ff && (wya38bf[17:16] == 2'b00)) begin            fn749a0    <= wya38bf[1:0];            uvd9d26   <= wya38bf[3];            sja4d07  <= {wya38bf[6:4],wya38bf[2]};            qgce934     <= wya38bf[11:9];            zza0f28 <= wya38bf[12];         end
         if ((hoda51c == `LOAD_MR) && fada5ff && (wya38bf[17:16] == 2'b01)) begin            gd2683c   <= wya38bf[4:3];            kf7946      <= wya38bf[9] | wya38bf[6] | wya38bf[2];         end     if ((hoda51c == `LOAD_MR) && fada5ff && (wya38bf[17:16] == 2'b10)) begin            qi341e5 <= wya38bf[5:3];            ep3ca34    <= wya38bf[10] | wya38bf[9];         end         if (vka8c68 && (cz5ea24 == 2'b00)) begin            ned04d3        <= enf8ef1;            mrc3e65       <= hdbfe3b;            zz134d9     <= pfc778d;            ri9cce8        <= goff1de;            ip60f65     <= thd7388 | jcf1bc0;         end         if (vka8c68 && (cz5ea24 == 2'b01)) begin            gb6583d       <= uk3bc6f;            ep7b2c          <= wy8de03;         end         if (vka8c68 && (cz5ea24 == 2'b10)) begin            rv9b3a4  <= gode378;            jr3d964      <= en6f019;         end    end
end

always @(negedge rst_n or posedge clk) begin   if (!rst_n)      mefac54   <= 2'b00;   else if ((hoda51c == `LOAD_MR) && fada5ff)      mefac54   <= wya38bf[17:16];
end
always @ (ntaaff8) begin   case (ntaaff8)    4'b0010 : sw1f32c = 4'h3;    4'b0100 : sw1f32c = 4'h3;    4'b0110 : sw1f32c = 4'h4;    4'b1000 : sw1f32c = 4'h4;    4'b1010 : sw1f32c = 4'h5;    4'b1100 : sw1f32c = 4'h5;    default : sw1f32c = 4'h3;   endcase
end
assign dzf9960 = ntaaff8[1];
always @ (gb6fe8c) begin   case (gb6fe8c)    3'b001 : ldf9017 = 4'h3;    3'b010 : ldf9017 = 4'h3;    3'b011 : ldf9017 = 4'h4;    3'b100 : ldf9017 = 4'h4;    3'b101 : ldf9017 = 4'h5;    3'b110 : ldf9017 = 4'h6;    default: ldf9017 = 4'h3;   endcase
end
always @ (zk57fc7) begin   case (zk57fc7)    3'b000 : oh2c1ec = 3'h3;    3'b001 : oh2c1ec = 3'h3;    3'b010 : oh2c1ec = 3'h4;    3'b011 : oh2c1ec = 3'h4;    default: oh2c1ec = 3'h3;   endcase
end
assign gbccb07 = ~zk57fc7[0];




assign mec41ac = (fc2fdc9 && !sw150fa) ? lf94717 : 4'h0 ;
always @ (nef495b) begin    rt7efa4              = 0;    kdf7d26             = 0;    cbbe934        = 0;    tuf49a4        = 0;    ana4d23      = 0;    sj2691c      = 0;    ux2394d          = 0;    bn1ca6d               = 0;    ie348e5       = 0;    qva4729      = 0;    uie536e        = 0;    case (nef495b)          `CDL_READ   : begin                         rt7efa4      = 1;            an29b71    = 0;        end        `CDL_READA  : begin                         ux2394d  = 1;            rt7efa4      = 1;            an29b71    = 0;        end        `CDL_WRITE  : begin                         kdf7d26     = 1;            an29b71    = 0;        end        `LOAD_MR : begin                            bn1ca6d       = 1;            uie536e= 1;            an29b71    = 0;        end        `CDL_WRITEA : begin                         ux2394d  = 1;            kdf7d26     = 1;            an29b71    = 0;        end        `SEFL_REF_ENTRY : begin                     ana4d23  = 1;            uie536e    = 1;            an29b71        = 0;        end	`SEFL_REF_EXIT : begin                      sj2691c  = 1;            uie536e    = 1;            an29b71        = 0;        end        `PWRDN_ENTRY  : begin                       cbbe934    = 1;            uie536e    = 1;            an29b71        = 0;        end        `PWRDN_EXIT  : begin                         tuf49a4    = 1;            uie536e    = 1;            an29b71        = 0;        end        `ZQ_CAL_LONG : begin                         ie348e5   = 1;            uie536e    = 1;            an29b71        = 0;        end        `ZQ_CAL_SHORT : begin                        qva4729  = 1;            uie536e    = 1;            an29b71        = 0;        end        default : begin            rt7efa4          = 0;            kdf7d26         = 0;            cbbe934    = 0;            tuf49a4    = 0;            ana4d23  = 0;            sj2691c  = 0;            ux2394d      = 0;            bn1ca6d           = 0;            uie536e    = 0;            ie348e5   = 0;            qva4729  = 0;            an29b71        = 1;        end    endcase
end





assign tw20d60 = (fc2fdc9 && sw150fa) ? lf94717 : 4'h0 ;
always @ (epa4adb) begin    vi4db8c              = 0;    ui6dc63             = 0;    bl6e318        = 0;    fn718c6        = 0;    ri8c637      = 0;    lq631ba      = 0;    jr374a4          = 0;    zzba527               = 0;    cb18dd2       = 0;    enc6e94      = 0;    bld293f        = 0;    case (epa4adb)          `CDL_READ   : begin                         vi4db8c      = 1;            xl949ff    = 0;        end        `CDL_READA  : begin                         jr374a4  = 1;            vi4db8c      = 1;            xl949ff    = 0;        end        `CDL_WRITE  : begin                         ui6dc63     = 1;            xl949ff    = 0;        end        `LOAD_MR : begin                            zzba527       = 1;            bld293f= 1;            xl949ff    = 0;        end        `CDL_WRITEA : begin                         jr374a4  = 1;            ui6dc63     = 1;            xl949ff    = 0;        end        `SEFL_REF_ENTRY : begin                     ri8c637  = 1;            bld293f    = 1;            xl949ff        = 0;        end	`SEFL_REF_EXIT : begin                          lq631ba  = 1;            bld293f    = 1;            xl949ff        = 0;        end        `PWRDN_ENTRY  : begin                       bl6e318    = 1;            bld293f    = 1;            xl949ff        = 0;        end        `PWRDN_EXIT  : begin                        fn718c6    = 1;            bld293f    = 1;            xl949ff        = 0;        end        `ZQ_CAL_LONG : begin                        cb18dd2   = 1;            bld293f    = 1;            xl949ff        = 0;        end        `ZQ_CAL_SHORT : begin                       enc6e94  = 1;            bld293f    = 1;            xl949ff        = 0;        end        default : begin            vi4db8c          = 0;            ui6dc63         = 0;            bl6e318    = 0;            fn718c6    = 0;            ri8c637  = 0;            lq631ba  = 0;            jr374a4      = 0;            zzba527           = 0;            bld293f    = 0;            cb18dd2   = 0;            enc6e94  = 0;            xl949ff        = 1;        end    endcase
end



always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        wjc9a65               <= 1'b0;        uvd934c              <= 1'b0;        dm4d32d           <= 1'b0;        ie34c66         <= 1'b0;        oua6331         <= 1'b0;        of60d31       <= 1'b0;        bn698c       <= 1'b0;        uvc397a        <= 1'b0;        hd1cbd4       <= 1'b0;        ym31988                <= 1'b0;        suf01af             <= 1'b0;    end    else if (fc2fdc9 && !sw150fa)begin        wjc9a65               <= db2d21c;        uvd934c              <= xw690e7;        dm4d32d           <= byd0d0a;        ie34c66         <= by4873b;        oua6331         <= me439da;        of60d31       <= vx1ced0;        bn698c       <= ale7686;        uvc397a        <= qi3b434;        hd1cbd4       <= fada1a1;        ym31988                <= ri86852;        suf01af             <= wla1490 ;    end
end
always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        jr16665               <= 1'b0;        ipe2ccc              <= 1'b0;        cob332e           <= 1'b0;        xyb404         <= 1'b0;        nr5a023         <= 1'b0;        aa882d0       <= 1'b0;        gb41680       <= 1'b0;        zzafd1e        <= 1'b0;        th7e8f7       <= 1'b0;        ned011e                <= 1'b0;        oh80d78             <= 1'b0;    end        else if (fc2fdc9 && sw150fa) begin        jr16665               <= oua485;        ipe2ccc              <= rg52429;        cob332e           <= ph8497e;        xyb404         <= ou9214a;        nr5a023         <= sj90a50;        aa882d0       <= yz85284;        gb41680       <= mt29424;        zzafd1e        <= th4a125;        th7e8f7       <= hb5092f;        ned011e                <= uk24bf7;        oh80d78             <= do2fdc2 ;    end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      wjd62a0    <= 1'b0;   else if (bldda2b)      wjd62a0    <= 1'b1;   else if (dzecb27)      wjd62a0    <= 1'b0;   else      wjd62a0    <= gof5125;
end






















always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin


`ifdef EXT_AUTO_REF
       swb3366       <= 1'b0;


`else
       ri99b31          <= 16'b1;       vvcd98a      <= 1'b0;       vi6cc57    <= 1'b0;       ho662ba    <= 1'b0;       uk315d2         <= 1'b0;       ep8ae90           <= 16'd0;       lq57484       <= `AR_CNT;


`endif
       ph6bc5       <= `AR_CNT;       fp845f4        <= 1'b0;       rv22fa6       <= 1'b0;       wl908be           <= 1'b0;       cb17d37         <= 1'b0;   end   else begin
      cb17d37         <= ((aa31a11 | cbdd00)) & ~co8d089;


`ifdef EXT_AUTO_REF  //----------------------------
       swb3366 <= ext_auto_ref;       if (vid5c20 && !cbdd00) begin          ph6bc5   <= yxedfd1;          fp845f4    <= 1'b1;       end       else if (su68af5) begin          fp845f4     <= 1'b0;       end       else begin          fp845f4    <= qgc4374;       end                       if (vid5c20 && !cbdd00) begin          rv22fa6   <= 1'b1;       end       else if (wjed15e) begin          rv22fa6   <= 1'b0;       end       else begin          rv22fa6   <= ym21ba0;       end



`else  //internal auto refresh              
       ep8ae90          <= do1120b - `TREFI_ADJUST;
       if (vvcd98a || cbdd00 )           ri99b31  <= 16'd1;       else if ( gof5125 && !vvcd98a && !cbdd00)          ri99b31  <= ri99b31+1;       vi6cc57  <= (ri99b31[7:0]  == ep8ae90[7:0]);       ho662ba  <= (ri99b31[15:8] == {ep8ae90[15:8]});       vvcd98a    <= vi6cc57 & ho662ba;
       if (thf9f6f || uk315d2  || cbdd00) begin          lq57484 <= yxedfd1;       end       else if (vvcd98a && !ux1886e)          lq57484 <= lq57484-1;
       if (yxedfd1 == 4'b0001)          uk315d2   <= vvcd98a;       else          uk315d2   <= (lq57484 == 4'd1) & vvcd98a;
       if (uk315d2 && !cbdd00) begin          ph6bc5   <= yxedfd1;          fp845f4    <= 1'b1;       end       else if (su68af5) begin          fp845f4    <= 1'b0;       end       else begin          fp845f4    <= qgc4374;       end       if (uk315d2 && !cbdd00) begin          rv22fa6   <= 1'b1;       end       else if (wjed15e) begin          rv22fa6   <= 1'b0;       end       else begin          rv22fa6   <= ym21ba0;       end


`endif

      wl908be       <= swac1a6;   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      swac1a6         <= 1'b0;   else if (ne48772 && ea43b92 && !alc97a8 && !fada5ff && !aa5fb9)      swac1a6         <= qgc4374;   else if (su68af5)      swac1a6         <= 1'b0;   else      swac1a6         <= swac1a6;
end


`ifdef EXT_AUTO_REF  //
   assign vid5c20   = ext_auto_ref & ~swb3366;   assign ext_auto_ref_ack = wjed15e;   assign wyb9986        = vid5c20;

`else              
   assign wyb9986        = swac1a6 & ~ux1886e;

`endif












always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      en5b269         <= 1'b0;      wwcb64d          <= 1'b0;   end   else begin      if (su68af5 && end96c9 && !zz919e2 ) begin         en5b269         <= 1'b1;         wwcb64d      <= 1'b0;      end      else if (su68af5 && end96c9 && zz919e2 && !mece231 ) begin         en5b269         <= 1'b1;         wwcb64d      <= 1'b1;      end      else if (su68af5 && end96c9 && zz919e2 && mece231  && cob332e) begin         en5b269         <= 1'b1;         wwcb64d      <= 1'b0;      end      else if (su68af5 && end96c9 && zz919e2 && mece231  && !cob332e) begin         en5b269         <= 1'b0;         wwcb64d      <= 1'b0;      end      else if (aa5fb9 && !wj7f465) begin         wwcb64d      <= (sufae71 & wy88c4e) | (~sufae71 & yx65a43[2]);         en5b269         <= (~sufae71 | wy88c4e) &                                (db2d21c | xw690e7);      end   end
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ux3c599         <= 1'b0;      qg678b3          <= 1'b0;   end   else begin      if (su68af5 && ba8cf16  && !ld55834 ) begin         ux3c599         <= 1'b1;         qg678b3      <= 1'b0;      end      else if (su68af5 && ba8cf16  && ld55834 && !dz71189 ) begin         ux3c599         <= 1'b1;         qg678b3      <= 1'b1;      end      else if (su68af5 && ba8cf16  && ld55834 && dz71189  && dm4d32d) begin         ux3c599         <= 1'b1;         qg678b3      <= 1'b0;      end      else if (su68af5 && ba8cf16 && ld55834 && dz71189  && !dm4d32d) begin         ux3c599         <= 1'b0;         qg678b3      <= 1'b0;      end      else if (aa5fb9 && wj7f465) begin         qg678b3      <= (sufae71 & wy88c4e) | (~sufae71 & yx65a43[2]);         ux3c599         <= (~sufae71 | wy88c4e) &                                (oua485 | rg52429);      end   end
end

`ifdef CS_WIDTH_4
   assign pf552fa = tw1e92b;

`endif



`ifdef CS_WIDTH_2
   assign pf552fa = {1'b0,tw1e92b};

`endif



`ifdef CS_WIDTH_1
   assign pf552fa = {2'b00,tw1e92b};

`endif


assign coa97d7 = fada5ff & ph19817;
row_addr_tab vie46c9 (     .RdAddress    (pf552fa),     .WrAddress    (pf552fa),     .Data         (fnd7330),     .WrClock      (clk),     .WrClockEn    (coa97d7),     .WE           (1'b1),     .Q            (ba20d7c)
);
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      bycaa5f  <= {`ROW_WIDTH{1'b0}};   else      bycaa5f  <= xj7121d;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      al441af  <= {`ROW_WIDTH{1'b0}};   else      al441af  <= wya38bf[`ADDR_WIDTH-1:`BSIZE+`COL_WIDTH];
end



assign zz9b220 = |( ip4e243[7:0] ^ fp9ed2[7:0]) ? 1'b1 : 1'b0;
assign gbd9106 = |( ip4e243[`ROW_WIDTH - 1 :8] ^ fp9ed2[`ROW_WIDTH - 1 :8]) ? 1'b1 : 1'b0;
assign su53644  = cm46271 | uk31389;




assign  zxdd0b2 = 3'b0;
assign ym8d4d9 = ~(~wj7f465 & wy88c4e);
assign qt6a6c8 = ~( wj7f465 & wy88c4e);





`ifdef CS_WIDTH_1

always @ (tw1e92b) begin   fpa0925 = 8'b0;   case (tw1e92b)        3'b000 : fpa0925[0] = 1;      3'b001 : fpa0925[1] = 1;      3'b010 : fpa0925[2] = 1;      3'b011 : fpa0925[3] = 1;      3'b100 : fpa0925[4] = 1;      3'b101 : fpa0925[5] = 1;      3'b110 : fpa0925[6] = 1;      3'b111 : fpa0925[7] = 1;      default : fpa0925 = 8'b0;   endcase
end

`endif




`ifdef CS_WIDTH_2

always @ (tw1e92b) begin   fpa0925 = 16'b0;
   case (tw1e92b)        4'b0000 : fpa0925[0] = 1;      4'b0001 : fpa0925[1] = 1;      4'b0010 : fpa0925[2] = 1;      4'b0011 : fpa0925[3] = 1;      4'b0100 : fpa0925[4] = 1;      4'b0101 : fpa0925[5] = 1;      4'b0110 : fpa0925[6] = 1;      4'b0111 : fpa0925[7] = 1;      4'b1000 : fpa0925[8] = 1;      4'b1001 : fpa0925[9] = 1;      4'b1010 : fpa0925[10] = 1;      4'b1011 : fpa0925[11] = 1;      4'b1100 : fpa0925[12] = 1;      4'b1101 : fpa0925[13] = 1;      4'b1110 : fpa0925[14] = 1;      4'b1111 : fpa0925[15] = 1;      default : fpa0925 = 16'b0;   endcase
end

`endif




`ifdef CS_WIDTH_4

always @ (tw1e92b) begin   fpa0925 = 32'b0;   case (tw1e92b)        5'b00000 : fpa0925[0] = 1;      5'b00001 : fpa0925[1] = 1;      5'b00010 : fpa0925[2] = 1;      5'b00011 : fpa0925[3] = 1;      5'b00100 : fpa0925[4] = 1;      5'b00101 : fpa0925[5] = 1;      5'b00110 : fpa0925[6] = 1;      5'b00111 : fpa0925[7] = 1;      5'b01000 : fpa0925[8] = 1;      5'b01001 : fpa0925[9] = 1;      5'b01010 : fpa0925[10] = 1;      5'b01011 : fpa0925[11] = 1;      5'b01100 : fpa0925[12] = 1;      5'b01101 : fpa0925[13] = 1;      5'b01110 : fpa0925[14] = 1;      5'b01111 : fpa0925[15] = 1;      5'b10000 : fpa0925[16] = 1;      5'b10001 : fpa0925[17] = 1;      5'b10010 : fpa0925[18] = 1;      5'b10011 : fpa0925[19] = 1;      5'b10100 : fpa0925[20] = 1;      5'b10101 : fpa0925[21] = 1;      5'b10110 : fpa0925[22] = 1;      5'b10111 : fpa0925[23] = 1;      5'b11000 : fpa0925[24] = 1;      5'b11001 : fpa0925[25] = 1;      5'b11010 : fpa0925[26] = 1;      5'b11011 : fpa0925[27] = 1;      5'b11100 : fpa0925[28] = 1;      5'b11101 : fpa0925[29] = 1;      5'b11110 : fpa0925[30] = 1;      5'b11111 : fpa0925[31] = 1;      default : fpa0925 = 32'b0;   endcase
end

`endif


always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      ri35816  <= {`BSIZE{1'b0}};      fc492e   <= {(`CS_WIDTH*8){1'b0}};   end   else if (aa5fb9) begin      ri35816  <= tw1e92b;      fc492e   <= pu250a8;   end
end



assign by738b0 = ~czccc31 & yx65a43[2] & encc0be;
assign hq9c582  = ~thd28e2[3] & ( (~thd28e2[2] & thd28e2[1] & thd28e2[0]) | (thd28e2[2] & ~thd28e2[1] & ~thd28e2[0]));

assign wje2c13 = ~thd28e2[3] & ~thd28e2[2] & ( (~thd28e2[1] & thd28e2[0]) | (thd28e2[1] & ~thd28e2[0])); 

always @ (posedge clk or negedge rst_n) begin    if (!rst_n) begin        epb1504        <= {(`CS_WIDTH*`INT_BANK)-1{1'b0}};    end    else begin       for (mg9dd8f=0; mg9dd8f<`CS_WIDTH*`INT_BANK; mg9dd8f=mg9dd8f+1) begin          casex ({ks97fd7, nt28543[mg9dd8f], cb26ccd, pu250a8[mg9dd8f], mt3666d, ukb336d})           6'b111xxx:   epb1504[mg9dd8f] <= 1'b0;             6'b1xx110:   epb1504[mg9dd8f] <= 1'b0;             6'b1xx101:   epb1504[mg9dd8f] <= 1'b1;             6'bxxx0xx:   epb1504[mg9dd8f] <= qi24a15[mg9dd8f];          default  :   epb1504[mg9dd8f] <= vka8928[mg9dd8f];          endcase       end    end
end



always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      gd8a824        <= {(`CS_WIDTH*`INT_BANK)-1{1'b0}};   end   else begin      if (aa31a11) begin         if (ba8cf16 && !cob332e)            gd8a824        <= pu250a8;         else if (end96c9 && !dm4d32d)            gd8a824        <= pu250a8;         else            gd8a824    <= {(`CS_WIDTH*`INT_BANK){1'b0}};      end   end
end




assign ph6b02 = (swac1a6 & ~ux1886e) | ((byf4b2c | nta5963 | dm63d25) & do89c48);
always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      cz54124           <= {(`CS_WIDTH*`INT_BANK)-1{1'b0}};   end   else begin      if (xy256dc)         cz54124           <= {(`CS_WIDTH*`INT_BANK){1'b0}};      else if (aa31a11)         cz54124	<= ip44942;      else if (su68af5)                  cz54124      <=  ip44942;       
      else if (aa5fb9 & zk42a1f )         cz54124      <= vka8928;   end
end
assign xy86353    = |(qi24a15);   
assign pfc8835 = fada5ff;



`ifdef CS_WIDTH_1

always @ (tw1e92b or qi24a15) begin   case (tw1e92b)        3'b000 : czccc31 = qi24a15[0];      3'b001 : czccc31 = qi24a15[1];      3'b010 : czccc31 = qi24a15[2];      3'b011 : czccc31 = qi24a15[3];      3'b100 : czccc31 = qi24a15[4];      3'b101 : czccc31 = qi24a15[5];      3'b110 : czccc31 = qi24a15[6];      3'b111 : czccc31 = qi24a15[7];      default: czccc31 = 1'b0;   endcase
end

`endif




`ifdef CS_WIDTH_2

always @ (tw1e92b or qi24a15) begin
   case (tw1e92b)        4'b0000 : czccc31 = qi24a15[0];      4'b0001 : czccc31 = qi24a15[1];      4'b0010 : czccc31 = qi24a15[2];      4'b0011 : czccc31 = qi24a15[3];      4'b0100 : czccc31 = qi24a15[4];      4'b0101 : czccc31 = qi24a15[5];      4'b0110 : czccc31 = qi24a15[6];      4'b0111 : czccc31 = qi24a15[7];      4'b1000 : czccc31 = qi24a15[8];      4'b1001 : czccc31 = qi24a15[9];      4'b1010 : czccc31 = qi24a15[10];      4'b1011 : czccc31 = qi24a15[11];      4'b1100 : czccc31 = qi24a15[12];      4'b1101 : czccc31 = qi24a15[13];      4'b1110 : czccc31 = qi24a15[14];      4'b1111 : czccc31 = qi24a15[15];      default : czccc31 = 1'b0;   endcase
end

`endif





`ifdef CS_WIDTH_4


MUX321 qte7d24(	.D0  (cz54124[0]),    .D1  (cz54124[1]),    .D2  (cz54124[2]),    .D3  (cz54124[3]),        .D4  (cz54124[4]),    .D5  (cz54124[5]),    .D6  (cz54124[6]),    .D7  (cz54124[7]),        .D8  (cz54124[8]),    .D9  (cz54124[9]),    .D10 (cz54124[10]),   .D11 (cz54124[11]),        .D12 (cz54124[12]),   .D13 (cz54124[13]),   .D14 (cz54124[14]),   .D15 (cz54124[15]),        .D16 (cz54124[16]),   .D17 (cz54124[17]),   .D18 (cz54124[18]),   .D19 (cz54124[19]),        .D20 (cz54124[20]),   .D21 (cz54124[21]),   .D22 (cz54124[22]),   .D23 (cz54124[23]),        .D24 (cz54124[24]),   .D25 (cz54124[25]),   .D26 (cz54124[26]),   .D27 (cz54124[27]),        .D28 (cz54124[28]),   .D29 (cz54124[29]),   .D30 (cz54124[30]),   .D31 (cz54124[31]),        .SD1 (an18835[0]), .SD2 (an18835[1]), .SD3 (an18835[2]), .SD4 (an18835[3]),	.SD5 (an18835[4]), .Z   (czccc31)        );


`endif


always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      je30c6a  <= 1'b0;   else      je30c6a  <= czccc31;
end
always@* begin ne763c3<={cmd>>1,pua8071[0]};epb1e1b<={addr>>1,pua8071[1]};kf8f0dd<={cmd_burst_cnt>>1,pua8071[2]};kq786ed<=pua8071[3];gbc3768<=pua8071[4];ba1bb45<=pua8071[5];bldda2b<=pua8071[6];wjed15e<=pua8071[7];su68af5<=pua8071[8];ld457a8<=pua8071[9];ks2bd46<=pua8071[10];cz5ea31<=pua8071[11];gof518d<=pua8071[12];vka8c68<=pua8071[13];go46342<=pua8071[14];aa31a11<=pua8071[15];co8d089<=pua8071[16];ui68448<=pua8071[17];dm42241<=pua8071[18];do1120b<={trefi>>1,pua8071[19]};ls8905b<={ar_burst_cnt>>1,pua8071[20]};ps482da<={vx848c3>>1,pua8071[21]};wj416d2<={qi2461f>>1,pua8071[22]};vkb694<={ux230f9>>1,pua8071[23]};wj5b4a3<=pua8071[24];hoda51c<={os46747>>1,pua8071[25]};thd28e2<={oh33a39>>1,pua8071[26]};lf94717<={gq9d1cc>>1,pua8071[27]};wya38bf<={ofe8e61>>1,pua8071[28]};rv1c5f9<={dm4730c>>1,pua8071[29]};yxe2fcf<={ep39863>>1,pua8071[30]};gd17e7d<={ofcc31d>>1,pua8071[31]};lfbf3ed<=pua8071[32];thf9f6f<=pua8071[33];dmcfb7f<=pua8071[34];cm7dbfa<=pua8071[35];yxedfd1<={yz36733>>1,pua8071[36]};gb6fe8c<={ri9cce8>>1,pua8071[37]};wj7f465<=pua8071[38];ayfa32d<={ep182fb>>1,pua8071[39]};god1969<=pua8071[40];fc8cb48<=pua8071[41];yx65a43<={zxdd0b2>>1,pua8071[42]};db2d21c<=pua8071[43];xw690e7<=pua8071[44];by4873b<=pua8071[45];me439da<=pua8071[46];vx1ced0<=pua8071[47];ale7686<=pua8071[48];qi3b434<=pua8071[49];fada1a1<=pua8071[50];byd0d0a<=pua8071[51];ri86852<=pua8071[52];gq34292<=pua8071[53];wla1490<=pua8071[54];oua485<=pua8071[55];rg52429<=pua8071[56];ou9214a<=pua8071[57];sj90a50<=pua8071[58];yz85284<=pua8071[59];mt29424<=pua8071[60];th4a125<=pua8071[61];hb5092f<=pua8071[62];ph8497e<=pua8071[63];uk24bf7<=pua8071[64];vk25fb8<=pua8071[65];do2fdc2<=pua8071[66];zx7ee13<=pua8071[67];wjf709e<=pua8071[68];xyb84f5<=pua8071[69];hbc27aa<=pua8071[70];lf13d57<=pua8071[71];zz9eabf<=pua8071[72];icf55ff<={ned04d3>>1,pua8071[73]};ntaaff8<={zz134d9>>1,pua8071[74]};zk57fc7<={rv9b3a4>>1,pua8071[75]};hdbfe3b<=pua8071[76];goff1de<={qgce934>>1,pua8071[77]};enf8ef1<={fn749a0>>1,pua8071[78]};pfc778d<={sja4d07>>1,pua8071[79]};uk3bc6f<={gd2683c>>1,pua8071[80]};gode378<={qi341e5>>1,pua8071[81]};jcf1bc0<=pua8071[82];wy8de03<=pua8071[83];en6f019<=pua8071[84];ay780cc<=pua8071[85];dmc0660<=pua8071[86];bn3302<=pua8071[87];ph19817<=pua8071[88];encc0be<=pua8071[89];mr605f4<=pua8071[90];oh2fa5<=pua8071[91];kf17d2c<=pua8071[92];qvbe965<=pua8071[93];byf4b2c<=pua8071[94];nta5963<=pua8071[95];sj2cb1e<=pua8071[96];kd658f4<=pua8071[97];ux2c7a4<=pua8071[98];dm63d25<=pua8071[99];tw1e92b<={an18835>>1,pua8071[100]};nef495b<={mec41ac>>1,pua8071[101]};epa4adb<={tw20d60>>1,pua8071[102]};xy256dc<=pua8071[103];wy2b6e3<={ri35816>>1,pua8071[104]};qt5b718<=pua8071[105];kqdb8c4<=pua8071[106];uvdc621<=pua8071[107];xje310d<=pua8071[108];ux1886e<=pua8071[109];qgc4374<=pua8071[110];ym21ba0<=pua8071[111];cbdd00<=pua8071[112];bl6e805<=pua8071[113];jp7402f<=pua8071[114];vxa017e<=pua8071[115];gqbf7<=pua8071[116];aa5fb9<=pua8071[117];fc2fdc9<=pua8071[118];pf7ee4b<=pua8071[119];uvf725e<=pua8071[120];gqb92f5<=pua8071[121];alc97a8<=pua8071[122];gb4bd44<=pua8071[123];cz5ea24<={mefac54>>1,pua8071[124]};gof5125<=pua8071[125];vka8928<={epb1504>>1,pua8071[126]};ip44942<={gd8a824>>1,pua8071[127]};qi24a15<={cz54124>>1,pua8071[128]};pu250a8<={fpa0925>>1,pua8071[129]};nt28543<={fc492e>>1,pua8071[130]};zk42a1f<=pua8071[131];sw150fa<=pua8071[132];baa87d1<={xy25cc0>>1,pua8071[133]};go43e8b<=pua8071[134];wy1f458<=pua8071[135];gofa2c0<=pua8071[136];cmd1601<=pua8071[137];fp8b009<=pua8071[138];xw5804f<=pua8071[139];tuc027b<=pua8071[140];xy13da<=pua8071[141];fp9ed2<={bycaa5f>>1,pua8071[142]};zx4f697<={pf552fa>>1,pua8071[143]};dz7b4bf<=pua8071[144];fada5ff<=pua8071[145];dzd2ffa<=pua8071[146];ks97fd7<=pua8071[147];rvbfeb9<={fnd7330>>1,pua8071[148]};icff5ce<=pua8071[149];sufae71<=pua8071[150];thd7388<=pua8071[151];ecb9c46<=pua8071[152];mece231<=pua8071[153];dz71189<=pua8071[154];wy88c4e<=pua8071[155];cm46271<=pua8071[156];uk31389<=pua8071[157];do89c48<=pua8071[158];ip4e243<={al441af>>1,pua8071[159]};xj7121d<={ba20d7c>>1,pua8071[160]};ba890ee<=pua8071[161];ne48772<=pua8071[162];ea43b92<=pua8071[163];ir1dc90<=pua8071[164];zkee484<=pua8071[165];me72422<=pua8071[166];uk92111<=pua8071[167];oh90888<=pua8071[168];tj84444<=pua8071[169];zz22226<=pua8071[170];je11136<=pua8071[171];gq889b3<=pua8071[172];gb44d99<=pua8071[173];cb26ccd<=pua8071[174];mt3666d<=pua8071[175];ukb336d<=pua8071[176];hq99b69<=pua8071[177];thcdb4a<=pua8071[178];ea6da57<=pua8071[179];ay6d2b8<=pua8071[180];zk695c1<=pua8071[181];end
always@* begin ks1500e[2047]<=addr[0];ks1500e[2046]<=cmd_burst_cnt[0];ks1500e[2044]<=cmd_valid;ks1500e[2040]<=init_start;ks1500e[2032]<=ofly_burst_len;ks1500e[2017]<=wj4e5ce;ks1500e[2013]<=rv22fa6;ks1500e[1990]<=xy25cc0[0];ks1500e[1987]<=wy9d397;ks1500e[1980]<=ie348e5;ks1500e[1979]<=cb17d37;ks1500e[1963]<=jrc766;ks1500e[1957]<=uice7d6;ks1500e[1942]<=an29b71;ks1500e[1932]<=sw2e602;ks1500e[1929]<=qt70814;ks1500e[1926]<=cm72e75;ks1500e[1923]<=pfc8835;ks1500e[1921]<=ux230f9[0];ks1500e[1914]<=fcbd8ce;ks1500e[1913]<=qva4729;ks1500e[1911]<=epbe9bd;ks1500e[1903]<=zxdd0b2[0];ks1500e[1879]<=xjecd9c;ks1500e[1876]<=ir29c0f;ks1500e[1872]<=bld293f;ks1500e[1866]<=ne73eb1;ks1500e[1837]<=vi4db8c;ks1500e[1816]<=jc73010;ks1500e[1810]<=db840a5;ks1500e[1805]<=nr744e9;ks1500e[1799]<=al441af[0];ks1500e[1795]<=rtc8ce8;ks1500e[1783]<=tuf49a4;ks1500e[1780]<=xjec673;ks1500e[1778]<=ux2394d;ks1500e[1775]<=jcf4dec;ks1500e[1770]<=enc6e94;ks1500e[1758]<=rt7efa4;ks1500e[1710]<=xw66ce6;ks1500e[1704]<=ip4e07c;ks1500e[1696]<=xl949ff;ks1500e[1685]<=an9f58a;ks1500e[1679]<=lf13a72;ks1500e[1627]<=ui6dc63;ks1500e[1584]<=wy98083;ks1500e[1573]<=zm2052e;ks1500e[1567]<=ieac0b3;ks1500e[1562]<=zma274e;ks1500e[1557]<=fnd7330[0];ks1500e[1551]<=ba20d7c[0];ks1500e[1548]<=lf1954b;ks1500e[1543]<=os46747[0];ks1500e[1521]<=sw24973;ks1500e[1519]<=ana4d23;ks1500e[1513]<=by6339f;ks1500e[1509]<=bn1ca6d;ks1500e[1504]<=zz9b220;ks1500e[1502]<=wya6f63;ks1500e[1499]<=th5f742;ks1500e[1493]<=kq4694e;ks1500e[1492]<=jr374a4;ks1500e[1469]<=kdf7d26;ks1500e[1466]<=lq631ba;ks1500e[1415]<=ph6b02;ks1500e[1404]<=fpa0925[0];ks1500e[1400]<=qt6a6c8;ks1500e[1398]<=yxe85a1;ks1500e[1377]<=mec41ac[0];ks1500e[1373]<=yz36733[0];ks1500e[1361]<=wj703e5;ks1500e[1359]<=rv1609d;ks1500e[1355]<=gd2683c[0];ks1500e[1349]<=qif967;ks1500e[1344]<=mta4ffe;ks1500e[1343]<=ec82776;ks1500e[1326]<=zza0f28;ks1500e[1323]<=mefac54[0];ks1500e[1310]<=nre9cb9;ks1500e[1301]<=eae59c3;ks1500e[1280]<=fc3ffa7;ks1500e[1279]<=faeec78;ks1500e[1210]<=ep3ca34;ks1500e[1207]<=bl6e318;ks1500e[1199]<=epb1504[0];ks1500e[1193]<=by738b0;ks1500e[1144]<=trefi[0];ks1500e[1120]<=lqc0419;ks1500e[1110]<=ea670c4;ks1500e[1098]<=oh2973;ks1500e[1086]<=mr60599;ks1500e[1076]<=sh415f4;ks1500e[1067]<=wyb9986;ks1500e[1054]<=bn6be2;ks1500e[1048]<=bycaa5f[0];ks1500e[1039]<=oh33a39[0];ks1500e[1026]<=byfe9d0;ks1500e[1023]<=cmd[0];ks1500e[1006]<=fp845f4;ks1500e[995]<=ec24b98;ks1500e[990]<=sj2691c;ks1500e[981]<=pf618ec;ks1500e[978]<=bn19cfa;ks1500e[971]<=uie536e;ks1500e[964]<=wlae102;ks1500e[961]<=gbd9106;ks1500e[960]<=qi2461f[0];ks1500e[957]<=rv37b19;ks1500e[951]<=jcfba16;ks1500e[938]<=vxa5381;ks1500e[936]<=zzba527;ks1500e[891]<=cbbe934;ks1500e[885]<=cb18dd2;ks1500e[839]<=qib9d40;ks1500e[783]<=ri35816[0];ks1500e[778]<=ayfae66;ks1500e[774]<=hq832a9;ks1500e[760]<=fc492e[0];ks1500e[752]<=su53644;ks1500e[749]<=ep182fb[0];ks1500e[746]<=ph28d29;ks1500e[733]<=ri8c637;ks1500e[707]<=tw20d60[0];ks1500e[702]<=cz54124[0];ks1500e[700]<=ym8d4d9;ks1500e[699]<=ri9cce8[0];ks1500e[688]<=an18835[0];ks1500e[679]<=wje2c13;ks1500e[677]<=sja4d07[0];ks1500e[674]<=vx81f2c;ks1500e[671]<=rvb04ee;ks1500e[663]<=qi341e5[0];ks1500e[650]<=dm7cb38;ks1500e[640]<=lf27ff4;ks1500e[639]<=nt13bb1;ks1500e[605]<=kf7946;ks1500e[599]<=wjd62a0;ks1500e[596]<=ec2e716;ks1500e[572]<=yxf7d30;ks1500e[555]<=sref_ext_cmd;ks1500e[513]<=qgffd3a;ks1500e[503]<=wl908be;ks1500e[490]<=ofcc31d[0];ks1500e[482]<=mefab84;ks1500e[480]<=vx848c3[0];ks1500e[419]<=mr75008;ks1500e[389]<=fn5f5cc;ks1500e[387]<=wy10655;ks1500e[373]<=mee51a5;ks1500e[366]<=fn718c6;ks1500e[351]<=gd8a824[0];ks1500e[350]<=gq31a9b;ks1500e[344]<=wjc3106;ks1500e[339]<=hq9c582;ks1500e[338]<=fn749a0[0];ks1500e[298]<=fpa5ce2;ks1500e[251]<=lf1666c;ks1500e[245]<=ep39863[0];ks1500e[241]<=an9f570;ks1500e[240]<=ar_burst_cnt[0];ks1500e[209]<=ou973a8;ks1500e[194]<=qt4beb9;ks1500e[193]<=mt20ca;ks1500e[175]<=xy86353;ks1500e[172]<=zz38620;ks1500e[169]<=qgce934[0];ks1500e[149]<=je14b9c;ks1500e[125]<=oh2ccd;ks1500e[122]<=dm4730c[0];ks1500e[120]<=zzaf8b3;ks1500e[104]<=ouafa4;ks1500e[97]<=coa97d7;ks1500e[87]<=je30c6a;ks1500e[84]<=uvd9d26;ks1500e[61]<=ofe8e61[0];ks1500e[60]<=je35f16;ks1500e[48]<=pf552fa[0];ks1500e[42]<=rv9b3a4[0];ks1500e[30]<=gq9d1cc[0];ks1500e[21]<=zz134d9[0];ks1500e[10]<=ned04d3[0];ks1500e[5]<=lqf4e82;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule































`timescale 1 ns / 100 ps
module epa1ec7 (

   clk,
   rst_n,
   fn6b76d,
   rtc787e, 
   ir3c3f6, 
   zm1be7e,
   jpf9f9a,
   dz7ed10,
   dzf6886, 
   yzb4436, 
   jea21b4, 
   ks10da2,
   ls86d10,
   mt36882,
   sjb4414,
   nga20a4,
   qi10522,  
   ks82911,
   do14888,
   ira4442,   
   nga7c19, 
   sh7f693, 
   wy88573,
   su5627f,
   nr559a7,
   yzae610,
   fa73084,

   qi98423 ,
   xwc566d ,
   kq59b50  ,
   nt84678 ,
   wj75566 ,
   vxaab34 ,
   hocf1a6 ,
   sw3eba2 ,
   alc6999,
   aa34ccc ,
   coa6661 ,
   ym887d0,
   pu99845,
   encc22a
   );
input              fn6b76d;
input              clk;
input              rst_n;
input              rtc787e;
input              ir3c3f6;
input              zm1be7e;
input              jpf9f9a;
input              dz7ed10;
input              dzf6886;
input              yzb4436;
input              jea21b4;
input              ks10da2;
input              ls86d10;
input              mt36882;
input              sjb4414;
input              ks82911;
input              nga20a4;
input              do14888;
input              qi10522;
input              ira4442;
input              nga7c19 ;
input              sh7f693;
input              wy88573;
input [`AL_WIDTH-1:0] su5627f;
input              nr559a7;
input              yzae610;
input              fa73084;
output             qi98423 ;
output             xwc566d ;
output             kq59b50  ;
output             nt84678 ;
output             wj75566 ;
output             vxaab34 ;
output             hocf1a6 ;
output             sw3eba2 ;
output             alc6999;
output             aa34ccc ;
output             coa6661;
output             ym887d0;
output             pu99845;
output             encc22a;

`define IDLE        0 

`define NOP_C       1 //2

`define PRE         2 //4

`define PRE_WAIT    3 //8

`define ACT         4 //16

`define ACT_WAIT    5 //32

`define WR          6 //64

`define RD          7 //128

`define RDW         8 //256

`define WRW         9
wire                fn6b76d;
wire                clk;
wire                rst_n;
wire [`AL_WIDTH-1:0] su5627f;
reg  [9:0]          ipd9de6, ykcef34;
reg                 qi98423, gqbcd00 ;
reg                 xwc566d, ie3400f ;
reg                 kq59b50, uk3c7  ;
reg                 fc1e38, swf1c3  ;
reg                 nt84678, dzc70c9;
reg                 wj75566, shc327e ;
reg                 vx193f5, enc9faf ;
reg                 vxaab34, nr7ebee ;
reg                 hocf1a6 ;
reg                 vxafbb1, kq7dd8f ;
reg                 sw3eba2, tu763cb ;
reg                 anb1e5b, ep8f2dd ;
reg                 alc6999, sucb76a;
reg                 aa34ccc, dzdda8d ;
reg                 coa6661, sh6a375;
reg                 pu99845, ks8dd64;
reg                 encc22a, al7590f;
reg                 ym887d0, nr643e8;
reg                 uk21f47;
reg                 ukfa38;
reg                 ic7d1c0;
reg                 qte8e00;
reg                 tu47004;
reg                 db38023;
reg                 byc011e;
reg                 ie8f2;
reg                 ri4791;
reg                 ir23c8a;
reg                 hq1e455, shf22aa;
reg                 tj91555;
wire                kf8aaaf;

`ifdef RDIMM 

`else

`endif
reg jp5557c;
reg jraabe7;
reg vv55f3f;
reg xlaf9fe;
reg by7cff7;
reg qte7fbb;
reg tw3fddd;
reg zkfeeea;
reg wjf7752;
reg yzbba95;
reg pfdd4ac;
reg goea567;
reg rg52b38;
reg ux959c3;
reg mgace1c;
reg me670e0;
reg lf38700;
reg ofc3806;
reg yz1d4c2;
reg aye01a7;
reg ukd39;
reg wwf0753;
reg ks34e4e;
reg fca7271;
reg [9 : 0] gd3938a;
reg [9 : 0] alc9c54;
reg kd4e2a5;
reg nr7152d;
reg an8a96e;
reg gb54b74;
reg hda5ba4;
reg xl2dd26;
reg zx6e936;
reg th749b7;
reg ana4dbf;
reg sj26dfc;
reg kf36fe5;
reg bab7f2c;
reg jrbf962;
reg zxfcb16;
reg yke58b7;
reg cb2c5b8;
reg os62dc5;
reg fp16e29;
reg bab714f;
reg lsb8a7b;
reg rgc53db;
reg ir29eda;
reg jp4f6d4;
reg fn7b6a7;
reg uidb53f;
reg rgda9f8;
reg wwd4fc3;
reg doa7e18;
reg tw3f0c3;
reg enf861b;
reg kdc30dc;
reg ir186e5;
reg enc372d;
reg ls1b96d;
reg czdcb6b;
reg [2047:0] ks1500e;
wire [60:0] pua8071;

`define IDLE        0 

`define NOP_C       1 //2

`define PRE         2 //4

`define PRE_WAIT    3 //8

`define ACT         4 //16

`define ACT_WAIT    5 //32

`define WR          6 //64

`define RD          7 //128

`define RDW         8 //256

`define WRW         9

`ifdef RDIMM 

`else

`endif

localparam rt4038b = 61,hq1c5e = 32'hfdffc68b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`define IDLE        0 


`define NOP_C       1 //2


`define PRE         2 //4


`define PRE_WAIT    3 //8


`define ACT         4 //16


`define ACT_WAIT    5 //32


`define WR          6 //64


`define RD          7 //128


`define RDW         8 //256


`define WRW         9


`ifdef RDIMM 


`else


`endif




 

 



`define IDLE        0 



`define NOP_C       1 //2



`define PRE         2 //4



`define PRE_WAIT    3 //8



`define ACT         4 //16



`define ACT_WAIT    5 //32



`define WR          6 //64



`define RD          7 //128



`define RDW         8 //256



`define WRW         9





always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      tj91555 <= 1'b0;   end   else if (vv55f3f) begin      tj91555  <= fca7271;   end
end

assign #0.1 kf8aaaf    = ~(fca7271 ^ ls1b96d);

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      uk21f47   <=  1'b0;   else if (rg52b38 && xwc566d)      uk21f47   <=  1'b1;
   else if (zxfcb16 || qi98423|| gb54b74 || kf36fe5 || wj75566)      uk21f47   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ir23c8a   <=  1'b0;   else if (me670e0 && xwc566d)      ir23c8a   <=  1'b1;
   else if (zxfcb16 || qi98423 || gb54b74 || th749b7 || vxaab34)      ir23c8a   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ic7d1c0   <=  1'b0;   else if (by7cff7)      ic7d1c0   <=  1'b1;   else if (kf36fe5 || qi98423)      ic7d1c0   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      qte8e00   <=  1'b0;   else if (vv55f3f)      qte8e00   <=  1'b1;   else if (gb54b74 || qi98423)      qte8e00   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      tu47004   <=  1'b0;   else if (xlaf9fe)      tu47004   <=  1'b1;   else if (th749b7 || qi98423)      tu47004   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      db38023   <=  1'b0;   else if (jraabe7)      db38023   <=  1'b1;   else if (zxfcb16 || qi98423)      db38023   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ukfa38   <=  1'b0;   else if (aye01a7 )      ukfa38   <=  1'b1;   else      ukfa38   <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      byc011e   <=  1'b0;   else if (pfdd4ac)      byc011e   <=  1'b1;   else if (gb54b74 || qi98423)      byc011e   <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ie8f2   <=  1'b0;   else if (zkfeeea)      ie8f2   <=  1'b1;   else if (gb54b74)      ie8f2   <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ri4791   <=  1'b0;   else if (wjf7752)      ri4791   <=  1'b1;   else if (zxfcb16 || gb54b74)      ri4791   <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      ipd9de6   <=  10'b0;      qi98423           <=  1'b0;      xwc566d            <=  1'b0;      kq59b50            <=  1'b0;      fc1e38         <=  1'b0;      nt84678       <=  1'b0;      wj75566             <=  1'b0;      vx193f5          <=  1'b0;      vxaab34             <=  1'b0;      vxafbb1          <=  1'b0;      sw3eba2            <=  1'b0;      anb1e5b         <=  1'b0;      alc6999       <=  1'b0;      aa34ccc            <=  1'b0;      coa6661            <=  1'b0;      pu99845        <=  1'b0;      encc22a        <=  1'b0;      ym887d0      <=  1'b1;      hq1e455       <=  1'b0;  end  else begin      ipd9de6   <=  alc9c54;      qi98423           <=  kd4e2a5;      xwc566d            <=  nr7152d;      kq59b50            <=  an8a96e;      fc1e38         <=  hda5ba4;      nt84678       <=  xl2dd26;      wj75566             <=  zx6e936;      vx193f5          <=  ana4dbf;      vxaab34             <=  sj26dfc;      vxafbb1          <=  bab7f2c;      sw3eba2            <=  jrbf962;      anb1e5b         <=  yke58b7;      alc6999       <=  cb2c5b8;      aa34ccc            <=  os62dc5;      coa6661            <=  fp16e29;      pu99845        <=  bab714f;      encc22a        <=  lsb8a7b;      ym887d0      <=  rgc53db;      hq1e455       <=  enc372d;  end end





always @ (gd3938a or jp5557c or jraabe7 or vv55f3f  or kdc30dc or         xlaf9fe or by7cff7  or yz1d4c2 or jp4f6d4 or fn7b6a7         or qte7fbb or tw3fddd or uidb53f         or yzbba95  or goea567 or         me670e0 or ux959c3 or lf38700 or mgace1c or ofc3806         or pu99845 or encc22a  or ukd39 or rgda9f8         or wwd4fc3 or su5627f or wwf0753         or ir29eda or doa7e18 or tw3f0c3         or xwc566d or qi98423 or ym887d0 or alc6999 or nt84678 or ir186e5) begin
ykcef34 = 'b0;
nr7ebee = 1'b0;
hocf1a6 = 1'b0;
kq7dd8f = 1'b0;
shc327e = 1'b0;
enc9faf = 1'b0;
tu763cb = 1'b0;
ep8f2dd = 1'b0;
uk3c7 = 1'b0;
swf1c3 = 1'b0;
dzdda8d = 1'b0;
sh6a375 = 1'b0;
shf22aa = 1'b0;
ie3400f = xwc566d;
gqbcd00 = qi98423;
nr643e8 = ym887d0;
ks8dd64 = pu99845;
al7590f = encc22a;
sucb76a = alc6999;
dzc70c9 = nt84678;
case (1)        gd3938a[`IDLE] : begin         gqbcd00 = 1'b1;         ie3400f = 1'b0;         uk3c7  = 1'b0;         swf1c3  = 1'b0;         dzc70c9=1'b0;         shc327e = 1'b0;         enc9faf = 1'b0;         nr7ebee = 1'b0;         hocf1a6 = 1'b0;         kq7dd8f = 1'b0;         tu763cb = 1'b0;         ep8f2dd = 1'b0;         sucb76a = 1'b0;         dzdda8d = 1'b0;         sh6a375 = 1'b0;         ks8dd64 = 1'b0;         al7590f = 1'b0;         nr643e8 = 1'b1;         shf22aa = 1'b0;         if (jp5557c) begin              ykcef34[`NOP_C] = 1'b1;              ie3400f = 1'b1;              gqbcd00 = 1'b0;              nr643e8 = 1'b0;         end         else ykcef34[`IDLE] = 1'b1;      end                         gd3938a[`NOP_C]: begin       if (jraabe7 || wwd4fc3)  begin              if (pu99845 && (goea567 || ir29eda) ) begin                 ykcef34[`PRE] = 1'b1;                 ie3400f = 1'b0;                 tu763cb = 1'b1;                 ep8f2dd = 1'b1;                 ks8dd64 = 1'b0;                 nr643e8 = 1'b0;              end
             else if (encc22a && (me670e0 || kdc30dc) && (wjf7752 || enf861b)) begin                 ykcef34[`PRE] = 1'b1;                 ie3400f = 1'b0;                 tu763cb = 1'b1;                 ep8f2dd = 1'b1;                 al7590f = 1'b0;                 nr643e8 = 1'b0;              end              else if (!pu99845 && !encc22a) begin                 ykcef34[`PRE] = 1'b1;                 ie3400f = 1'b0;                 tu763cb = 1'b1;                 ep8f2dd = 1'b1;                 nr643e8 = 1'b0;              end              else begin                ykcef34[`NOP_C] = 1'b1;                ie3400f = 1'b1;              end         end                   else if (vv55f3f || uidb53f) begin
              if (pu99845 && (ux959c3 || !czdcb6b)  && (tw3fddd || tw3f0c3)) begin                 ykcef34[`ACT] = 1'b1;                 ie3400f = 1'b0;                 uk3c7 = 1'b1;                 swf1c3 = 1'b1;                 ks8dd64 = 1'b0;                 nr643e8 = 1'b0;              end
              else if (encc22a && (lf38700 || !czdcb6b) && (tw3fddd || tw3f0c3)) begin                 ykcef34[`ACT] = 1'b1;                 ie3400f = 1'b0;                 uk3c7 = 1'b1;                 swf1c3 = 1'b1;                 al7590f = 1'b0;                 nr643e8 = 1'b0;              end              else if (!pu99845 && !encc22a) begin                 ykcef34[`ACT] = 1'b1;                 ie3400f = 1'b0;                 uk3c7 = 1'b1;                 swf1c3 = 1'b1;                 nr643e8 = 1'b0;              end              else begin                ykcef34[`NOP_C] = 1'b1;                ie3400f = 1'b1;              end        end                 else if (xlaf9fe || rgda9f8) begin           if (pu99845 ) begin                 ykcef34[`WR] = 1'b1;                 ie3400f = 1'b0;                 shc327e = 1'b1;                 enc9faf = 1'b1;                 ks8dd64 = 1'b0;                 nr643e8 = 1'b0;           end           else if (encc22a && ofc3806) begin                 ykcef34[`WR] = 1'b1;                 ie3400f = 1'b0;                 shc327e = 1'b1;                 enc9faf = 1'b1;                 al7590f = 1'b0;                 nr643e8 = 1'b0;           end           else if (!pu99845 && !encc22a) begin                 ykcef34[`WR] = 1'b1;                 ie3400f = 1'b0;                 shc327e = 1'b1;                 enc9faf = 1'b1;                 nr643e8 = 1'b0;           end           else begin                ykcef34[`NOP_C] = 1'b1;                ie3400f = 1'b1;           end        end                 else if (by7cff7 || fn7b6a7) begin          if (pu99845 && mgace1c) begin                 ykcef34[`RD] = 1'b1;                 ie3400f = 1'b0;                 nr7ebee = 1'b1;                 hocf1a6 = 1'b1;                 kq7dd8f = 1'b1;                 ks8dd64 = 1'b0;                 nr643e8 = 1'b0;          end          else if (encc22a ) begin                 ykcef34[`RD] = 1'b1;                 ie3400f = 1'b0;                 nr7ebee = 1'b1;                 hocf1a6 = 1'b1;                 kq7dd8f = 1'b1;                 al7590f = 1'b0;                 nr643e8 = 1'b0;          end          else if (!pu99845 && !encc22a ) begin                 ykcef34[`RD] = 1'b1;                 ie3400f = 1'b0;                 nr7ebee = 1'b1;                 hocf1a6 = 1'b1;                 kq7dd8f = 1'b1;                 nr643e8 = 1'b0;           end           else begin                ykcef34[`NOP_C] = 1'b1;                ie3400f = 1'b1;           end        end 
        else if (jp4f6d4 && (ir29eda || kdc30dc )) begin	ykcef34[`IDLE]=1'b1;	gqbcd00 = 1'b1;	ie3400f = 1'b0;	nr643e8=1'b1;        end        else begin            ykcef34[`NOP_C] = 1'b1;            ie3400f = 1'b1;        end      end                   gd3938a[`PRE] : begin           ykcef34[`PRE_WAIT] = 1'b1;           tu763cb = 1'b0;           ep8f2dd = 1'b0;           sucb76a = 1'b1;      end                        gd3938a[`PRE_WAIT] : begin         if (vv55f3f || uidb53f) begin            nr643e8 = 1'b0;             if ((yzbba95 || doa7e18) && (tw3fddd || tw3f0c3) )begin                 ykcef34[`ACT]=1'b1;                 uk3c7 = 1'b1;                 swf1c3 = 1'b1;                 sucb76a = 1'b0;           end           else begin              ykcef34[`PRE_WAIT]=1'b1;              sucb76a = 1'b1;           end         end 
         else if (jp4f6d4) begin             if (yzbba95 || doa7e18) begin	ykcef34[`IDLE]=1'b1;	gqbcd00 = 1'b1;	sucb76a = 1'b0;	nr643e8 = 1'b1;             end             else begin              ykcef34[`PRE_WAIT]=1'b1;              sucb76a = 1'b1;             end         end          else begin              ykcef34[`PRE_WAIT]=1'b1;              sucb76a = 1'b1;         end      end                   gd3938a[`ACT] : begin	uk3c7 = 1'b0;	swf1c3 = 1'b0;      if (su5627f == 0)  begin	ykcef34[`ACT_WAIT]=1'b1;	dzc70c9 = 1'b1;      end      else         if (xlaf9fe || rgda9f8) begin              ykcef34[`WR]=1'b1;              shc327e = 1'b1;              enc9faf = 1'b1;              ks8dd64 = 1'b0;         end         else begin              ykcef34[`RD]=1'b1;              nr7ebee = 1'b1;              hocf1a6 = 1'b1;              kq7dd8f = 1'b1;              al7590f = 1'b0;         end      end                       gd3938a[`ACT_WAIT] : begin         if (xlaf9fe || rgda9f8) begin         ks8dd64 = 1'b1;             if (qte7fbb ) begin              ykcef34[`WR]=1'b1;              dzc70c9 = 1'b0;              shc327e = 1'b1;              enc9faf = 1'b1;              ks8dd64 = 1'b0;           end           else begin              ykcef34[`ACT_WAIT]=1'b1;              dzc70c9 = 1'b1;           end
         end          else if (by7cff7  || fn7b6a7) begin         al7590f = 1'b1;           if (qte7fbb  ) begin              ykcef34[`RD]=1'b1;              dzc70c9 = 1'b0;              nr7ebee = 1'b1;              hocf1a6 = 1'b1;              kq7dd8f = 1'b1;              al7590f = 1'b0;           end           else begin              ykcef34[`ACT_WAIT]=1'b1;              dzc70c9 = 1'b1;           end         end          else  begin	ykcef34[`ACT_WAIT]=1'b1;	dzc70c9 = 1'b1;         end
      end                  gd3938a[`WR] : begin         if (ukd39 || yz1d4c2) begin	ykcef34[`NOP_C]=1'b1;	shc327e = 1'b0;	enc9faf = 1'b0;	ie3400f = 1'b1;	ks8dd64 = 1'b1;	al7590f = 1'b0;         end         else begin	ykcef34[`WRW]=1'b1;	shc327e = 1'b0;	enc9faf = 1'b0;	sh6a375 = 1'b1;	ie3400f = 1'b0;         end
      end                           gd3938a[`WRW] : begin         if (yz1d4c2) begin	ykcef34[`NOP_C]= 1'b1;	ie3400f = 1'b1;	sh6a375 = 1'b0;	ks8dd64 = 1'b1;	al7590f = 1'b0;         end         else  begin	ykcef34[`WR]= 1'b1;	shc327e = 1'b1;	enc9faf = 1'b1;	sh6a375 = 1'b0;	ie3400f = 1'b0;         end
      end                  gd3938a[`RD] : begin         if (ukd39 || yz1d4c2) begin	ykcef34[`NOP_C]=1'b1;	ie3400f = 1'b1;	nr7ebee  = 1'b0;	hocf1a6 = 1'b0;	kq7dd8f = 1'b0;	al7590f = 1'b1;	ks8dd64 = 1'b0;         end         else  begin        


`ifdef RDIMM 
           if (!ir186e5 && wwf0753 ) begin              shf22aa = 1'b1;              ykcef34[`RD]=1'b1;           end   else begin              shf22aa = 1'b0;               ykcef34[`RDW]=1'b1;               dzdda8d = 1'b1 ;               nr7ebee = 1'b0;               hocf1a6 = 1'b0;               kq7dd8f = 1'b0;               ks8dd64 = 1'b0;               ie3400f = 1'b0;         end


`else
               ykcef34[`RDW]=1'b1;               dzdda8d = 1'b1 ;               nr7ebee = 1'b0;               hocf1a6 = 1'b0;               kq7dd8f = 1'b0;               ks8dd64 = 1'b0;               ie3400f = 1'b0;


`endif
         end      end                          gd3938a[`RDW] : begin         if (yz1d4c2) begin	ykcef34[`NOP_C]=1'b1;	ie3400f = 1'b1;	dzdda8d = 1'b0;	al7590f = 1'b1;         end
         else begin	ykcef34[`RD]=1'b1;	nr7ebee = 1'b1;	hocf1a6 = 1'b1;	kq7dd8f = 1'b1;	dzdda8d = 1'b0;	ie3400f = 1'b0;         end      end
      default : begin         ykcef34[`IDLE]=1'b1;         gqbcd00 = 1'b1;         ie3400f = 1'b0;
      end
endcase
end

always@* begin jp5557c<=pua8071[0];jraabe7<=pua8071[1];vv55f3f<=pua8071[2];xlaf9fe<=pua8071[3];by7cff7<=pua8071[4];qte7fbb<=pua8071[5];tw3fddd<=pua8071[6];zkfeeea<=pua8071[7];wjf7752<=pua8071[8];yzbba95<=pua8071[9];pfdd4ac<=pua8071[10];goea567<=pua8071[11];rg52b38<=pua8071[12];ux959c3<=pua8071[13];mgace1c<=pua8071[14];me670e0<=pua8071[15];lf38700<=pua8071[16];ofc3806<=pua8071[17];yz1d4c2<=pua8071[18];aye01a7<=pua8071[19];ukd39<=pua8071[20];wwf0753<=pua8071[21];ks34e4e<=pua8071[22];fca7271<=pua8071[23];gd3938a<={ipd9de6>>1,pua8071[24]};alc9c54<={ykcef34>>1,pua8071[25]};kd4e2a5<=pua8071[26];nr7152d<=pua8071[27];an8a96e<=pua8071[28];gb54b74<=pua8071[29];hda5ba4<=pua8071[30];xl2dd26<=pua8071[31];zx6e936<=pua8071[32];th749b7<=pua8071[33];ana4dbf<=pua8071[34];sj26dfc<=pua8071[35];kf36fe5<=pua8071[36];bab7f2c<=pua8071[37];jrbf962<=pua8071[38];zxfcb16<=pua8071[39];yke58b7<=pua8071[40];cb2c5b8<=pua8071[41];os62dc5<=pua8071[42];fp16e29<=pua8071[43];bab714f<=pua8071[44];lsb8a7b<=pua8071[45];rgc53db<=pua8071[46];ir29eda<=pua8071[47];jp4f6d4<=pua8071[48];fn7b6a7<=pua8071[49];uidb53f<=pua8071[50];rgda9f8<=pua8071[51];wwd4fc3<=pua8071[52];doa7e18<=pua8071[53];tw3f0c3<=pua8071[54];enf861b<=pua8071[55];kdc30dc<=pua8071[56];ir186e5<=pua8071[57];enc372d<=pua8071[58];ls1b96d<=pua8071[59];czdcb6b<=pua8071[60];end
always@* begin ks1500e[2047]<=rtc787e;ks1500e[2046]<=ir3c3f6;ks1500e[2044]<=zm1be7e;ks1500e[2040]<=jpf9f9a;ks1500e[2032]<=dz7ed10;ks1500e[2017]<=dzf6886;ks1500e[1987]<=yzb4436;ks1500e[1980]<=ic7d1c0;ks1500e[1963]<=vx193f5;ks1500e[1942]<=ie8f2;ks1500e[1926]<=jea21b4;ks1500e[1921]<=fa73084;ks1500e[1913]<=qte8e00;ks1500e[1903]<=dzdda8d;ks1500e[1879]<=enc9faf;ks1500e[1837]<=ri4791;ks1500e[1805]<=ks10da2;ks1500e[1795]<=ipd9de6[0];ks1500e[1783]<=nr643e8;ks1500e[1778]<=tu47004;ks1500e[1758]<=sh6a375;ks1500e[1710]<=nr7ebee;ks1500e[1679]<=do14888;ks1500e[1627]<=ir23c8a;ks1500e[1562]<=ls86d10;ks1500e[1543]<=ykcef34[0];ks1500e[1519]<=uk21f47;ks1500e[1509]<=db38023;ks1500e[1499]<=ep8f2dd;ks1500e[1469]<=ks8dd64;ks1500e[1466]<=kf8aaaf;ks1500e[1398]<=tu763cb;ks1500e[1373]<=vxafbb1;ks1500e[1310]<=ira4442;ks1500e[1207]<=hq1e455;ks1500e[1144]<=sh7f693;ks1500e[1076]<=mt36882;ks1500e[1039]<=gqbcd00;ks1500e[1023]<=fn6b76d;ks1500e[990]<=ukfa38;ks1500e[981]<=shc327e;ks1500e[971]<=byc011e;ks1500e[960]<=yzae610;ks1500e[951]<=sucb76a;ks1500e[891]<=al7590f;ks1500e[839]<=ks82911;ks1500e[749]<=anb1e5b;ks1500e[733]<=tj91555;ks1500e[699]<=kq7dd8f;ks1500e[572]<=nga7c19;ks1500e[490]<=dzc70c9;ks1500e[480]<=nr559a7;ks1500e[419]<=qi10522;ks1500e[366]<=shf22aa;ks1500e[245]<=swf1c3;ks1500e[240]<=wy88573;ks1500e[209]<=nga20a4;ks1500e[122]<=fc1e38;ks1500e[104]<=sjb4414;ks1500e[61]<=uk3c7;ks1500e[30]<=ie3400f;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule































`timescale 1 ns / 100 ps
module wl364fd (

   clk,
   rst_n,
   fn6b76d,
   
   
   end96c9,			 
   wwcb64d,			 
   en5b269,			 
   uvd934c,			 
   wjc9a65,			 
   dm4d32d,			 
   dm6996a,			 
   su4cb52,			 
   yx65a91,
   db2d48c,
   yx6a467,
   fa5233c,	 
   zz919e2,	 

   
   ba8cf16,			 
   qg678b3,			 
   ux3c599,			 
   ipe2ccc,			 
   jr16665,			 
   cob332e,			 
   tw99971,			 
   kdccb8a,			 
   mr65c55,
   ie2e2ac,
   jp71560,
   ux8ab06,    
   ld55834,	 

   sh7f693,
   ks3105a,
   cb23cea,
   
   su5627f,
   yzb13f8,
   je89fc4,
   fn4fe23,
   uv7f11e,
   mrf88f5,
   ykc47ad,
   mt23d68,
   ng1eb45,
   ldf9017,
   param_trcd, 
   param_trp,  
   param_tras, 
   param_trc,  
   param_trrd,  
   param_trtp, 
   param_twtr,
   vv459d3,
   ls1e755,
   zxf3aaa,
   qi9d556,
   oseaab1,
   jp55589,
   jraac4f,   

   dm6351f,
   ou1a8fa,
   xwc566d,
   kq59b50,
   wj75566,
   vxaab34,
   sw3eba2,
   ym887d0,
   yz8a3aa,
   ww6da7c,
   ho69f01,
   ne7c056,
   nr744e9,			 
   zma274e,
   ieacd3e,
   nr559a7,
   ps66136,
   jr84d93,
   nga7c19,
   uk3e0cb,
   ba832c8,
   do2071d ,
   rd_odd,
   fp1c880      
);
input                           clk;
input                           rst_n;
input                           fn6b76d;
input                           end96c9;
input                           wwcb64d;
input                           en5b269;
input                           uvd934c;
input                           wjc9a65;
input                           dm4d32d;
input [4:0]                     dm6996a;
input [`CS_WIDTH-1:0]           su4cb52;
input [`COL_WIDTH -1:0]         yx65a91;
input [`BANK_WIDTH -1 :0]       db2d48c;
input [`ROW_WIDTH -1:0]         yx6a467;
input                           ba8cf16;
input                           qg678b3;
input                           ux3c599;
input                           ipe2ccc;
input                           jr16665;
input                           cob332e;
input [4:0]                     tw99971;
input [`CS_WIDTH-1:0]           kdccb8a;
input [`COL_WIDTH -1:0]         mr65c55;
input [`BANK_WIDTH -1 :0]       ie2e2ac;
input [`ROW_WIDTH -1:0]         jp71560;
input                           sh7f693;
input                           ks3105a;
input                           cb23cea;
input [2:0]                     fa5233c;
input [2:0]                     ux8ab06;
input                           zz919e2;
input                           ld55834;
input                           vv459d3;
input [`AL_WIDTH-1:0]           su5627f;
input [`CL_WIDTH-1:0]           yzb13f8;
input                           je89fc4;
input [`CWL_WIDTH-1:0]          fn4fe23;
input                           uv7f11e;
input                           mrf88f5;
input                           ykc47ad;
input                           mt23d68;
input                           ng1eb45;
input   [2:0]                   ldf9017;
input                           ls1e755;
input                           zxf3aaa;
input                           qi9d556;
input                           oseaab1;
input                           jp55589 ;
input                           jraac4f ;
input   [`TRCD_WIDTH-1:0]       param_trcd;
input   [`TRP_WIDTH-1:0]        param_trp;
input   [`TRAS_WIDTH-1:0]       param_tras;
input   [`TRC_WIDTH-1:0]        param_trc;
input   [`TRRD_WIDTH-1:0]       param_trrd;
input   [`TRTP_WIDTH-1:0]       param_trtp;
input   [`TWTR_WIDTH-1:0]       param_twtr;
output [`RL_WIDTH-1:0]          dm6351f;
output [`WL_WIDTH-1:0]          ou1a8fa;
output                          xwc566d ;
output                          kq59b50  ;
output                          wj75566 ;
output                          vxaab34 ;
output                          sw3eba2 ;
output                          ym887d0;
output [`CS_WIDTH -1:0]         yz8a3aa;
output [`COL_WIDTH :0]          ww6da7c;
output [`BANK_WIDTH -1 :0]        ho69f01;
output [`ROW_WIDTH -1:0]        ne7c056;
output                          nr744e9;
output                          zma274e;
output [2:0]                    ba832c8;
output                          ieacd3e;
output                          nr559a7;
output                          ps66136;
output                          jr84d93;
output [5:0]                    uk3e0cb;
output                          nga7c19;
output                          do2071d;
output                          rd_odd;
output                          fp1c880;
wire   [5:0]                    uk3e0cb;
wire   [`RL_WIDTH-1:0]          dm6351f;
wire   [`WL_WIDTH-1:0]          ou1a8fa;
wire   [`TRCD_WIDTH-1:0]        param_trcd;
wire   [`TRP_WIDTH-1:0]         param_trp;
wire   [`TRAS_WIDTH-1:0]        param_tras;
wire   [`TRC_WIDTH-1:0]         param_trc;
wire   [`TRTP_WIDTH-1:0]        param_trtp;
wire   [`TWTR_WIDTH-1:0]        param_twtr;
wire   [4:0]                    dm6996a;
wire   [`COL_WIDTH -1:0]        yx65a91;
wire   [`BANK_WIDTH -1 :0]      db2d48c;
wire   [`ROW_WIDTH -1:0]        yx6a467;
wire   [`CS_WIDTH -1:0]         yz8a3aa;
wire   [4:0]                    tw99971;
wire   [`COL_WIDTH -1:0]        mr65c55;
wire   [`BANK_WIDTH -1 :0]      ie2e2ac;
wire   [`ROW_WIDTH -1:0]        jp71560;
wire   [`COL_WIDTH :0]          ww6da7c;
wire   [`BANK_WIDTH -1 :0]      ho69f01;
wire   [`ROW_WIDTH -1:0]        ne7c056;
wire   [`AL_WIDTH-1:0]          su5627f;
wire   [`CL_WIDTH-1:0]          yzb13f8;
wire   [`CWL_WIDTH-1:0]         fn4fe23;
wire   [2:0]                    ldf9017;
wire [`CS_WIDTH-1:0]            kdccb8a;
wire [`CS_WIDTH-1:0]            su4cb52;
reg qg46c2e;
reg jp5557c;
reg uk1f270;
reg thf9380;
reg alc9c06;
reg kd4e035;
reg mr701ad;
reg sj80d6c;
reg [2 : 0] vx6b65;
reg ng35b2e;
reg doad973;
reg tu6cb9a;
reg sh65cd2;
reg ec2e694;
reg by734a0;
reg mt9a503;
reg [2 : 0] hbd281c;
reg tj940e7;
reg aye01a7;
reg fpb5416;
reg ngb8e03;
reg fafe5db;
reg wjf2edb;
reg sw976dc;
reg yzbb6e0;
reg qgdb705;
reg kqdb828;
reg [`TRRD_WIDTH - 1 : 0] uk5068;
reg ic68751;
reg jpc701b;
reg bn380df;
reg lqc06fe;
reg nt37f2;
reg fc1bf97;
reg fadfcbb;
reg [2047:0] ks1500e;
wire [34:0] pua8071;




localparam rt4038b = 35,hq1c5e = 32'hfdffca8b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;




















epa1ec7 xj5a574(
   .clk(clk),   .rst_n(qg46c2e),   .fn6b76d(jp5557c),   .rtc787e(rtc787e),   .ir3c3f6(ir3c3f6),   .zm1be7e(zm1be7e),   .jpf9f9a(jpf9f9a),   .dz7ed10(dz7ed10),   .dzf6886(dzf6886),   .yzb4436(yzb4436),   .jea21b4(jea21b4),   .ks10da2(ks10da2),   .ls86d10(ls86d10),   .mt36882(mt36882),   .sjb4414(sjb4414),   .nga20a4(nga20a4),   .qi10522(qi10522),   .ks82911(ks82911),   .do14888(do14888),   .ira4442(ira4442),   .nga7c19(nga7c19),   .sh7f693(aye01a7),   .wy88573(wy88573),   .su5627f(su5627f),   .nr559a7(nr559a7),   .yzae610(yzae610),   .fa73084(fa73084),
   .qi98423(qi98423) ,   .xwc566d(xwc566d) ,   .kq59b50(kq59b50)  ,   .nt84678(nt84678 ) ,   .wj75566(wj75566 ) ,   .vxaab34(vxaab34 ) ,   .hocf1a6(hocf1a6 ) ,   .sw3eba2(sw3eba2 ) ,   .alc6999(alc6999 ),   .aa34ccc(aa34ccc ) ,   .coa6661(coa6661 ) ,   .ym887d0(ym887d0),   .pu99845(pu99845),   .encc22a(encc22a)   );




ep26022 xy30114(
   .clk(clk),   .rst_n(qg46c2e),   .param_trcd( param_trcd ),   .param_trp( param_trp ),   .param_twr( ldf9017),   .param_tras( param_tras ),   .param_trc( param_trc ),   .param_trrd( uk5068 ),   .param_trtp( param_trtp ),   .param_twtr( param_twtr ),   .ir3c3f6(ir3c3f6),   .kq59b50(kq59b50),   .nt84678(nt84678),   .sw3eba2(sw3eba2),   .alc6999(alc6999),   .xwc566d(xwc566d),   .wj75566(wj75566),   .vxaab34(vxaab34),   .coa6661(coa6661),   .aa34ccc(aa34ccc),   .uk3e0cb(uk3e0cb),   .yzae610(yzae610),   .ls1b119(ls1b119),   .su5627f(su5627f),   .yzb13f8(yzb13f8),   .je89fc4(fafe5db),   .fn4fe23(fn4fe23),   .uv7f11e(wjf2edb),
   .dm6351f(dm6351f),   .ou1a8fa(ou1a8fa),   .dz7ed10(dz7ed10),   .dzf6886(dzf6886),   .yzb4436(yzb4436),   .jea21b4(jea21b4),   .ks10da2(ks10da2),   .ls86d10(ls86d10),   .mt36882(mt36882),   .sjb4414(sjb4414),   .nga20a4(nga20a4),   .qi10522(qi10522),   .ks82911(ks82911),   .do14888(do14888),   .ira4442(ira4442),   .nga7c19(nga7c19),   .wy88573(wy88573),   .do2071d(do2071d),   .rd_odd(rd_odd),   .fp1c880(fp1c880)
);





jea78f2 qv3c793(
   .clk(clk ),   .rst_n(qg46c2e ),   .vv459d3(ic68751) ,      .end96c9(uk1f270 ),
   .wwcb64d(thf9380 ),
   .en5b269(alc9c06 ),
   .uvd934c(kd4e035 ),
   .wjc9a65(mr701ad ),
   .dm4d32d(sj80d6c ),
   .dm6996a(dm6996a ),
   .su4cb52(su4cb52 ),
   .yx65a91(yx65a91 ),   .db2d48c(db2d48c ),   .yx6a467(yx6a467 ),   .ks3105a(fpb5416),   .fa5233c(vx6b65),   .zz919e2(ng35b2e),
      .ba8cf16(doad973 ),
   .qg678b3(tu6cb9a ),
   .ux3c599(sh65cd2 ),
   .ipe2ccc(ec2e694 ),
   .jr16665(by734a0 ),
   .cob332e(mt9a503 ),
   .tw99971(tw99971 ),
   .kdccb8a(kdccb8a ),
   .mr65c55(mr65c55 ),   .ie2e2ac(ie2e2ac ),   .jp71560(jp71560 ),   .ux8ab06(hbd281c),   .ld55834(tj940e7),   .sw3eba2(sw3eba2 ),   .vxaab34(vxaab34 ),      .wj75566(wj75566 ),   .nga7c19(nga7c19 ),   .wy88573(wy88573 ),   .mrf88f5(sw976dc),   .ykc47ad(yzbb6e0),   .mt23d68(qgdb705),   .ng1eb45(kqdb828),   .cb23cea(ngb8e03),   .fp1c880(fp1c880),   .ls1e755(jpc701b),   .zxf3aaa(bn380df),   .qi9d556(lqc06fe),   .oseaab1(nt37f2),   .jp55589(fc1bf97),   .jraac4f(fadfcbb),   .su5627f(su5627f),    .nr744e9(nr744e9 ),
   .zma274e(zma274e ),   .oua3fa5(ir3c3f6 ),   .rtc787e(rtc787e ),   .jpf9f9a(jpf9f9a ),   .zm1be7e(zm1be7e ),   .yzae610(yzae610 ),   .fa73084(fa73084 ),   .ls1b119(ls1b119 ),   .blcd91d(blcd91d ),     .uk3e0cb(uk3e0cb ),   .yz8a3aa(yz8a3aa ),   .ww6da7c(ww6da7c ),   .ho69f01(ho69f01 ),   .ne7c056(ne7c056 ),   .ieacd3e(ieacd3e),   .nr559a7(nr559a7),   .ba832c8(ba832c8),   .ps66136(ps66136),   .jr84d93(jr84d93)   );
always@* begin qg46c2e<=pua8071[0];jp5557c<=pua8071[1];uk1f270<=pua8071[2];thf9380<=pua8071[3];alc9c06<=pua8071[4];kd4e035<=pua8071[5];mr701ad<=pua8071[6];sj80d6c<=pua8071[7];vx6b65<={fa5233c>>1,pua8071[8]};ng35b2e<=pua8071[9];doad973<=pua8071[10];tu6cb9a<=pua8071[11];sh65cd2<=pua8071[12];ec2e694<=pua8071[13];by734a0<=pua8071[14];mt9a503<=pua8071[15];hbd281c<={ux8ab06>>1,pua8071[16]};tj940e7<=pua8071[17];aye01a7<=pua8071[18];fpb5416<=pua8071[19];ngb8e03<=pua8071[20];fafe5db<=pua8071[21];wjf2edb<=pua8071[22];sw976dc<=pua8071[23];yzbb6e0<=pua8071[24];qgdb705<=pua8071[25];kqdb828<=pua8071[26];uk5068<={param_trrd>>1,pua8071[27]};ic68751<=pua8071[28];jpc701b<=pua8071[29];bn380df<=pua8071[30];lqc06fe<=pua8071[31];nt37f2<=pua8071[32];fc1bf97<=pua8071[33];fadfcbb<=pua8071[34];end
always@* begin ks1500e[2047]<=fn6b76d;ks1500e[2046]<=end96c9;ks1500e[2044]<=wwcb64d;ks1500e[2040]<=en5b269;ks1500e[2032]<=uvd934c;ks1500e[2017]<=wjc9a65;ks1500e[1987]<=dm4d32d;ks1500e[1926]<=fa5233c[0];ks1500e[1804]<=zz919e2;ks1500e[1803]<=mrf88f5;ks1500e[1761]<=oseaab1;ks1500e[1560]<=ba8cf16;ks1500e[1558]<=ykc47ad;ks1500e[1550]<=ux8ab06[0];ks1500e[1475]<=jp55589;ks1500e[1464]<=zxf3aaa;ks1500e[1072]<=qg678b3;ks1500e[1069]<=mt23d68;ks1500e[1052]<=ld55834;ks1500e[1023]<=rst_n;ks1500e[902]<=jraac4f;ks1500e[901]<=uv7f11e;ks1500e[880]<=qi9d556;ks1500e[775]<=cob332e;ks1500e[732]<=ls1e755;ks1500e[450]<=je89fc4;ks1500e[387]<=jr16665;ks1500e[366]<=vv459d3;ks1500e[225]<=cb23cea;ks1500e[193]<=ipe2ccc;ks1500e[183]<=param_trrd[0];ks1500e[112]<=ks3105a;ks1500e[96]<=ux3c599;ks1500e[91]<=ng1eb45;ks1500e[56]<=sh7f693;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule
























`timescale 1 ns / 100 ps
module jea78f2 (

   clk,
   rst_n,
   vv459d3,
   
   end96c9,			 
   wwcb64d,			 
   en5b269,			 
   uvd934c,			 
   wjc9a65,			 
   dm4d32d,			 
   dm6996a,			 
   su4cb52,			 
   yx65a91,
   db2d48c,
   yx6a467,		 
   
   ba8cf16,			 
   qg678b3,			 
   ux3c599,			 
   ipe2ccc,			 
   jr16665,			 
   cob332e,			 
   tw99971,			 
   kdccb8a,			 
   mr65c55,
   ie2e2ac,
   jp71560, 
   sw3eba2,
   vxaab34,
   wj75566,
   nga7c19,
   wy88573,
   mrf88f5,
   ykc47ad,
   mt23d68,
   ng1eb45,
   ks3105a,
   cb23cea,
   fa5233c,
   ux8ab06,
   zz919e2,
   ld55834,
   fp1c880,
   ls1e755,
   zxf3aaa,
   qi9d556,
   oseaab1,
   jp55589,
   jraac4f, 
   su5627f,
 
   nr744e9,			 
   zma274e,   
   oua3fa5,
   rtc787e,
   jpf9f9a,
   zm1be7e,
   ba832c8, 
   yzae610,
   fa73084,
   ls1b119,
   blcd91d,
   uk3e0cb,
   yz8a3aa,
   ww6da7c,
   ho69f01,
   ne7c056,
   ieacd3e,
   nr559a7,
   ps66136,
   jr84d93
   );
input                   clk;
input                   rst_n;
input                   end96c9;
input                   wwcb64d;
input                   en5b269;
input                   uvd934c;
input                   wjc9a65;
input                   dm4d32d;
input [4:0]             dm6996a;
input [`CS_WIDTH-1:0]    su4cb52;
input [`COL_WIDTH -1:0] yx65a91;
input [`BANK_WIDTH -1 :0]  db2d48c;
input [`ROW_WIDTH -1:0] yx6a467;
input                   mrf88f5;
input                   ykc47ad;
input                   mt23d68;
input                   ng1eb45;
input                   ba8cf16;
input                   qg678b3;
input                   ux3c599;
input                   ipe2ccc;
input                   jr16665;
input                   cob332e;
input [4:0]             tw99971;
input [`CS_WIDTH-1:0]   kdccb8a;
input [`COL_WIDTH -1:0] mr65c55;
input [`BANK_WIDTH -1 :0]  ie2e2ac;
input [`ROW_WIDTH -1:0] jp71560;
input                   sw3eba2;
input                   vxaab34;
input                   wj75566;
input                   nga7c19;
input                   wy88573;
input                   ks3105a;
input                   cb23cea;
input [2:0]             fa5233c;
input [2:0]             ux8ab06;
input                   zz919e2;
input                   ld55834;
input                   fp1c880;
input                   vv459d3;
input                   ls1e755;
input                   zxf3aaa;
input                   qi9d556;
input                   oseaab1;
input                   jp55589;
input                   jraac4f;
input [`AL_WIDTH-1:0]   su5627f;
output                  nr744e9;
output                  zma274e;
output                  oua3fa5;
output                  rtc787e;
output                  jpf9f9a;
output                  zm1be7e;
output [2:0]            ba832c8;
output                  yzae610;
output                  fa73084;
output                  ls1b119;
output                  blcd91d;
output [5:0]            uk3e0cb;
output [`CS_WIDTH -1 :0]  yz8a3aa;
output [`COL_WIDTH :0]  ww6da7c;
output [`BANK_WIDTH -1 :0]  ho69f01;
output [`ROW_WIDTH -1:0]  ne7c056;
output                   ieacd3e;
output                   nr559a7;
output                   ps66136;
output                   jr84d93;

`define IDLEI    0  // 1d

`define Q0      1   // 2d

`define Q1      2   // 4d

`define ACTI     3  // 8d

`define PREI     4  // 16d

`define RDI      5  // 32 d

`define WRI      6  // 64 d
reg [6:0]               nre6fae, xl37d77;
reg                     ps66136, suf5df4;
reg                     jr84d93, me77d0d;
reg                     ir3c3f6, rgf4344, gda1a22, ohd114 ;
reg                     rtc787e, of44520, lf22904;
reg                     jpf9f9a, yza413a, fc209d5;
reg                     zm1be7e, vx27553, do3aa9e;
reg                     byd54f2, xlaa793;
reg                     ww53c9e, jr9e4f1;
reg                     ipf278e, pu93c75;
reg                     fp9e3ab, byf1d5e;
reg                     hq1e455, shf22aa;
reg                     wlabcf4;
reg                     uv5e7a5;
reg [2:0]               ba832c8;
reg                     yzae610;
reg                     ls1b119;
reg [`CS_WIDTH -1 :0]   yz8a3aa;
reg [5:0]               uk3e0cb;
reg                     vi66ef4;
reg                     jr377a3;
reg                     yzbbd1f;
reg [`COL_WIDTH :0]     ww6da7c;
reg [`BANK_WIDTH -1 :0] ho69f01, swa3f0a;
reg [`ROW_WIDTH -1:0]   ne7c056;
reg [`AL_WIDTH-1:0]     fnfc289;
reg                     ieacd3e;
reg                     nr559a7;
reg                     nr744e9, zma274e;
reg                     al4e66b;
reg                     jc7335d, xy99aeb;
reg                     rtcd75a, nr6bad6;
reg                     blcd91d;
reg [2:0]               jceb5bb;
reg [2:0]               rt5adda;
reg                     fa73084;
wire                    oua3fa5;

`ifdef ECP3_SP2

`else

`endif //SP2

`ifdef ECP3_SP2                                                                   

`else

`endif
reg ic68751;
reg uk1f270;
reg thf9380;
reg alc9c06;
reg kd4e035;
reg mr701ad;
reg sj80d6c;
reg [4 : 0] dz5f4db;
reg [`CS_WIDTH - 1 : 0] kqfa6de;
reg [`COL_WIDTH - 1 : 0] kdd36f1;
reg [`BANK_WIDTH - 1 : 0] nt9b78c;
reg [`ROW_WIDTH - 1 : 0] medbc66;
reg doad973;
reg tu6cb9a;
reg sh65cd2;
reg ec2e694;
reg by734a0;
reg mt9a503;
reg [4 : 0] me43680;
reg [`CS_WIDTH - 1 : 0] xy1b401;
reg [`COL_WIDTH - 1 : 0] psda00a;
reg [`BANK_WIDTH - 1 : 0] dmd0052;
reg [`ROW_WIDTH - 1 : 0] mt80293;
reg tw149c;
reg psfe0ea;
reg vk3fc1d;
reg yz1d4c2;
reg ukd39;
reg sw976dc;
reg yzbb6e0;
reg qgdb705;
reg kqdb828;
reg fpb5416;
reg ngb8e03;
reg [2 : 0] vx6b65;
reg [2 : 0] hbd281c;
reg ng35b2e;
reg tj940e7;
reg jr3df62;
reg jpc701b;
reg bn380df;
reg lqc06fe;
reg nt37f2;
reg fc1bf97;
reg fadfcbb;
reg [`AL_WIDTH - 1 : 0] qtc9e60;
reg [6 : 0] jp4f305;
reg [6 : 0] dm7982f;
reg gbcc17b;
reg cz60bdc;
reg vv55f3f;
reg ba2f721;
reg fn7b90a;
reg shdc856;
reg bye42b4;
reg co215a3;
reg ksad19;
reg go568c8;
reg kfb4641;
reg aaa320c;
reg tj19060;
reg pfc8307;
reg wj4183e;
reg bnc1f5;
reg of60fae;
reg an7d74;
reg aa3eba4;
reg cmf5d20;
reg ir186e5;
reg enc372d;
reg sja406f;
reg je2037d;
reg pu1beb;
reg wldf5b;
reg en6fadd;
reg [`BANK_WIDTH - 1 : 0] ea7d6ed;
reg [`AL_WIDTH - 1 : 0] jceb768;
reg qt5bb42;
reg rtdda15;
reg uved0ae;
reg cm68575;
reg ps42ba9;
reg [2 : 0] qi15d4a;
reg [2 : 0] iraea50;
reg [2047:0] ks1500e;
wire [83:0] pua8071;

`define IDLEI    0  // 1d

`define Q0      1   // 2d

`define Q1      2   // 4d

`define ACTI     3  // 8d

`define PREI     4  // 16d

`define RDI      5  // 32 d

`define WRI      6  // 64 d

`ifdef ECP3_SP2

`else

`endif //SP2

`ifdef ECP3_SP2                                                                   

`else

`endif

localparam rt4038b = 84,hq1c5e = 32'hfdffe06b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`define IDLEI    0  // 1d


`define Q0      1   // 2d


`define Q1      2   // 4d


`define ACTI     3  // 8d


`define PREI     4  // 16d


`define RDI      5  // 32 d


`define WRI      6  // 64 d


`ifdef ECP3_SP2


`else


`endif //SP2


`ifdef ECP3_SP2                                                                   


`else


`endif











`define IDLEI    0  // 1d



`define Q0      1   // 2d



`define Q1      2   // 4d



`define ACTI     3  // 8d



`define PREI     4  // 16d



`define RDI      5  // 32 d



`define WRI      6  // 64 d




assign                  oua3fa5 = (jceb768 == 0) ? vv55f3f : shdc856;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       fnfc289          <=  'h0 ;   else       fnfc289          <=  qtc9e60 ;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       nr744e9          <=  1'b0 ;   else if (uk1f270  && ps66136 && (go568c8 || aaa320c))       nr744e9          <=  1'b1 ;   else       nr744e9          <=  1'b0 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       zma274e          <=  1'b0 ;   else if (doad973  && jr84d93 && (go568c8  || aaa320c ))       zma274e          <=  1'b1 ;   else       zma274e          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       jc7335d          <=  1'b0 ;   else if (uk1f270  && ps66136 && (go568c8 || aaa320c))
       jc7335d          <=  1'b1 ;   else if (zma274e || (cm68575 && !ic68751 ))       jc7335d          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       xy99aeb          <=  1'b0 ;   else if (doad973  && jr84d93 && (go568c8  || aaa320c ))
       xy99aeb          <=  1'b1 ;   else if (nr744e9 || (ps42ba9 && !ic68751 ))       xy99aeb          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       rtcd75a          <=  1'b0 ;   else       rtcd75a          <=  rtdda15 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       nr6bad6          <=  1'b0 ;   else       nr6bad6          <=  uved0ae ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)    ls1b119   <=  1'b0 ;   else    ls1b119   <=  !yzae610 ;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)    ohd114    <=  1'b0 ;   else    ohd114    <=  vv55f3f ;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      yz8a3aa        <=  'b0 ;   else if (ps66136 && uk1f270 )       yz8a3aa        <=  kqfa6de ;   else if (jr84d93 && doad973)       yz8a3aa        <=  xy1b401 ;
end





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      uk3e0cb        <=  'b0 ;   else if (ps66136 && uk1f270  ) begin      if (dz5f4db == 0)          uk3e0cb        <=  6'h20 ;      else          uk3e0cb        <=  dz5f4db ;   end   else if (jr84d93 && doad973)  begin      if (me43680 == 0)          uk3e0cb        <=  6'h20 ;      else          uk3e0cb        <=  me43680 ;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      uv5e7a5        <=  'b0 ;      wlabcf4        <=  'b0 ;   end   else if ((kfb4641 || ksad19) && ( |uk3e0cb[5:1] )) begin      uv5e7a5        <=  'b1 ;      wlabcf4        <=  'b1 ;   end   else if ( jr3df62 || ukd39 ) begin      uv5e7a5        <=  'b0 ;      wlabcf4        <=  'b0 ;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)         al4e66b        <=   1'b0;   else if (co215a3) al4e66b        <=   1'b1;   else if (tw149c)       al4e66b        <=   1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ww6da7c        <=  'b0 ;   else if ((ps66136 && uk1f270) || (fpb5416 && !ic68751))      ww6da7c        <=  {sj80d6c, kdd36f1} ;   else if ((jr84d93 && doad973) || (ngb8e03 && !ic68751))      ww6da7c        <=  {mt9a503,psda00a};
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ho69f01        <=  'b0 ;   else if ((ps66136 && uk1f270) || (fpb5416 && !ic68751))      ho69f01        <=  nt9b78c ;   else if ((jr84d93 && doad973) || (ngb8e03 && !ic68751))      ho69f01        <=  dmd0052 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      jceb5bb        <=  'b0 ;   else if (gbcc17b && uk1f270)      jceb5bb        <=  nt9b78c ;   else if (cz60bdc && doad973)      jceb5bb        <=  dmd0052 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      rt5adda        <=  'b0 ;   else      rt5adda        <=  qi15d4a ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      fa73084        <=  1'b1 ;   else if ((qi15d4a == iraea50) && ((uk1f270 || doad973) && ic68751))      fa73084        <=  (fa73084 ) ;   else if ((qi15d4a != iraea50) && ((uk1f270 || doad973) && ic68751))      fa73084        <=  !fa73084 ;   else   fa73084    <=  fa73084 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      blcd91d        <=  'b0 ;   else if ((kd4e035 || mr701ad) && uk1f270)      blcd91d        <=  ng35b2e ;   else if ((ec2e694 || by734a0) && doad973)      blcd91d        <=  tj940e7 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      swa3f0a        <=  'b0 ;   else      swa3f0a        <=  ho69f01 ;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      yzae610        <=  1'b1 ;   else if ((ho69f01 == ea7d6ed) && (((uk1f270 || doad973) && ic68751) || ((fpb5416 || ngb8e03 ) && !ic68751)))      yzae610        <=  (yzae610 ) ;   else if ((ho69f01 != ea7d6ed) && (((uk1f270 || doad973) && ic68751) || ((fpb5416 || ngb8e03 )&& !ic68751)))      yzae610        <=  !yzae610 ;   else   yzae610        <=  yzae610 ;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ba832c8        <=  'b0 ;   else if ( fpb5416)      ba832c8        <=  vx6b65 ;   else if ( ngb8e03)      ba832c8        <=  hbd281c ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ne7c056        <=  'b0 ;   else if (ps66136 && uk1f270)      ne7c056        <=  medbc66 ;   else if (jr84d93 && doad973)      ne7c056        <=  mt80293 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ieacd3e        <=  'b0 ;   else if (ps66136 && uk1f270)      ieacd3e        <=  sw976dc ;   else if (jr84d93 && doad973)      ieacd3e        <=  qgdb705 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      nr559a7        <=  'b0 ;   else if (ps66136 && uk1f270)      nr559a7        <=  yzbb6e0 ;   else if (jr84d93 && doad973)      nr559a7        <=  kqdb828 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      vi66ef4   <=  'b0 ;      jr377a3   <=  'b0 ;      yzbbd1f   <=  'b0 ;   end   else if (co215a3 || fn7b90a || go568c8 || aaa320c) begin      vi66ef4   <=  'b1 ;      jr377a3   <=  'b1 ;      yzbbd1f   <=  'b1 ;   end   else if ((ukd39 && (vk3fc1d || psfe0ea)) || (!ukd39 && yz1d4c2)) begin      vi66ef4   <=  'b0 ;      jr377a3   <=  'b0 ;      yzbbd1f   <=  'b0 ;   end
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      nre6fae           <=  7'b0 ;      ps66136              <=  1'b0;      jr84d93              <=  1'b0;      rtc787e       <=  1'b0;      lf22904     <=  1'b0;      ir3c3f6          <=  1'b0;      gda1a22        <=  1'b0;      jpf9f9a            <=  1'b0;      fc209d5          <=  1'b0;      zm1be7e           <=  1'b0;      do3aa9e         <=  1'b0;      byd54f2          <=  1'b0;      ipf278e          <=  1'b0;      ww53c9e          <=  1'b0;      fp9e3ab          <=  1'b0;      hq1e455       <=  1'b0;   end   else begin      nre6fae           <=  dm7982f ;      ps66136              <=  gbcc17b;      jr84d93              <=  cz60bdc;      rtc787e       <=  bye42b4;      lf22904     <=  bye42b4;      ir3c3f6          <=  ba2f721;      gda1a22        <=  ba2f721;      zm1be7e           <=  kfb4641;      do3aa9e         <=  kfb4641;      jpf9f9a            <=  ksad19;      fc209d5          <=  ksad19;      byd54f2          <=  pfc8307;      ipf278e          <=  an7d74;      ww53c9e          <=  bnc1f5;      fp9e3ab          <=  cmf5d20;      hq1e455       <=  enc372d;   end
end





always @ (jp4f305 or uk1f270  or doad973  or jpc701b or bn380df or fadfcbb or          rtdda15 or uved0ae  or zm1be7e or ic68751 or pu1beb or wldf5b or en6fadd or lqc06fe or nt37f2          or alc9c06 or sh65cd2 or thf9380 or tu6cb9a or qt5bb42 or me43680          or kd4e035 or ec2e694 or mr701ad or by734a0 or je2037d  or sja406f or dz5f4db or          tj19060 or wj4183e or of60fae or aa3eba4 or zma274e or nr744e9 or  fc1bf97          or ps66136 or jr84d93 or ieacd3e or ir186e5) begin
xl37d77 = 7'b0;
rgf4344 = 1'b0;
of44520 = 1'b0;
vx27553 = 1'b0;
yza413a = 1'b0;
shf22aa = 1'b0;
suf5df4 = ps66136;
me77d0d = jr84d93;
pu93c75 = of60fae;
jr9e4f1 = wj4183e;
byf1d5e = aa3eba4;
xlaa793 = tj19060;
case (1)        jp4f305[`IDLEI] :  begin                        suf5df4 = 1'b0;                        me77d0d = 1'b0;                        rgf4344 = 1'b0;                        of44520 = 1'b0;                        vx27553 = 1'b0;                        yza413a = 1'b0;                        xlaa793 = 1'b0;                        pu93c75 = 1'b0;                        jr9e4f1 = 1'b0;                        byf1d5e = 1'b0;                        shf22aa = 1'b0;                        if (uk1f270 && ic68751 && !en6fadd) begin                                                    xl37d77[`Q0] = 1'b1;                            suf5df4 = 1'b1;                        end                        else if (doad973 && ic68751 && !en6fadd) begin                                                    xl37d77[`Q1] = 1'b1;                            me77d0d = 1'b1;                        end                        else xl37d77[`IDLEI] = 1'b1;                end




`ifdef ECP3_SP2
   jp4f305[`Q0] :  begin
                   if (ic68751 && doad973  && !pu1beb) begin                       pu93c75 = 1'b0;                       jr9e4f1 = 1'b0;                       xlaa793 = 1'b0;                       byf1d5e = 1'b0;                       if (!ir186e5 && ieacd3e && nt37f2 && !tu6cb9a  && !fadfcbb && !je2037d && (me43680 == 1)) begin                        shf22aa = 1'b1;                        xl37d77[`Q0] = 1'b1;                       end                       else if (ir186e5 && ieacd3e && nt37f2 && !tu6cb9a  && !fadfcbb && !je2037d && (me43680 == 1)) begin                        shf22aa = 1'b0;                        xl37d77[`RDI] = 1'b1;                        yza413a =1'b1;                        me77d0d = 1'b1;                        suf5df4 = 1'b0;                       end                       else if (bn380df && !tu6cb9a && !fadfcbb && !je2037d && (me43680 == 1)) begin                        xl37d77[`WRI] = 1'b1;                        vx27553 =1'b1;                        me77d0d = 1'b1;                        suf5df4 = 1'b0;                       end                       else xl37d77[`IDLEI] = 1'b1;                    end
                  else   if (!ic68751 || rtdda15) begin                         xl37d77[`IDLEI] = 1'b1;                         xlaa793 = 1'b0;                         pu93c75 = 1'b0;                         jr9e4f1 = 1'b0;                         byf1d5e = 1'b0;                    end
                    else  if (ic68751 && (uk1f270 )) begin                       pu93c75 = 1'b0;                       jr9e4f1 = 1'b0;                       if (thf9380 && !aa3eba4) begin                        xl37d77[`PREI] = 1'b1;                        of44520 =1'b1;                        suf5df4 = 1'b1;                       end                       else if (alc9c06 && !tj19060 && !qt5bb42) begin                        xl37d77[`ACTI] = 1'b1;                        rgf4344 =1'b1;                        suf5df4 = 1'b1;                       end                       else if (mr701ad && !wj4183e  && !je2037d && !qt5bb42) begin                        xl37d77[`RDI] = 1'b1;                        yza413a =1'b1;                        suf5df4 = 1'b1;                       end                       else if (kd4e035 && !of60fae && !je2037d  && !qt5bb42) begin                        xl37d77[`WRI] = 1'b1;                        vx27553 =1'b1;                        suf5df4 = 1'b1;                       end                       else xl37d77[`Q0] = 1'b1;                    end
                    else xl37d77[`Q0] = 1'b1;                end

`else
   jp4f305[`Q0] :  begin
                   if (ic68751 && doad973  && !pu1beb) begin                       pu93c75 = 1'b0;                       jr9e4f1 = 1'b0;                       xlaa793 = 1'b0;                       byf1d5e = 1'b0;
                      if (nt37f2 && !tu6cb9a  && !fadfcbb && !je2037d && (me43680 == 1)) begin                        xl37d77[`RDI] = 1'b1;                        yza413a =1'b1;                        me77d0d = 1'b1;                        suf5df4 = 1'b0;                       end                       else if (bn380df && !tu6cb9a && !fadfcbb && !je2037d && (me43680 == 1)) begin                        xl37d77[`WRI] = 1'b1;                        vx27553 =1'b1;                        me77d0d = 1'b1;                        suf5df4 = 1'b0;                       end                       else xl37d77[`IDLEI] = 1'b1;                    end
                  else   if (!ic68751 || rtdda15) begin                         xl37d77[`IDLEI] = 1'b1;                         xlaa793 = 1'b0;                         pu93c75 = 1'b0;                         jr9e4f1 = 1'b0;                         byf1d5e = 1'b0;                    end
                    else  if (ic68751 && (uk1f270 )) begin                       pu93c75 = 1'b0;                       jr9e4f1 = 1'b0;                       if (thf9380 && !aa3eba4) begin                        xl37d77[`PREI] = 1'b1;                        of44520 =1'b1;                        suf5df4 = 1'b1;                       end                       else if (alc9c06 && !tj19060 && !qt5bb42) begin                        xl37d77[`ACTI] = 1'b1;                        rgf4344 =1'b1;                        suf5df4 = 1'b1;                       end                       else if (mr701ad && !wj4183e  && !je2037d && !qt5bb42) begin                        xl37d77[`RDI] = 1'b1;                        yza413a =1'b1;                        suf5df4 = 1'b1;                       end                       else if (kd4e035 && !of60fae && !je2037d  && !qt5bb42) begin                        xl37d77[`WRI] = 1'b1;                        vx27553 =1'b1;                        suf5df4 = 1'b1;                       end                       else xl37d77[`Q0] = 1'b1;                    end
                    else xl37d77[`Q0] = 1'b1;                end

`endif //SP2

   jp4f305[`ACTI] :  begin                  if (ps66136) begin                     xl37d77[`Q0] = 1'b1;                     rgf4344 = 1'b0;                     xlaa793 = 1'b1;                  end                  else  begin                     xl37d77[`Q1] = 1'b1;                     rgf4344 = 1'b0;                     xlaa793 = 1'b1;                 end                end
   jp4f305[`WRI] :  begin                    if (ps66136) begin                     xl37d77[`Q0] = 1'b1;                     vx27553 = 1'b0;                     pu93c75 = 1'b1;                  end                  else  begin                     xl37d77[`Q1] = 1'b1;                     vx27553 = 1'b0;                     pu93c75 = 1'b1;                 end                end  jp4f305[`RDI] :  begin                  if (ps66136) begin                     xl37d77[`Q0] = 1'b1;                     yza413a = 1'b0;                     jr9e4f1 = 1'b1;                  end                  else  begin                     xl37d77[`Q1] = 1'b1;                     yza413a = 1'b0;                     jr9e4f1 = 1'b1;                 end                end  jp4f305[`PREI] :  begin                  if (ps66136) begin                     xl37d77[`Q0] = 1'b1;                     of44520 = 1'b0;                     byf1d5e = 1'b1;                  end                  else  begin                     xl37d77[`Q1] = 1'b1;                     of44520 = 1'b0;                     byf1d5e = 1'b1;                 end                end




`ifdef ECP3_SP2                                                                   
   jp4f305[`Q1] :  begin                   if (ic68751 && uk1f270 && !wldf5b) begin                       pu93c75 = 1'b0;                       jr9e4f1 = 1'b0;                       xlaa793 = 1'b0;                       byf1d5e = 1'b0;                       if (!ir186e5 && ieacd3e && lqc06fe && !thf9380  && !fc1bf97 && !sja406f && (dz5f4db == 1)) begin                        shf22aa = 1'b1;                        xl37d77[`Q1] = 1'b1;                       end                       else if (ir186e5 && ieacd3e && lqc06fe && !thf9380  && !fc1bf97 && !sja406f && (dz5f4db == 1)) begin                        shf22aa = 1'b0;                        xl37d77[`RDI] = 1'b1;                        yza413a =1'b1;                        suf5df4 = 1'b1;                        me77d0d = 1'b0;                       end                       else if (jpc701b && !thf9380  && !fc1bf97 && !sja406f && (dz5f4db == 1)) begin                        xl37d77[`WRI] = 1'b1;                        vx27553 =1'b1;                        suf5df4 = 1'b1;                        me77d0d = 1'b0;                       end                       else xl37d77[`IDLEI] = 1'b1;                    end                    else  if (!ic68751 || uved0ae ) begin                         xl37d77[`IDLEI] = 1'b1;                         xlaa793 = 1'b0;                         pu93c75 = 1'b0;                         jr9e4f1 = 1'b0;                         byf1d5e = 1'b0;                    end
                    else  if (ic68751 && (doad973 )) begin                       pu93c75 = 1'b0;                       jr9e4f1 = 1'b0;                       if (tu6cb9a && !aa3eba4) begin                        xl37d77[`PREI] = 1'b1;                        of44520 =1'b1;                        me77d0d = 1'b1;                       end                       else if (sh65cd2 && !tj19060 && !qt5bb42) begin                        xl37d77[`ACTI] = 1'b1;                        rgf4344 =1'b1;                        me77d0d = 1'b1;                       end                       else if (by734a0 && !wj4183e  && !sja406f && !qt5bb42) begin                        xl37d77[`RDI] = 1'b1;                        yza413a =1'b1;                        me77d0d = 1'b1;                       end                       else if (ec2e694 && !of60fae && !sja406f  && !qt5bb42) begin                        xl37d77[`WRI] = 1'b1;                        vx27553 =1'b1;                        me77d0d = 1'b1;                       end                       else xl37d77[`Q1] = 1'b1;                    end                    else xl37d77[`Q1] = 1'b1;
                end

`else
   jp4f305[`Q1] :  begin                                      if (ic68751 && uk1f270 && !wldf5b) begin                       pu93c75 = 1'b0;                       jr9e4f1 = 1'b0;                       xlaa793 = 1'b0;                       byf1d5e = 1'b0;                      if (lqc06fe && !thf9380  && !fc1bf97 && !sja406f && (dz5f4db == 1)) begin                        xl37d77[`RDI] = 1'b1;                        yza413a =1'b1;                        suf5df4 = 1'b1;                        me77d0d = 1'b0;                       end                       else if (jpc701b && !thf9380  && !fc1bf97 && !sja406f && (dz5f4db == 1)) begin                        xl37d77[`WRI] = 1'b1;                        vx27553 =1'b1;                        suf5df4 = 1'b1;                        me77d0d = 1'b0;                       end                       else xl37d77[`IDLEI] = 1'b1;                    end                    else  if (!ic68751 || uved0ae ) begin                         xl37d77[`IDLEI] = 1'b1;                         xlaa793 = 1'b0;                         pu93c75 = 1'b0;                         jr9e4f1 = 1'b0;                         byf1d5e = 1'b0;                    end
                    else  if (ic68751 && (doad973 )) begin                       pu93c75 = 1'b0;                       jr9e4f1 = 1'b0;                       if (tu6cb9a && !aa3eba4) begin                        xl37d77[`PREI] = 1'b1;                        of44520 =1'b1;                        me77d0d = 1'b1;                       end                       else if (sh65cd2 && !tj19060 && !qt5bb42) begin                        xl37d77[`ACTI] = 1'b1;                        rgf4344 =1'b1;                        me77d0d = 1'b1;                       end                       else if (by734a0 && !wj4183e  && !sja406f && !qt5bb42) begin                        xl37d77[`RDI] = 1'b1;                        yza413a =1'b1;                        me77d0d = 1'b1;                       end                       else if (ec2e694 && !of60fae && !sja406f  && !qt5bb42) begin                        xl37d77[`WRI] = 1'b1;                        vx27553 =1'b1;                        me77d0d = 1'b1;                       end                       else xl37d77[`Q1] = 1'b1;                    end                    else xl37d77[`Q1] = 1'b1;
                end


`endif


   default : begin                   xl37d77[`IDLEI] = 1'b1;             end
endcase
end
always@* begin ic68751<=pua8071[0];uk1f270<=pua8071[1];thf9380<=pua8071[2];alc9c06<=pua8071[3];kd4e035<=pua8071[4];mr701ad<=pua8071[5];sj80d6c<=pua8071[6];dz5f4db<={dm6996a>>1,pua8071[7]};kqfa6de<={su4cb52>>1,pua8071[8]};kdd36f1<={yx65a91>>1,pua8071[9]};nt9b78c<={db2d48c>>1,pua8071[10]};medbc66<={yx6a467>>1,pua8071[11]};doad973<=pua8071[12];tu6cb9a<=pua8071[13];sh65cd2<=pua8071[14];ec2e694<=pua8071[15];by734a0<=pua8071[16];mt9a503<=pua8071[17];me43680<={tw99971>>1,pua8071[18]};xy1b401<={kdccb8a>>1,pua8071[19]};psda00a<={mr65c55>>1,pua8071[20]};dmd0052<={ie2e2ac>>1,pua8071[21]};mt80293<={jp71560>>1,pua8071[22]};tw149c<=pua8071[23];psfe0ea<=pua8071[24];vk3fc1d<=pua8071[25];yz1d4c2<=pua8071[26];ukd39<=pua8071[27];sw976dc<=pua8071[28];yzbb6e0<=pua8071[29];qgdb705<=pua8071[30];kqdb828<=pua8071[31];fpb5416<=pua8071[32];ngb8e03<=pua8071[33];vx6b65<={fa5233c>>1,pua8071[34]};hbd281c<={ux8ab06>>1,pua8071[35]};ng35b2e<=pua8071[36];tj940e7<=pua8071[37];jr3df62<=pua8071[38];jpc701b<=pua8071[39];bn380df<=pua8071[40];lqc06fe<=pua8071[41];nt37f2<=pua8071[42];fc1bf97<=pua8071[43];fadfcbb<=pua8071[44];qtc9e60<={su5627f>>1,pua8071[45]};jp4f305<={nre6fae>>1,pua8071[46]};dm7982f<={xl37d77>>1,pua8071[47]};gbcc17b<=pua8071[48];cz60bdc<=pua8071[49];vv55f3f<=pua8071[50];ba2f721<=pua8071[51];fn7b90a<=pua8071[52];shdc856<=pua8071[53];bye42b4<=pua8071[54];co215a3<=pua8071[55];ksad19<=pua8071[56];go568c8<=pua8071[57];kfb4641<=pua8071[58];aaa320c<=pua8071[59];tj19060<=pua8071[60];pfc8307<=pua8071[61];wj4183e<=pua8071[62];bnc1f5<=pua8071[63];of60fae<=pua8071[64];an7d74<=pua8071[65];aa3eba4<=pua8071[66];cmf5d20<=pua8071[67];ir186e5<=pua8071[68];enc372d<=pua8071[69];sja406f<=pua8071[70];je2037d<=pua8071[71];pu1beb<=pua8071[72];wldf5b<=pua8071[73];en6fadd<=pua8071[74];ea7d6ed<={swa3f0a>>1,pua8071[75]};jceb768<={fnfc289>>1,pua8071[76]};qt5bb42<=pua8071[77];rtdda15<=pua8071[78];uved0ae<=pua8071[79];cm68575<=pua8071[80];ps42ba9<=pua8071[81];qi15d4a<={jceb5bb>>1,pua8071[82]};iraea50<={rt5adda>>1,pua8071[83]};end
always@* begin ks1500e[2047]<=end96c9;ks1500e[2046]<=wwcb64d;ks1500e[2044]<=en5b269;ks1500e[2041]<=uvd934c;ks1500e[2034]<=wjc9a65;ks1500e[2022]<=ww53c9e;ks1500e[2021]<=dm4d32d;ks1500e[2017]<=ie2e2ac[0];ks1500e[1996]<=jr9e4f1;ks1500e[1995]<=dm6996a[0];ks1500e[1986]<=jp71560[0];ks1500e[1983]<=fc209d5;ks1500e[1945]<=ipf278e;ks1500e[1943]<=su4cb52[0];ks1500e[1925]<=sw3eba2;ks1500e[1918]<=vx27553;ks1500e[1908]<=cb23cea;ks1500e[1864]<=ld55834;ks1500e[1855]<=jr16665;ks1500e[1842]<=pu93c75;ks1500e[1838]<=yx65a91[0];ks1500e[1803]<=vxaab34;ks1500e[1788]<=do3aa9e;ks1500e[1769]<=fa5233c[0];ks1500e[1680]<=fp1c880;ks1500e[1662]<=cob332e;ks1500e[1637]<=fp9e3ab;ks1500e[1628]<=db2d48c[0];ks1500e[1624]<=wlabcf4;ks1500e[1583]<=ir3c3f6;ks1500e[1559]<=wj75566;ks1500e[1553]<=fnfc289[0];ks1500e[1529]<=byd54f2;ks1500e[1519]<=lf22904;ks1500e[1501]<=ng1eb45;ks1500e[1490]<=ux8ab06[0];ks1500e[1487]<=ux3c599;ks1500e[1412]<=yzbbd1f;ks1500e[1312]<=ls1e755;ks1500e[1276]<=tw99971[0];ks1500e[1227]<=byf1d5e;ks1500e[1209]<=yx6a467[0];ks1500e[1200]<=uv5e7a5;ks1500e[1155]<=qi9d556;ks1500e[1118]<=rgf4344;ks1500e[1098]<=jceb5bb[0];ks1500e[1070]<=nga7c19;ks1500e[1058]<=al4e66b;ks1500e[1048]<=jraac4f;ks1500e[1023]<=vv459d3;ks1500e[1011]<=xlaa793;ks1500e[1008]<=mr65c55[0];ks1500e[991]<=yza413a;ks1500e[954]<=ks3105a;ks1500e[932]<=zz919e2;ks1500e[927]<=ipe2ccc;ks1500e[812]<=shf22aa;ks1500e[791]<=me77d0d;ks1500e[776]<=swa3f0a[0];ks1500e[759]<=of44520;ks1500e[750]<=mt23d68;ks1500e[743]<=qg678b3;ks1500e[706]<=jr377a3;ks1500e[577]<=zxf3aaa;ks1500e[549]<=nr6bad6;ks1500e[524]<=jp55589;ks1500e[504]<=kdccb8a[0];ks1500e[406]<=hq1e455;ks1500e[395]<=suf5df4;ks1500e[379]<=ohd114;ks1500e[375]<=ykc47ad;ks1500e[371]<=ba8cf16;ks1500e[353]<=vi66ef4;ks1500e[274]<=rtcd75a;ks1500e[262]<=oseaab1;ks1500e[197]<=xl37d77[0];ks1500e[189]<=gda1a22;ks1500e[187]<=mrf88f5;ks1500e[148]<=rt5adda[0];ks1500e[137]<=xy99aeb;ks1500e[98]<=nre6fae[0];ks1500e[93]<=wy88573;ks1500e[68]<=jc7335d;ks1500e[49]<=su5627f[0];end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule






























`timescale 1 ns / 100 ps
module fp22033 (

   clk,
   rst_n,
   mre7a3e,
   uve8fae,
   cbae881,
   kdc9117,
   rg47294,
   sw3eba2,
   kq59b50,
   zm1be7e,
   jpf9f9a,
   xwc566d,
   gd178e7,
   ria8044,
   rte39e8,
   fpbfbb7,
   fca206e,
   vx81b91,
   ba832c8,
   lq6621f,
   ng2517e,
   xl28bf3,
   addr_init_0,
   addr_init_1,
   addr_init_2,
   addr_init_3,
   zx45f9e,
   the666b,
   oh3335e,
   ls99af5,
   zxcd7aa,
   zx6bd56,
   sh5eab7,
   eaf55bd,
   hdaade8,
   yz8a3aa,
   yxc60d6,
   yzbed43,
   ecafb5,
   wl_act,
   ux85d13,
   oh2cc2e,
   dm66174,
   pu30ba2, 
   uk3e0cb,
   nga7c19,
   ieacd3e, 
   fp1c880, 
   
   vv459d3,
   

   ddr_cs_n,
   ddr_ras_n,
   ddr_cas_n,
   ddr_we_n,
   ddr_ba,
   ddr_addr,
   ddr_cke,
   wyacaa4,
   mirror_on
   );
input                          clk;
input                          rst_n;
input                          mre7a3e;
input                          uve8fae;
input                          cbae881;
input                          kdc9117;
input                          rg47294;
input                          sw3eba2;
input                          kq59b50;
input                          zm1be7e;
input                          jpf9f9a;
input                          xwc566d;
input                          gd178e7;
input                          rte39e8;
input                          fpbfbb7;
input                          fca206e;
input                          vx81b91;
input                          the666b;
input                          oh3335e;
input                          ls99af5;
input                          zxcd7aa;
input                          zx6bd56;
input                          sh5eab7;
input                          eaf55bd;
input                          hdaade8;
input                          lq6621f;
input [`ROW_WIDTH-1:0]         ng2517e;
input [`COL_WIDTH :0]          xl28bf3;
input [15:0]                   addr_init_0;
input [15:0]                   addr_init_1;
input [15:0]                   addr_init_2;
input [15:0]                   addr_init_3;
input [`BANK_WIDTH-1:0]         zx45f9e;
input                          ria8044;
input [`CS_WIDTH-1:0]          yz8a3aa;
input                          yxc60d6;
input                          yzbed43;
input                          ecafb5;
input                          wl_act;
input                          oh2cc2e;
input                          dm66174;
input [`CS_WIDTH-1:0]          pu30ba2;
input [15:0]                   ux85d13;
input                          ieacd3e;
input [5:0]                    uk3e0cb;
input                          nga7c19;
input [2:0]                    ba832c8;
input                          fp1c880;
input                          vv459d3;
output [`CS_WIDTH-1 :0]        ddr_cs_n;
output                         ddr_ras_n;
output                         ddr_cas_n;
output                         ddr_we_n;
output [`BANK_WIDTH-1:0]       ddr_ba;

`ifdef ROW_WIDTH_12
output [`ROW_WIDTH:0]          ddr_addr ;

`else
output [`ROW_WIDTH-1:0]        ddr_addr ;

`endif
output                         ddr_cke;
output                         wyacaa4;
output                         mirror_on;
parameter  ipdc6fb =     5'h10   ;
parameter  fne37dd =     5'h08   ;
parameter  fc1beee =   5'h04   ;
parameter  fadf773 =    5'h02   ;
parameter  byfbb9a =     5'h01   ;
parameter  nrddcd2 =   7'h40   ;
parameter  neee696 =   7'h20   ;
parameter  vi734b2 =   7'h10   ;
parameter  qv9a593 =   7'h08   ;
parameter  nrd2c9c =  7'h04   ;
parameter  ng964e7 =  7'h02   ;
parameter  jeb273a =   7'h01   ;
parameter  xy939d3  =  9'h100   ;
parameter  pu9ce9b  =  9'h080   ;
parameter  ene74da  =  9'h040   ;
parameter  xy3a6d4  =  9'h020   ;
parameter  kdd36a3  =  9'h010   ;
parameter  nt9b51c  =  9'h008   ;
parameter  neda8e6  =  9'h004   ;
parameter  qgd4733  =  9'h002   ;
parameter  ksa3999  =   9'h001   ;
reg [`CS_WIDTH-1 :0]   zz1ccc9, hbe664e ;
reg                    wl33276, xy993b5  ;
reg                    uvc9dab, of4ed5d ;
reg                    ne76aec, bnb5762 ;
reg [`BANK_WIDTH-1:0]   irabb16, lq5d8b5 ;

`ifdef ROW_WIDTH_12
reg [`ROW_WIDTH:0]   zxec5aa, qg62d57 ;

`else
reg [`ROW_WIDTH-1:0]   zxec5aa, qg62d57 ;

`endif
reg [`CS_WIDTH-1 :0]   jraae7e, tu573f7 ;
reg                    ecb9fba, necfdd1  ;
reg                    hb7ee8a, ipf7456 ;
reg                    rvba2b5, med15af ;
reg [`BANK_WIDTH-1:0]   gd8ad79, ay56bcc ;

`ifdef ROW_WIDTH_12
reg [`ROW_WIDTH:0]   phb5e61, vxaf30f ;

`else
reg [`ROW_WIDTH-1:0]   phb5e61, vxaf30f ;

`endif
reg [`CS_WIDTH-1 :0]   zx61f9c, iefce6 ;
reg                    th7e730, fnf3987  ;
reg                    ng9cc3e, pfe61f2 ;
reg                    hq30f96, gq87cb3 ;
reg [`BANK_WIDTH-1:0]   wy3e598, czf2cc1 ;

`ifdef ROW_WIDTH_12
reg [`ROW_WIDTH:0]   pu9660c, ymb3062 ;

`else
reg [`ROW_WIDTH-1:0]   pu9660c, ymb3062 ;

`endif
wire [`CS_WIDTH-1 :0]   ddr_cs_n ;
wire                    ddr_ras_n  ;
wire                    ddr_cas_n ;
wire                    ddr_we_n ;
wire [`BANK_WIDTH-1:0]   ddr_ba ;
wire                    vv459d3 ;

`ifdef ROW_WIDTH_12
wire [`ROW_WIDTH:0]   ddr_addr ;

`else
wire [`ROW_WIDTH-1:0]   ddr_addr ;

`endif
reg [`ROW_WIDTH-1:0]   ks1a363 ;
reg                    ddr_cke;
reg                    wyacaa4;
reg                    ho6c601;
reg                    dm6300b, qv1805a ;
reg                    psc02d5, ri16aa;
reg                    hqb552, pf5aa93;
wire                   mirror_on;
wire   [12:0]          cmd;
wire   [6:0]           rg527de;
wire   [8:0]           pu93ef2;
wire                   ep9f793;
wire                   tufbc9c;
wire                   ykde4e2;
wire                   yxf2710;
wire                   ng93885;

`ifdef COL_WIDTH_EQ_12
wire [13:0]            ng9c42b;

`else
wire [12:0]            ng9c42b;

`endif
wire [2:0]             ba832c8;

`ifdef COL_WIDTH_EQ_12

`else 

`ifdef COL_WIDTH_EQ_11

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef COL_WIDTH_EQ_11

`endif

`ifdef COL_WIDTH_EQ_12

`endif

`ifdef COL_WIDTH_EQ_12

`else

`endif

`ifdef COL_WIDTH_EQ_11

`endif

`ifdef COL_WIDTH_EQ_12

`endif

`ifdef COL_WIDTH_EQ_12

`else

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif
reg qv856e0;
reg ym2b704;
reg gb5b820;
reg ofdc105;
reg yke082d;
reg tw149c;
reg je20b42;
reg xlaf9fe;
reg by7cff7;
reg su6848f;
reg ne42479;
reg gd123cb;
reg hd91e5c;
reg oh8f2e6;
reg rg79735;
reg iccb9aa;
reg qg5cd50;
reg [`ROW_WIDTH - 1 : 0] rv3d87c;
reg [`COL_WIDTH : 0] pfec3e7;
reg [15 : 0] ntaa03a;
reg [15 : 0] xj501d6;
reg [15 : 0] qv80eb7;
reg [15 : 0] ep75bd;
reg [`BANK_WIDTH - 1 : 0] rt61f3f;
reg ofd6f6a;
reg vkb7b55;
reg lsbdaaa;
reg shed553;
reg of6aa9d;
reg jp554ed;
reg jraa76f;
reg os53b7e;
reg [`CS_WIDTH - 1 : 0] ale7f83;
reg shedf88;
reg kd6fc44;
reg dz7e225;
reg mtd03d;
reg [15 : 0] mg8897a;
reg ww681ec;
reg vv40f61;
reg [`CS_WIDTH - 1 : 0] do2f46a;
reg [5 : 0] ayea615;
reg yz1d4c2;
reg tw83a98;
reg jr3df62;
reg ic68751;
reg [`CS_WIDTH - 1 : 0] sj95023;
reg [`CS_WIDTH - 1 : 0] baa811d;
reg jp408eb;
reg zm475f;
reg ux23afa;
reg an1d7d5;
reg rgebead;
reg hb5f56b;
reg [`BANK_WIDTH - 1 : 0] qgfab5e;
reg [`BANK_WIDTH - 1 : 0] byd5af0;
reg [`CS_WIDTH - 1 : 0] riad782;
reg [`CS_WIDTH - 1 : 0] hb6bc13;
reg en5e09f;
reg suf04fc;
reg mg827e0;
reg zz13f01;
reg gd9f80f;
reg pffc07d;
reg [`BANK_WIDTH - 1 : 0] sue03ee;
reg [`BANK_WIDTH - 1 : 0] je1f71;
reg [`CS_WIDTH - 1 : 0] ymfb8b;
reg [`CS_WIDTH - 1 : 0] os7dc58;
reg psee2c1;
reg nr7160a;
reg bn8b056;
reg rg582b7;
reg wwc15bb;
reg ukadd8;
reg [`BANK_WIDTH - 1 : 0] ic56ec0;
reg [`BANK_WIDTH - 1 : 0] zmb7601;
reg [`ROW_WIDTH - 1 : 0] wlbb00b;
reg dzd805d;
reg psc02ef;
reg ri177a;
reg hqbbd2;
reg jc5de92;
reg goef492;
reg sh7a490;
reg [12 : 0] ne763c3;
reg [6 : 0] ks9242e;
reg [8 : 0] ks92170;
reg mt90b80;
reg cb85c04;
reg uk2e025;
reg al70128;
reg an80944;
reg [2047:0] ks1500e;
wire [91:0] pua8071;

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef COL_WIDTH_EQ_12

`else

`endif

`ifdef COL_WIDTH_EQ_12

`else 

`ifdef COL_WIDTH_EQ_11

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef COL_WIDTH_EQ_11

`endif

`ifdef COL_WIDTH_EQ_12

`endif

`ifdef COL_WIDTH_EQ_12

`else

`endif

`ifdef COL_WIDTH_EQ_11

`endif

`ifdef COL_WIDTH_EQ_12

`endif

`ifdef COL_WIDTH_EQ_12

`else

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

localparam rt4038b = 92,hq1c5e = 32'hfdffca8b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef COL_WIDTH_EQ_12


`else


`endif


`ifdef COL_WIDTH_EQ_12


`else 


`ifdef COL_WIDTH_EQ_11


`else


`endif


`endif


`ifdef CS_WIDTH_2


`else 


`endif


`ifdef CS_WIDTH_2


`else 


`ifdef CS_WIDTH_4


`else


`endif


`endif


`ifdef CS_WIDTH_2


`else 


`endif


`ifdef CS_WIDTH_2


`else 


`ifdef CS_WIDTH_4


`else


`endif


`endif


`ifdef CS_WIDTH_2


`else 


`endif


`ifdef CS_WIDTH_2


`else 


`ifdef CS_WIDTH_4


`else


`endif


`endif


`ifdef CS_WIDTH_2


`else 


`endif


`ifdef CS_WIDTH_2


`else 


`ifdef CS_WIDTH_4


`else


`endif


`endif


`ifdef CS_WIDTH_2


`else


`ifdef CS_WIDTH_4


`else


`endif


`endif


`ifdef COL_WIDTH_EQ_11


`endif


`ifdef COL_WIDTH_EQ_12


`endif


`ifdef COL_WIDTH_EQ_12


`else


`endif


`ifdef COL_WIDTH_EQ_11


`endif


`ifdef COL_WIDTH_EQ_12


`endif


`ifdef COL_WIDTH_EQ_12


`else


`endif


`ifdef CS_WIDTH_2


`else 


`endif


`ifdef CS_WIDTH_2


`else 


`ifdef CS_WIDTH_4


`else


`endif


`endif





`ifdef ROW_WIDTH_12



`else



`endif



`ifdef ROW_WIDTH_12



`else



`endif




`ifdef ROW_WIDTH_12



`else



`endif




`ifdef ROW_WIDTH_12



`else



`endif




`ifdef ROW_WIDTH_12



`else



`endif


assign ddr_cs_n =(qg5cd50 || mtd03d)? riad782 : ((ic68751)? sj95023 : ymfb8b );



assign ddr_ras_n =(en5e09f * jp408eb * psee2c1);
assign ddr_cas_n =(mg827e0 * ux23afa * bn8b056);
assign ddr_we_n  =(gd9f80f * rgebead * wwc15bb);
assign ddr_ba =(qg5cd50 || mtd03d)? sue03ee : ((ic68751)? qgfab5e : ic56ec0 );
assign ddr_addr =(qg5cd50 || mtd03d)? phb5e61 : ((ic68751)? zxec5aa : pu9660c);

assign                 mirror_on = hqbbd2 || goef492;

`ifdef COL_WIDTH_EQ_12



`else



`endif


assign                 ep9f793 = ofd6f6a || of6aa9d;
assign                 tufbc9c = vkb7b55 || jp554ed;
assign                 ykde4e2 = lsbdaaa || jraa76f;
assign                 yxf2710 = shed553 || os53b7e;
assign                 ng93885 = qv856e0 || ym2b704;
assign   cmd = {tw149c, je20b42, xlaf9fe, by7cff7, su6848f};
assign   rg527de = {mt90b80 ,cb85c04 ,uk2e025 ,al70128 ,((ww681ec || vv40f61) && mtd03d),(qg5cd50 && shedf88 ), oh8f2e6};
assign   pu93ef2 = {iccb9aa,an80944, gb5b820, ofdc105, yke082d, gd123cb, ne42479, hd91e5c, rg79735};




`ifdef COL_WIDTH_EQ_12
     assign  ng9c42b  =  {pfec3e7[11],tw83a98,pfec3e7[10],pfec3e7[`COL_WIDTH],pfec3e7[9:0]};


`else 



`ifdef COL_WIDTH_EQ_11
     assign  ng9c42b  =  {tw83a98,pfec3e7[10],pfec3e7[`COL_WIDTH],pfec3e7[9:0]};


`else
     assign  ng9c42b  =  {tw83a98,1'b0,        pfec3e7[`COL_WIDTH],pfec3e7[9:0]};


`endif



`endif



always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       dm6300b    <=  1'b0;       qv1805a    <=  1'b0;   end   else begin       dm6300b   <=  jr3df62;       qv1805a   <=  psc02ef;   end
end





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ks1a363    <=  {`ROW_WIDTH{1'b0}};    else if (ayea615 > 1)        if ((xlaf9fe || by7cff7))  begin            if (tw83a98) ks1a363[`COL_WIDTH -1:0] <=  wlbb00b[`COL_WIDTH -1:0] +8;            else ks1a363[`COL_WIDTH -1:0]     <=  wlbb00b[`COL_WIDTH -1:0] +4;        end
        else if (!yz1d4c2 && dzd805d)            ks1a363    <=  wlbb00b;        else if (yz1d4c2  ) begin            ks1a363[`COL_WIDTH -1:0] <=  pfec3e7[`COL_WIDTH -1:0];            ks1a363[`ROW_WIDTH -1]   <=  pfec3e7[`COL_WIDTH];        end	else if  (!dzd805d && !pfec3e7[`COL_WIDTH] ) begin            ks1a363[`COL_WIDTH -1:0] <=  pfec3e7[`COL_WIDTH -1:0];            ks1a363[`ROW_WIDTH -1]   <=  1'b0;	end        else if  (!dzd805d && pfec3e7[`COL_WIDTH] ) begin            ks1a363[`COL_WIDTH -1:0] <=  pfec3e7[`COL_WIDTH -1:0];            ks1a363[`ROW_WIDTH -1]   <=  1'b0;            	end
   else       ks1a363    <=  pfec3e7;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ddr_cke    <=  1'b0;   else if (shedf88)       ddr_cke    <=  1'b1;   else if (kd6fc44)       ddr_cke    <=  1'b0;   else if (dz7e225 && !kd6fc44)       ddr_cke    <=  1'b1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ho6c601    <=  1'b0;   else if ( yz1d4c2)       ho6c601    <=  1'b0;   else if ((ayea615 > 1) && (xlaf9fe || by7cff7))       ho6c601    <=  1'b1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       wyacaa4    <=  1'b0;   else if ( mtd03d && (ww681ec || vv40f61))       wyacaa4    <=  1'b1;   else if ( !(ww681ec || vv40f61))       wyacaa4    <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       jraae7e    <=  'b1;       ecb9fba   <=  'b1;       hb7ee8a   <=  'b1;       rvba2b5    <=  'b1;       gd8ad79      <=  'b0;       phb5e61    <=  'b0;       psc02d5     <=  'b0;    end    else begin       jraae7e    <=  hb6bc13  ;       ecb9fba   <=  suf04fc ;       hb7ee8a   <=  zz13f01 ;       rvba2b5    <=  pffc07d ;       gd8ad79      <=  je1f71   ;       phb5e61    <=  vxaf30f ;       psc02d5     <=  jc5de92;    end
end
always @ (ks9242e or mt90b80 or cb85c04 or uk2e025 or al70128 or ww681ec or qg5cd50           or shedf88  or ale7f83 or do2f46a or mg8897a or ddr_ba or ddr_addr or sue03ee or phb5e61           or ntaa03a or xj501d6 or qv80eb7 or ep75bd or of6aa9d or jp554ed or jraa76f or os53b7e           ) begin

tu573f7  = {`CS_WIDTH{1'b1}};
necfdd1 = 'h1;
ipf7456 = 'h1;
med15af  = 'h1;
ay56bcc  =  'h0;
vxaf30f  =  'h0;
ri16aa = 'h0;      case (ks9242e)        nrddcd2 : begin         necfdd1 =  'h0;         ipf7456 =  'h0;         med15af  =  'h0;         vxaf30f  =  ntaa03a;         ay56bcc    =  3'b0 ;         if (of6aa9d) begin          ri16aa = 1'b1;

`ifdef CS_WIDTH_2
         tu573f7  = 2'b01;


`else 
         tu573f7  = 4'b0101;


`endif
         end         else begin          ri16aa = 1'b0;

`ifdef CS_WIDTH_2
         tu573f7  = 2'b10;


`else 



`ifdef CS_WIDTH_4
         tu573f7  = 4'b1010;


`else
         tu573f7  = 1'b0;


`endif



`endif
         end       end       neee696 : begin         necfdd1 =  'h0;         ipf7456 =  'h0;         med15af  =  'h0;         vxaf30f  =  xj501d6;         ay56bcc    =  3'b001 ;         if (jp554ed) begin          ri16aa = 1'b1;

`ifdef CS_WIDTH_2
         tu573f7  = 2'b01;


`else 
         tu573f7  = 4'b0101;


`endif
         end         else begin          ri16aa = 1'b0;

`ifdef CS_WIDTH_2
         tu573f7  = 2'b10;


`else 



`ifdef CS_WIDTH_4
         tu573f7  = 4'b1010;


`else
         tu573f7  = 1'b0;


`endif



`endif
         end
       end       vi734b2 : begin         necfdd1 =  'h0;         ipf7456 =  'h0;         med15af  =  'h0;         vxaf30f  =  qv80eb7;         ay56bcc    =  3'b010 ;         if (jraa76f) begin          ri16aa = 1'b1;

`ifdef CS_WIDTH_2
         tu573f7  = 2'b01;


`else 
         tu573f7  = 4'b0101;


`endif
         end         else begin          ri16aa = 1'b0;

`ifdef CS_WIDTH_2
         tu573f7  = 2'b10;


`else 



`ifdef CS_WIDTH_4
         tu573f7  = 4'b1010;


`else
         tu573f7  = 1'b0;


`endif



`endif
         end
       end
       qv9a593 : begin         necfdd1 =  'h0;         ipf7456 =  'h0;         med15af  =  'h0;         vxaf30f  =  ep75bd;         ay56bcc    =  3'b011 ;         if (os53b7e) begin          ri16aa = 1'b1;

`ifdef CS_WIDTH_2
         tu573f7  = 2'b01;


`else 
         tu573f7  = 4'b0101;


`endif
         end         else begin          ri16aa = 1'b0;

`ifdef CS_WIDTH_2
         tu573f7  = 2'b10;


`else 



`ifdef CS_WIDTH_4
         tu573f7  = 4'b1010;


`else
         tu573f7  = 1'b0;


`endif



`endif
         end
       end
       nrd2c9c : begin           necfdd1 =  'h0;           ipf7456 =  'h0;           med15af  =  'h0;           vxaf30f  =  mg8897a;           if (ww681ec)             ay56bcc    =  3'b001 ;           else             ay56bcc    =  3'b010 ;



`ifdef CS_WIDTH_2
          if (!do2f46a[1])             ri16aa = 1'b1;          else             ri16aa = 1'b0;


`else



`ifdef CS_WIDTH_4
             if (!do2f46a[1] || !do2f46a[3])                ri16aa = 1'b1;             else                ri16aa = 1'b0;


`else
                ri16aa = 1'b0;


`endif



`endif
           tu573f7  =  do2f46a;       end       ng964e7 : begin

         tu573f7  = {`CS_WIDTH{1'b0}} ;         necfdd1 =  'h1;         ipf7456 =  'h1;         med15af  =  'h1;         ay56bcc    =   sue03ee;         vxaf30f  =   phb5e61;       end       jeb273a : begin         tu573f7  = {`CS_WIDTH{1'b0}};         necfdd1 =  'h1;         ipf7456 =  'h1;         med15af  =  'h0;         vxaf30f  = 'h400 ;       end       default: begin

         tu573f7  = {`CS_WIDTH{1'b1}} ;         necfdd1 =  'h1;         ipf7456 =  'h1;         med15af  =  'h1;         ay56bcc    =  sue03ee ;         vxaf30f  =  phb5e61;       end      endcase
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       zz1ccc9    <=  'b1;       wl33276   <=  'b1;       uvc9dab   <=  'b1;       ne76aec    <=  'b1;       irabb16      <=  'b0;       zxec5aa    <=  'b0;    end    else begin       zz1ccc9    <=  baa811d  ;       wl33276   <=  zm475f ;       uvc9dab   <=  an1d7d5 ;       ne76aec    <=  hb5f56b ;       irabb16      <=  byd5af0   ;       zxec5aa    <=  qg62d57 ;    end
end

always @ (ne763c3 or ayea615 or yz1d4c2 or wlbb00b           or psc02ef or tw83a98 or ale7f83 or ba832c8 or qgfab5e           or zxec5aa or rv3d87c or pfec3e7 or rt61f3f or  ri177a ) begin
hbe664e  = {`CS_WIDTH{1'b1}};
xy993b5 = 'h1;
of4ed5d = 'h1;
bnb5762  = 'h1;
lq5d8b5  =  'h0;
qg62d57  =  'h0;      case (ne763c3)        ipdc6fb : begin         hbe664e  =  ale7f83;         xy993b5 =  'h0;         of4ed5d =  'h1;         bnb5762  =  'h0;         lq5d8b5    =  rt61f3f ;         qg62d57  =  zxec5aa;         lq5d8b5    =  rt61f3f ;        end       fne37dd : begin         hbe664e  =  ale7f83;         xy993b5 =  'h0;         of4ed5d =  'h1;         bnb5762  =  'h1;         lq5d8b5    =  rt61f3f ;         qg62d57  =  rv3d87c;       end       fc1beee : begin         hbe664e  =  ale7f83;         xy993b5 =  'h1;         of4ed5d =  'h0;         bnb5762  =  'h0;         lq5d8b5    =  rt61f3f ;
 if( ayea615 >1) begin            qg62d57[9:0] =  wlbb00b[9:0];            qg62d57[12]  = tw83a98;


`ifdef COL_WIDTH_EQ_11
            qg62d57[11]  = wlbb00b[10];


`endif



`ifdef COL_WIDTH_EQ_12
            qg62d57[11]  = wlbb00b[10];            qg62d57[13]  = wlbb00b[11];


`endif
            if (psc02ef || wlbb00b[`ROW_WIDTH - 1]) begin               qg62d57[10]  =  pfec3e7[`COL_WIDTH];                      end            else begin               qg62d57[10]  =  1'b0;            end end         else begin


`ifdef COL_WIDTH_EQ_12
            qg62d57[13:0]  = ng9c42b;


`else
            qg62d57[12:0]  = ng9c42b;


`endif
         end       end
       fadf773 : begin         hbe664e  =  ale7f83;         xy993b5 =  'h1;         of4ed5d =  'h0;         bnb5762  =  'h1;         lq5d8b5    =  rt61f3f ; if( ayea615 >1) begin             qg62d57[9:0]  =  wlbb00b[9:0];             qg62d57[12]  = tw83a98   ;


`ifdef COL_WIDTH_EQ_11
            qg62d57[11]  = wlbb00b[10];


`endif



`ifdef COL_WIDTH_EQ_12
            qg62d57[11]  = wlbb00b[10];            qg62d57[13]  = wlbb00b[11];


`endif
            if (psc02ef || wlbb00b[`ROW_WIDTH -1]) begin               qg62d57[10]  =  pfec3e7[`COL_WIDTH];                     end           else    begin             qg62d57[10]  =  1'b0;            end           end        else begin


`ifdef COL_WIDTH_EQ_12
            qg62d57[13:0]  = ng9c42b;


`else
            qg62d57[12:0]  = ng9c42b;


`endif
        end       end
       byfbb9a : begin         hbe664e  = {`CS_WIDTH{1'b0}} ;         xy993b5 =  'h1;         of4ed5d =  'h1;         bnb5762  =  'h1;         lq5d8b5    =   qgfab5e;         qg62d57  =   zxec5aa;       end       default: begin         hbe664e  = {`CS_WIDTH{1'b0}} ;         xy993b5 =  'h1;         of4ed5d =  'h1;         bnb5762  =  'h1;         lq5d8b5    =  qgfab5e ;         qg62d57  =  zxec5aa;       end      endcase
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       zx61f9c    <=  'b1;       th7e730   <=  'b1;       ng9cc3e   <=  'b1;       hq30f96    <=  'b1;       wy3e598      <=  'b0;       pu9660c    <=  'b0;       hqb552    <=  'b0;    end    else begin       zx61f9c    <=  os7dc58  ;       th7e730   <=  nr7160a ;       ng9cc3e   <=  rg582b7 ;       hq30f96    <=  ukadd8 ;       wy3e598      <=  zmb7601   ;       pu9660c    <=  ymb3062 ;       hqb552    <=  sh7a490;    end
end

always @ (ks92170 or ale7f83 or ba832c8 or ic56ec0 or pu9660c           or pfec3e7 or rt61f3f or ym2b704) begin
iefce6  = {`CS_WIDTH{1'b1}};
fnf3987 = 'h1;
pfe61f2 = 'h1;
gq87cb3  = 'h1;
czf2cc1  =  'h0;
ymb3062  =  'h0;
pf5aa93 = 1'b0;      case (ks92170)        pu9ce9b  : begin         fnf3987 =  'h0;         pfe61f2 =  'h0;         gq87cb3  =  'h0;         czf2cc1    =  rt61f3f ;         ymb3062  =  {ba832c8,pfec3e7[9:0]};
         if (ym2b704) begin          pf5aa93 = 1'b1;

`ifdef CS_WIDTH_2
         iefce6  = 2'b01;


`else 
         iefce6  = 4'b0101;


`endif
         end         else begin          pf5aa93 = 1'b0;

`ifdef CS_WIDTH_2
         iefce6  = 2'b10;


`else 



`ifdef CS_WIDTH_4
         iefce6  = 4'b1010;


`else
         iefce6  = 1'b0;


`endif



`endif
         end
       end       ene74da  : begin         iefce6  =  'h0;         fnf3987 =  'h0;         pfe61f2 =  'h0;         gq87cb3  =  'h1;         ymb3062  =  'h600 ;       end       xy3a6d4  : begin         iefce6  =  'h0;         fnf3987 =  'h0;         pfe61f2 =  'h0;         gq87cb3  =  'h1;         ymb3062  =  'h600 ;       end       kdd36a3  : begin         iefce6  =  'h0;         fnf3987 =  'h1;         pfe61f2 =  'h1;         gq87cb3  =  'h1;         ymb3062  =  'h600 ;       end       nt9b51c  : begin         fnf3987 =  'h0;         pfe61f2 =  'h1;         gq87cb3  =  'h0;         czf2cc1    =  rt61f3f ;         ymb3062[10] = 1'b1;         iefce6  =  'b0;       end       neda8e6  : begin         iefce6  =  'h0;         fnf3987 =  'h1;         pfe61f2 =  'h1;         gq87cb3  =  'h1;         ymb3062  =  'h600 ;       end       qgd4733  : begin         iefce6  = 'h0;         fnf3987 =  'h1;         pfe61f2 =  'h1;         gq87cb3  =  'h1;         ymb3062  =  'h600 ;       end       ksa3999  : begin         iefce6  = {`CS_WIDTH{1'b0}};         fnf3987 =  'h1;         pfe61f2 =  'h1;         gq87cb3  =  'h0;         ymb3062  = 'h400 ;       end       xy939d3  : begin         iefce6  = {`CS_WIDTH{1'b0}};         fnf3987 =  'h1;         pfe61f2 =  'h1;         gq87cb3  =  'h0;         ymb3062  =  'h0 ;      end       default: begin         iefce6  = {`CS_WIDTH{1'b0}} ;         fnf3987 =  'h1;         pfe61f2 =  'h1;         gq87cb3  =  'h1;         czf2cc1    =  ic56ec0 ;         ymb3062  =  pu9660c;       end      endcase
end

always@* begin qv856e0<=pua8071[0];ym2b704<=pua8071[1];gb5b820<=pua8071[2];ofdc105<=pua8071[3];yke082d<=pua8071[4];tw149c<=pua8071[5];je20b42<=pua8071[6];xlaf9fe<=pua8071[7];by7cff7<=pua8071[8];su6848f<=pua8071[9];ne42479<=pua8071[10];gd123cb<=pua8071[11];hd91e5c<=pua8071[12];oh8f2e6<=pua8071[13];rg79735<=pua8071[14];iccb9aa<=pua8071[15];qg5cd50<=pua8071[16];rv3d87c<={ng2517e>>1,pua8071[17]};pfec3e7<={xl28bf3>>1,pua8071[18]};ntaa03a<={addr_init_0>>1,pua8071[19]};xj501d6<={addr_init_1>>1,pua8071[20]};qv80eb7<={addr_init_2>>1,pua8071[21]};ep75bd<={addr_init_3>>1,pua8071[22]};rt61f3f<={zx45f9e>>1,pua8071[23]};ofd6f6a<=pua8071[24];vkb7b55<=pua8071[25];lsbdaaa<=pua8071[26];shed553<=pua8071[27];of6aa9d<=pua8071[28];jp554ed<=pua8071[29];jraa76f<=pua8071[30];os53b7e<=pua8071[31];ale7f83<={yz8a3aa>>1,pua8071[32]};shedf88<=pua8071[33];kd6fc44<=pua8071[34];dz7e225<=pua8071[35];mtd03d<=pua8071[36];mg8897a<={ux85d13>>1,pua8071[37]};ww681ec<=pua8071[38];vv40f61<=pua8071[39];do2f46a<={pu30ba2>>1,pua8071[40]};ayea615<={uk3e0cb>>1,pua8071[41]};yz1d4c2<=pua8071[42];tw83a98<=pua8071[43];jr3df62<=pua8071[44];ic68751<=pua8071[45];sj95023<={zz1ccc9>>1,pua8071[46]};baa811d<={hbe664e>>1,pua8071[47]};jp408eb<=pua8071[48];zm475f<=pua8071[49];ux23afa<=pua8071[50];an1d7d5<=pua8071[51];rgebead<=pua8071[52];hb5f56b<=pua8071[53];qgfab5e<={irabb16>>1,pua8071[54]};byd5af0<={lq5d8b5>>1,pua8071[55]};riad782<={jraae7e>>1,pua8071[56]};hb6bc13<={tu573f7>>1,pua8071[57]};en5e09f<=pua8071[58];suf04fc<=pua8071[59];mg827e0<=pua8071[60];zz13f01<=pua8071[61];gd9f80f<=pua8071[62];pffc07d<=pua8071[63];sue03ee<={gd8ad79>>1,pua8071[64]};je1f71<={ay56bcc>>1,pua8071[65]};ymfb8b<={zx61f9c>>1,pua8071[66]};os7dc58<={iefce6>>1,pua8071[67]};psee2c1<=pua8071[68];nr7160a<=pua8071[69];bn8b056<=pua8071[70];rg582b7<=pua8071[71];wwc15bb<=pua8071[72];ukadd8<=pua8071[73];ic56ec0<={wy3e598>>1,pua8071[74]};zmb7601<={czf2cc1>>1,pua8071[75]};wlbb00b<={ks1a363>>1,pua8071[76]};dzd805d<=pua8071[77];psc02ef<=pua8071[78];ri177a<=pua8071[79];hqbbd2<=pua8071[80];jc5de92<=pua8071[81];goef492<=pua8071[82];sh7a490<=pua8071[83];ne763c3<={cmd>>1,pua8071[84]};ks9242e<={rg527de>>1,pua8071[85]};ks92170<={pu93ef2>>1,pua8071[86]};mt90b80<=pua8071[87];cb85c04<=pua8071[88];uk2e025<=pua8071[89];al70128<=pua8071[90];an80944<=pua8071[91];end
always@* begin ks1500e[2047]<=uve8fae;ks1500e[2046]<=cbae881;ks1500e[2044]<=kdc9117;ks1500e[2040]<=rg47294;ks1500e[2032]<=sw3eba2;ks1500e[2017]<=kq59b50;ks1500e[1988]<=czf2cc1[0];ks1500e[1987]<=zm1be7e;ks1500e[1928]<=ks1a363[0];ks1500e[1926]<=jpf9f9a;ks1500e[1809]<=ho6c601;ks1500e[1805]<=ecafb5;ks1500e[1804]<=xwc566d;ks1500e[1803]<=zx45f9e[0];ks1500e[1761]<=yz8a3aa[0];ks1500e[1748]<=ipf7456;ks1500e[1727]<=ep9f793;ks1500e[1696]<=gd8ad79[0];ks1500e[1668]<=nga7c19;ks1500e[1571]<=dm6300b;ks1500e[1562]<=wl_act;ks1500e[1560]<=gd178e7;ks1500e[1558]<=the666b;ks1500e[1550]<=lq6621f;ks1500e[1531]<=yxf2710;ks1500e[1475]<=yxc60d6;ks1500e[1464]<=eaf55bd;ks1500e[1448]<=rvba2b5;ks1500e[1406]<=tufbc9c;ks1500e[1345]<=ay56bcc[0];ks1500e[1288]<=ieacd3e;ks1500e[1287]<=iefce6[0];ks1500e[1242]<=ecb9fba;ks1500e[1131]<=pf5aa93;ks1500e[1094]<=qv1805a;ks1500e[1076]<=ux85d13[0];ks1500e[1072]<=ria8044;ks1500e[1069]<=oh3335e;ks1500e[1056]<=vv459d3;ks1500e[1055]<=fnf3987;ks1500e[1052]<=ng2517e[0];ks1500e[1028]<=uvc9dab;ks1500e[1023]<=mre7a3e;ks1500e[1014]<=ng93885;ks1500e[994]<=wy3e598[0];ks1500e[902]<=yzbed43;ks1500e[901]<=addr_init_3[0];ks1500e[880]<=hdaade8;ks1500e[874]<=hb7ee8a;ks1500e[863]<=pu93ef2[0];ks1500e[848]<=med15af;ks1500e[834]<=uk3e0cb[0];ks1500e[775]<=vx81b91;ks1500e[765]<=ykde4e2;ks1500e[732]<=sh5eab7;ks1500e[643]<=zx61f9c[0];ks1500e[621]<=tu573f7[0];ks1500e[565]<=hqb552;ks1500e[528]<=fp1c880;ks1500e[527]<=th7e730;ks1500e[514]<=xy993b5;ks1500e[497]<=gq87cb3;ks1500e[450]<=addr_init_2[0];ks1500e[437]<=necfdd1;ks1500e[431]<=rg527de[0];ks1500e[417]<=pu30ba2[0];ks1500e[387]<=fca206e;ks1500e[366]<=zx6bd56;ks1500e[310]<=jraae7e[0];ks1500e[282]<=ri16aa;ks1500e[257]<=wl33276;ks1500e[248]<=hq30f96;ks1500e[225]<=addr_init_1[0];ks1500e[215]<=cmd[0];ks1500e[208]<=dm66174;ks1500e[193]<=fpbfbb7;ks1500e[183]<=zxcd7aa;ks1500e[155]<=lq5d8b5[0];ks1500e[141]<=psc02d5;ks1500e[128]<=hbe664e[0];ks1500e[124]<=pfe61f2;ks1500e[112]<=addr_init_0[0];ks1500e[104]<=oh2cc2e;ks1500e[96]<=rte39e8;ks1500e[91]<=ls99af5;ks1500e[77]<=irabb16[0];ks1500e[64]<=zz1ccc9[0];ks1500e[62]<=ng9cc3e;ks1500e[56]<=xl28bf3[0];ks1500e[38]<=bnb5762;ks1500e[19]<=ne76aec;ks1500e[9]<=of4ed5d;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule































`timescale 1 ns / 100 ps
module tw2fad4 (

   clk,
   rst_n,
   datain,
   dmsel,
   wj75566,
   vxaab34,
   nr559a7,
   dm6351f,
   ou1a8fa,
   DataRdy2Data,

   wl_act,
   mgb6966,
   sjb4b30,
   

  datain_valid,      
  ddr_dq_out,
  dqs_out,        
  dqs_out_en,     
  dqs_out_en_erly, 
  dq_out_en,      
  ddr_dqm,
  pio_read,
  cal_bc4 
   );
input                                 clk;
input                                 rst_n;
input   [`DSIZE -1:0]                 datain;
input   [`USER_DM -1:0]               dmsel;
input                                 wj75566;
input                                 vxaab34;
input                                 nr559a7;
input [`RL_WIDTH-1:0]                 dm6351f;
input [`WL_WIDTH-1:0]                 ou1a8fa;
input   [1:0]        DataRdy2Data;
input                                 wl_act;
input                                 mgb6966;
input [`DQS_WIDTH-1:0]                sjb4b30;
output                                datain_valid;
output  [`DSIZE -1:0]                 ddr_dq_out;
output  [`DQS_WIDTH-1:0]              dqs_out;
output                                dqs_out_en;
output                                dqs_out_en_erly;
output                                dq_out_en;
output  [`USER_DM -1:0]               ddr_dqm;
output                                pio_read;
output                                cal_bc4 ;
reg [3:0]                             pfd270d;
reg [3:0]                             zm9386e;
reg [3:0]                             fc9c373;
reg [3:0]                             fae1b9b;
reg [3:0]                             gddcda;
reg [3:0]                             hb6e6d5;
reg [3:0]                             zk736ae;
reg [3:0]                             xl9b573;
reg [3:0]                             psdab9e;
reg [3:0]                             hod5cf3;
reg [`DSIZE -1:0]                     ddr_dq_out  ;
reg [`USER_DM -1:0]                   ddr_dqm ;
reg                                   zz9e6a2,hbf3516,ir9a8b7;
reg                                   cmd45bd;
reg                                   dqs_out_en ;
wire                                  dqs_out_en_erly   ;
reg [`RL_WIDTH-1:0]                   zmb7a5f;
reg [`WL_WIDTH-1:0]                   ribd2fa;
reg                                   lde97d2;
reg                                   kd4be97;
reg                                   jp5f4bc;
reg                                   gofa5e6;
reg                                   fnd2f31;
reg                                   aa9798f;
reg                                   mgbcc79;
reg                                   ble63c9;
reg                                   ym31e4e;
reg                                   oh8f271;
reg                                   rg7938d;
reg                                   kdc9c6a;
reg                                   mr4e355;
reg                                   dz71aad;
reg                                   aa8d56f;
wire                                  gb6ab78;
wire                                  xj55bc5;
wire                                  lsade2e;
wire                                  gb6f172;
wire                                  qg78b94;
wire                                  fac5ca1;
wire                                  sw2e50b;
wire                                  ic72858;
wire                                  nt942c0;
wire                                  oha1607;
reg                                   dob03d;
reg                                   ho581eb;
reg                                   vic0f5b;
reg                                   sj7adb;
reg                                   rv3d6dc;
reg                                   jceb6e6;
reg                                   qt5b732;
reg                                   kqdb994;
reg                                   uvdcca1;
reg                                   the650c;
wire                                  ph32866;
wire                                  rv94336;
wire                                  uxa19b7;
wire                                  xlcdbc;
wire                                  lq66de7;
wire                                  gd36f3b;
wire                                  vkb79dc;
wire                                  ksbcee2;
wire                                  kde7711;
wire                                  sw3b88c;
wire                                  shdc460;
wire                                  gbe2305;
wire                                  datain_valid;
reg                                   je8c162;
reg                                   al60b12, qi5894;
reg  [`DQS_WIDTH-1:0]                 dqs_out ;
wire                                  ea6250d;
wire                                  yz12868;
wire                                  pio_read  ;
wire                                  dq_out_en ;
reg                                   ohd17c, me68be4, pf45f20, vk2f907, lq7c83b;
reg                                   rge41db, ba20edb, an76da;
reg                                   ec3b6d5;
wire                                  cal_bc4 ;
reg                                   eadb548 ;
wire                                  tudaa40, ned5203;
reg [`DSIZE - 1 : 0] mga901b;
reg [`USER_DM - 1 : 0] rg480d9;
reg vk3fc1d;
reg psfe0ea;
reg wwf0753;
reg [`RL_WIDTH - 1 : 0] wyf9fe;
reg [`WL_WIDTH - 1 : 0] zk7cff0;
reg [1 : 0] hd28340;
reg mtd03d;
reg en41a07;
reg [`DQS_WIDTH - 1 : 0] hod545e;
reg [3 : 0] tjaa2f3;
reg [3 : 0] sh5179e;
reg [3 : 0] db8bcf5;
reg [3 : 0] en5e7ae;
reg [3 : 0] vvf3d74;
reg [3 : 0] nt9eba6;
reg [3 : 0] qgf5d37;
reg [3 : 0] cbae9b9;
reg [3 : 0] rt74dcd;
reg [3 : 0] iea6e6f;
reg jr37379;
reg wyb9bcf;
reg dzcde79;
reg ip6f3cf;
reg [`RL_WIDTH - 1 : 0] ho79e7c;
reg [`WL_WIDTH - 1 : 0] lqcf3e3;
reg tu79f1b;
reg dmcf8db;
reg dm7c6da;
reg dze36d2;
reg pu1b696;
reg cmdb4b2;
reg dmda590;
reg nrd2c82;
reg ng96417;
reg jeb20ba;
reg yz905d3;
reg wy82e9d;
reg wl174e8;
reg fpba744;
reg wjd3a27;
reg gq9d13d;
reg ofe89e9;
reg en44f4c;
reg nt27a65;
reg xl3d32f;
reg hbe997e;
reg yk4cbf6;
reg uv65fb1;
reg vk2fd8c;
reg nr7ec63;
reg fnf631e;
reg sjb18f7;
reg ri8c7bd;
reg lq63dea;
reg fc1ef53;
reg gbf7a9b;
reg vkbd4dc;
reg osea6e2;
reg cm53710;
reg bn9b880;
reg aldc407;
reg she203d;
reg ec101ec;
reg ux80f61;
reg kf7b0d;
reg fp3d86c;
reg xjec367;
reg dz61b3f;
reg qvd9fe;
reg ho6cff5;
reg yk67faa;
reg fc3fd51;
reg rgfea8a;
reg icf5452;
reg ntaa290;
reg wj51486;
reg ir8a435;
reg vi521ad;
reg wl90d6a;
reg do86b54;
reg zm35aa2;
reg vkad513;
reg mr6a89b;
reg sh544dd;
reg baa26ed;
reg bn1376a;
reg tj9bb56;
reg pfddab7;
reg ened5be;
reg [2047:0] ks1500e;
wire [90:0] pua8071;

localparam rt4038b = 91,hq1c5e = 32'hfdffd42b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;











assign tudaa40 =  !(jr37379 || wyb9bcf);
assign ned5203 =  !jr37379 ;
assign      gb6ab78 = ((tjaa2f3 == lqcf3e3) && lqcf3e3 != 0 );
assign      xj55bc5 = ((sh5179e == lqcf3e3) && lqcf3e3 != 0 );
assign      lsade2e = ((db8bcf5 == lqcf3e3) && lqcf3e3 != 0 );
assign      gb6f172 = ((en5e7ae == lqcf3e3) && lqcf3e3 != 0 );
assign      qg78b94 = ((vvf3d74 == lqcf3e3) && lqcf3e3 != 0 );


assign      ph32866 = (tjaa2f3 == 4'b0 ) ? 0: 1;
assign      rv94336 = (sh5179e == 4'b0 ) ? 0: 1;
assign      uxa19b7 = (db8bcf5 == 4'b0 ) ? 0: 1;
assign      xlcdbc = (en5e7ae == 4'b0 ) ? 0: 1;
assign      lq66de7 = (vvf3d74 == 4'b0 ) ? 0: 1;
assign      gd36f3b = !aldc407 && !she203d && !ec101ec && !ux80f61 && !kf7b0d ;

assign      vkb79dc = (nt9eba6 == 4'b0 ) ? 0: 1;
assign      ksbcee2 = (qgf5d37 == 4'b0 ) ? 0: 1;
assign      kde7711 = (cbae9b9 == 4'b0 ) ? 0: 1;
assign      sw3b88c = (rt74dcd == 4'b0 ) ? 0: 1;
assign      shdc460 = (iea6e6f == 4'b0 ) ? 0: 1;
assign      fac5ca1 = (tjaa2f3 == (zk7cff0 - 3));
assign      sw2e50b = (sh5179e == (zk7cff0 - 3));
assign      ic72858 = (db8bcf5 == (zk7cff0 - 3));
assign      nt942c0 = (en5e7ae == (zk7cff0 - 3));
assign      oha1607 = (vvf3d74 == (zk7cff0 - 3));

assign      gbe2305 = !xjec367 && !dz61b3f && !qvd9fe && !ho6cff5 && !yk67faa ;
assign      ea6250d=tu79f1b || dmcf8db || dm7c6da || dze36d2 || pu1b696;
                                       
assign      cal_bc4 = wl90d6a;
assign      yz12868=gq9d13d || ofe89e9 || en44f4c || nt27a65 || xl3d32f;



assign      datain_valid = rgfea8a;
assign      pio_read = fnf631e || sjb18f7 || ri8c7bd || lq63dea || fc1ef53;
assign      dqs_out_en_erly = !dqs_out[0];
assign      dq_out_en = dqs_out_en;




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin        ddr_dq_out    <=  'b0;        ddr_dqm       <=  'b0;   end  else if ((hd28340 == 0) && datain_valid) begin        ddr_dq_out    <=  mga901b;        ddr_dqm       <=  rg480d9;   end   else if ((hd28340 == 1) && (jr37379 || wyb9bcf)) begin        ddr_dq_out    <=  mga901b;        ddr_dqm       <=  rg480d9;   end   else if ((hd28340 == 2 ) &&  (jr37379 || wyb9bcf))  begin        ddr_dq_out    <=  mga901b;        ddr_dqm       <=  rg480d9;   end   else begin        ddr_dq_out    <=  ddr_dq_out ;        ddr_dqm       <=  ddr_dqm;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	zmb7a5f  <=  'b0;   else if (wyf9fe > 2)	zmb7a5f  <=  (wyf9fe-2);
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	ribd2fa  <=  'b0;   else if (zk7cff0 > 2)	ribd2fa  <=  (zk7cff0-2);
end






always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	pfd270d  <=  'b0;  else if (tu79f1b)	pfd270d  <=  'b0;  else if ((vk3fc1d && (fp3d86c ||kf7b0d)) || aldc407)     pfd270d  <= tjaa2f3 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	zm9386e  <=  'b0;   else if (dmcf8db)	zm9386e  <=  'b0;   else if ((vk3fc1d && aldc407) || she203d)     zm9386e  <= sh5179e + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	fc9c373  <=  'b0;   else if (dm7c6da)	fc9c373  <=  'b0;   else if ((vk3fc1d && she203d) || ec101ec)     fc9c373  <= db8bcf5 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	fae1b9b  <=  'b0;  else if (dze36d2)	fae1b9b  <=  'b0;   else if ((vk3fc1d && ec101ec) || ux80f61)     fae1b9b  <= en5e7ae + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	gddcda  <=  'b0;   else if (pu1b696)	gddcda  <=  'b0;   else if ((vk3fc1d && ux80f61) ||  kf7b0d)     gddcda  <= vvf3d74 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	hb6e6d5  <=  'b0;   else if (fnf631e)	hb6e6d5  <=  'b0;   else if ((psfe0ea && (fc3fd51 || yk67faa)) || xjec367)     hb6e6d5  <= nt9eba6 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	zk736ae  <=  'b0;   else if (sjb18f7)	zk736ae  <=  'b0;   else if ((psfe0ea && xjec367) || dz61b3f)     zk736ae  <= qgf5d37 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	xl9b573  <=  'b0;  else if (ri8c7bd)	xl9b573  <=  'b0;   else if ((psfe0ea && dz61b3f) || qvd9fe)     xl9b573  <= cbae9b9 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	psdab9e  <=  'b0;   else if (lq63dea)	psdab9e  <=  'b0;   else if ((psfe0ea && qvd9fe) || ho6cff5)     psdab9e  <= rt74dcd + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	hod5cf3  <=  'b0;   else if (fc1ef53)	hod5cf3  <=  'b0;   else if ((psfe0ea && ho6cff5) || yk67faa)     hod5cf3  <= iea6e6f + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	zz9e6a2  <=  'b0;   else if (wj51486)	zz9e6a2  <=  'b1;   else	zz9e6a2  <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	cmd45bd  <=  'b0;   else if (ir8a435)	cmd45bd  <=  'b1;   else	cmd45bd  <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin  if (!rst_n) begin	dqs_out <=  'b0;            dqs_out_en <=  1'b1;  end  else if ( mtd03d && en41a07)  begin           dqs_out <= hod545e;           dqs_out_en <= 1'b0;  end  else  case(zk7cff0)     3:  if (wl90d6a) begin                dqs_out <= {`DQS_WIDTH{jr37379 || ip6f3cf}};                dqs_out_en <= !jr37379 ;          end          else   begin               dqs_out <= {`DQS_WIDTH{jr37379 || wyb9bcf || ip6f3cf}};               dqs_out_en <= !(jr37379 || wyb9bcf);         end     4:  if (zm35aa2) begin              dqs_out <= {`DQS_WIDTH{jr37379 || ip6f3cf}};              dqs_out_en <= !jr37379 ;          end          else   begin              dqs_out <= {`DQS_WIDTH{jr37379 || wyb9bcf || ip6f3cf}};              dqs_out_en <= !(jr37379 || wyb9bcf);         end     5: if (vkad513) begin              dqs_out <= {`DQS_WIDTH{jr37379 || ip6f3cf}};              dqs_out_en <= !jr37379 ;          end          else  begin              dqs_out <= {`DQS_WIDTH{jr37379 || wyb9bcf || ip6f3cf}};              dqs_out_en <= !(jr37379 || wyb9bcf);          end     6:  if (mr6a89b) begin              dqs_out <= {`DQS_WIDTH{jr37379 || ip6f3cf}};              dqs_out_en <= !jr37379 ;          end          else  begin              dqs_out <= {`DQS_WIDTH{jr37379 || wyb9bcf || ip6f3cf}};              dqs_out_en <= !(jr37379 || wyb9bcf);         end     7: if (sh544dd) begin              dqs_out <= {`DQS_WIDTH{jr37379 || ip6f3cf}};              dqs_out_en <= !jr37379 ;        end        else  begin             dqs_out <= {`DQS_WIDTH{jr37379 || wyb9bcf || ip6f3cf}};             dqs_out_en <= !(jr37379 || wyb9bcf);        end     default:if (wl90d6a)  begin             dqs_out <= {`DQS_WIDTH{jr37379 || ip6f3cf}};             dqs_out_en <= !jr37379 ;          end          else    begin             dqs_out <= {`DQS_WIDTH{jr37379 || wyb9bcf || ip6f3cf}};             dqs_out_en <= !(jr37379 || wyb9bcf);          end  endcase
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     hbf3516  <=  'b0;     ir9a8b7  <=  'b0;   end   else begin     hbf3516  <=  jr37379;     ir9a8b7  <=  (jr37379 || wyb9bcf);   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     dob03d  <=  1'b0;     jceb6e6  <=  1'b0;   end   else if ((nt9eba6 == ho79e7c)&& (|nt9eba6))  begin     dob03d  <=  1'b1;     jceb6e6  <=  1'b1;   end   else begin     dob03d  <=  1'b0;     jceb6e6  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     ho581eb  <=  1'b0;     qt5b732  <=  1'b0;   end   else if ((qgf5d37 == ho79e7c) && (|qgf5d37)) begin     ho581eb  <=  1'b1;     qt5b732  <=  1'b1;   end   else begin     ho581eb  <=  1'b0;     qt5b732  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     vic0f5b  <=  1'b0;     kqdb994  <=  1'b0;   end   else if ((cbae9b9 == ho79e7c)  && (|cbae9b9))begin     vic0f5b  <=  1'b1;     kqdb994  <=  1'b1;   end   else begin     vic0f5b  <=  1'b0;     kqdb994  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     sj7adb  <=  1'b0;     uvdcca1  <=  1'b0;   end   else if ((rt74dcd == ho79e7c) && (|rt74dcd)) begin     sj7adb  <=  1'b1;     uvdcca1  <=  1'b1;   end   else begin     sj7adb  <=  1'b0;     uvdcca1  <=  1'b0;  end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin     rv3d6dc  <=  1'b0;     the650c  <=  1'b0;   end   else if ((iea6e6f == ho79e7c) && (|iea6e6f))begin     rv3d6dc  <=  1'b1;     the650c  <=  1'b1;   end   else begin     rv3d6dc  <=  1'b0;     the650c  <=  1'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	lde97d2  <=  1'b0;   else if ((tjaa2f3 == lqcf3e3) && (|tjaa2f3) )     lde97d2  <=  1'b1;   else	lde97d2  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     kd4be97  <=  1'b0;   else if ((sh5179e == lqcf3e3) && (|sh5179e) )     kd4be97  <=  1'b1;   else     kd4be97  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     jp5f4bc  <=  1'b0;   else if ((db8bcf5 == lqcf3e3) && (|db8bcf5) )     jp5f4bc  <=  1'b1;   else     jp5f4bc  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     gofa5e6  <=  1'b0;   else if ((en5e7ae == lqcf3e3) && (|en5e7ae) )     gofa5e6  <=  1'b1;   else     gofa5e6  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     fnd2f31  <=  1'b0;   else if ((vvf3d74 == lqcf3e3) && (|vvf3d74) )     fnd2f31  <=  1'b1;   else     fnd2f31  <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)	ec3b6d5 <=  1'b0;   else if (vk3fc1d && jr37379)	ec3b6d5 <=  1'b1;   else	ec3b6d5 <=  1'b0;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      me68be4 <=  1'b0;   else if (vk3fc1d  || psfe0ea)      me68be4 <=  wwf0753;   else      me68be4 <=  wl90d6a;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin      pf45f20 <=  1'b0;      vk2f907 <=  1'b0;      lq7c83b <=  1'b0;      rge41db <=  1'b0;      ba20edb <=  1'b0;      an76da <=  1'b0;   end   else begin      pf45f20 <=  wl90d6a;      vk2f907 <=  do86b54;      lq7c83b <=  zm35aa2;      rge41db <=  vkad513;      ba20edb <=  mr6a89b;      an76da <=  sh544dd;  end
end
always @ (negedge rst_n or posedge clk) begin if (!rst_n) begin     al60b12  <= 1'b0;     qi5894  <= 1'b0; end else begin     al60b12 <= vk3fc1d;     qi5894 <= icf5452; end
end

always @ (negedge rst_n or posedge clk) begin if (!rst_n)     eadb548  <= 1'b0;  else if (!pio_read) begin  case (wyf9fe)   3: eadb548  <= (wl90d6a);   4: eadb548  <= (do86b54);   5:  eadb548  <= (do86b54);   6: eadb548  <= (zm35aa2);   7: eadb548  <= (vkad513);   8: eadb548  <= (mr6a89b);   9: eadb548  <= (sh544dd);   10: eadb548  <= (baa26ed);   default:eadb548  <= (wl90d6a); endcase
end
end
always @ (negedge rst_n or posedge clk) begin if (!rst_n) begin      aa9798f <=  1'b0;      mgbcc79 <=  1'b0;      ble63c9 <=  1'b0;      ym31e4e <=  1'b0;      oh8f271 <=  1'b0;      rg7938d <=  1'b0;      kdc9c6a <=  1'b0;      mr4e355 <=  1'b0;      dz71aad <=  1'b0;      aa8d56f <=  1'b0;
 end else if (zk7cff0 > 3) begin      aa9798f <=  hbe997e ;      mgbcc79 <=  yk4cbf6 ;      ble63c9 <=  uv65fb1 ;      ym31e4e <=  vk2fd8c ;      oh8f271 <=  nr7ec63 ;      rg7938d <=  cmdb4b2 ;      kdc9c6a <=  dmda590 ;      mr4e355 <=  nrd2c82 ;      dz71aad <=  ng96417 ;      aa8d56f <=  jeb20ba ; end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      je8c162 <=  1'b0;   else begin   case(zk7cff0)     3: case({hd28340, wwf0753})        3'b011: je8c162 <=  icf5452;        3'b010: je8c162 <=  icf5452 || ntaa290;        3'b101: je8c162 <=  vk3fc1d;        3'b100: je8c162 <=  vk3fc1d || icf5452 ;        default : je8c162 <=  1'b0;        endcase     5: case({hd28340, do86b54})        3'b011: je8c162 <=  (cmdb4b2 || dmda590 || nrd2c82 ||ng96417 ||jeb20ba );        3'b010: je8c162 <=  (cmdb4b2 || yz905d3 || dmda590 || wy82e9d ||                      nrd2c82 || wl174e8 || ng96417 || fpba744 ||                      jeb20ba || wjd3a27  );        3'b101: je8c162 <=  (hbe997e ||yk4cbf6 || uv65fb1 ||vk2fd8c || nr7ec63  );        3'b100: je8c162 <=  (hbe997e || cmdb4b2 ||yk4cbf6 || dmda590 ||                          uv65fb1 || nrd2c82 || vk2fd8c || ng96417 ||                          nr7ec63 || jeb20ba  )  ;        default : je8c162 <=  1'b0;        endcase      4: case({hd28340, wl90d6a})        3'b011: je8c162 <=  (cmdb4b2 || dmda590 || nrd2c82 ||ng96417 ||jeb20ba );        3'b010: je8c162 <=  (cmdb4b2 || yz905d3 || dmda590 || wy82e9d ||                      nrd2c82 || wl174e8 || ng96417 || fpba744 ||                      jeb20ba || wjd3a27  );        3'b101: je8c162 <=  (hbe997e ||yk4cbf6 || uv65fb1 ||vk2fd8c || nr7ec63  );        3'b100: je8c162 <=  (hbe997e || cmdb4b2 ||yk4cbf6 || dmda590 ||                          uv65fb1 || nrd2c82 || vk2fd8c || ng96417 ||                          nr7ec63 || jeb20ba  )  ;        default : je8c162 <=  1'b0;        endcase      6: case({hd28340, zm35aa2})        3'b011: je8c162 <=  (cmdb4b2 || dmda590 || nrd2c82 ||ng96417 ||jeb20ba );        3'b010: je8c162 <=  (cmdb4b2 || yz905d3 || dmda590 || wy82e9d ||                      nrd2c82 || wl174e8 || ng96417 || fpba744 ||                      jeb20ba || wjd3a27  );        3'b101: je8c162 <=  (hbe997e ||yk4cbf6 || uv65fb1 ||vk2fd8c || nr7ec63  );        3'b100: je8c162 <=  (hbe997e || cmdb4b2 ||yk4cbf6 || dmda590 ||                          uv65fb1 || nrd2c82 || vk2fd8c || ng96417 ||                          nr7ec63 || jeb20ba  )  ;        default : je8c162 <=  1'b0;        endcase      7: case({hd28340, vkad513})        3'b011: je8c162 <=  (cmdb4b2 || dmda590 || nrd2c82 ||ng96417 ||jeb20ba );        3'b010: je8c162 <=  (cmdb4b2 || yz905d3 || dmda590 || wy82e9d ||                      nrd2c82 || wl174e8 || ng96417 || fpba744 ||                      jeb20ba || wjd3a27  );        3'b101: je8c162 <=  (hbe997e ||yk4cbf6 || uv65fb1 ||vk2fd8c || nr7ec63  );        3'b100: je8c162 <=  (hbe997e || cmdb4b2 ||yk4cbf6 || dmda590 ||                          uv65fb1 || nrd2c82 || vk2fd8c || ng96417 ||                          nr7ec63 || jeb20ba  )  ;        default : je8c162 <=  1'b0;        endcase       default:case({hd28340, wwf0753})        3'b011: je8c162 <=  icf5452;        3'b010: je8c162 <=  icf5452 || ntaa290;        3'b101: je8c162 <=  vk3fc1d;        3'b100: je8c162 <=  vk3fc1d || icf5452 ;        default : je8c162 <=  1'b0;        endcase   endcase   end
end
always@* begin mga901b<={datain>>1,pua8071[0]};rg480d9<={dmsel>>1,pua8071[1]};vk3fc1d<=pua8071[2];psfe0ea<=pua8071[3];wwf0753<=pua8071[4];wyf9fe<={dm6351f>>1,pua8071[5]};zk7cff0<={ou1a8fa>>1,pua8071[6]};hd28340<={DataRdy2Data>>1,pua8071[7]};mtd03d<=pua8071[8];en41a07<=pua8071[9];hod545e<={sjb4b30>>1,pua8071[10]};tjaa2f3<={pfd270d>>1,pua8071[11]};sh5179e<={zm9386e>>1,pua8071[12]};db8bcf5<={fc9c373>>1,pua8071[13]};en5e7ae<={fae1b9b>>1,pua8071[14]};vvf3d74<={gddcda>>1,pua8071[15]};nt9eba6<={hb6e6d5>>1,pua8071[16]};qgf5d37<={zk736ae>>1,pua8071[17]};cbae9b9<={xl9b573>>1,pua8071[18]};rt74dcd<={psdab9e>>1,pua8071[19]};iea6e6f<={hod5cf3>>1,pua8071[20]};jr37379<=pua8071[21];wyb9bcf<=pua8071[22];dzcde79<=pua8071[23];ip6f3cf<=pua8071[24];ho79e7c<={zmb7a5f>>1,pua8071[25]};lqcf3e3<={ribd2fa>>1,pua8071[26]};tu79f1b<=pua8071[27];dmcf8db<=pua8071[28];dm7c6da<=pua8071[29];dze36d2<=pua8071[30];pu1b696<=pua8071[31];cmdb4b2<=pua8071[32];dmda590<=pua8071[33];nrd2c82<=pua8071[34];ng96417<=pua8071[35];jeb20ba<=pua8071[36];yz905d3<=pua8071[37];wy82e9d<=pua8071[38];wl174e8<=pua8071[39];fpba744<=pua8071[40];wjd3a27<=pua8071[41];gq9d13d<=pua8071[42];ofe89e9<=pua8071[43];en44f4c<=pua8071[44];nt27a65<=pua8071[45];xl3d32f<=pua8071[46];hbe997e<=pua8071[47];yk4cbf6<=pua8071[48];uv65fb1<=pua8071[49];vk2fd8c<=pua8071[50];nr7ec63<=pua8071[51];fnf631e<=pua8071[52];sjb18f7<=pua8071[53];ri8c7bd<=pua8071[54];lq63dea<=pua8071[55];fc1ef53<=pua8071[56];gbf7a9b<=pua8071[57];vkbd4dc<=pua8071[58];osea6e2<=pua8071[59];cm53710<=pua8071[60];bn9b880<=pua8071[61];aldc407<=pua8071[62];she203d<=pua8071[63];ec101ec<=pua8071[64];ux80f61<=pua8071[65];kf7b0d<=pua8071[66];fp3d86c<=pua8071[67];xjec367<=pua8071[68];dz61b3f<=pua8071[69];qvd9fe<=pua8071[70];ho6cff5<=pua8071[71];yk67faa<=pua8071[72];fc3fd51<=pua8071[73];rgfea8a<=pua8071[74];icf5452<=pua8071[75];ntaa290<=pua8071[76];wj51486<=pua8071[77];ir8a435<=pua8071[78];vi521ad<=pua8071[79];wl90d6a<=pua8071[80];do86b54<=pua8071[81];zm35aa2<=pua8071[82];vkad513<=pua8071[83];mr6a89b<=pua8071[84];sh544dd<=pua8071[85];baa26ed<=pua8071[86];bn1376a<=pua8071[87];tj9bb56<=pua8071[88];pfddab7<=pua8071[89];ened5be<=pua8071[90];end
always@* begin ks1500e[2047]<=dmsel[0];ks1500e[2046]<=wj75566;ks1500e[2045]<=kde7711;ks1500e[2044]<=vxaab34;ks1500e[2043]<=sw3b88c;ks1500e[2041]<=nr559a7;ks1500e[2038]<=shdc460;ks1500e[2035]<=dm6351f[0];ks1500e[2029]<=jceb6e6;ks1500e[2028]<=gbe2305;ks1500e[2022]<=ou1a8fa[0];ks1500e[2011]<=qt5b732;ks1500e[2009]<=je8c162;ks1500e[1996]<=DataRdy2Data[0];ks1500e[1974]<=kqdb994;ks1500e[1971]<=al60b12;ks1500e[1945]<=wl_act;ks1500e[1943]<=ic72858;ks1500e[1922]<=zmb7a5f[0];ks1500e[1901]<=uvdcca1;ks1500e[1895]<=qi5894;ks1500e[1857]<=rge41db;ks1500e[1842]<=mgb6966;ks1500e[1839]<=nt942c0;ks1500e[1797]<=ribd2fa[0];ks1500e[1791]<=gd36f3b;ks1500e[1778]<=qg78b94;ks1500e[1776]<=hbf3516;ks1500e[1759]<=uxa19b7;ks1500e[1755]<=the650c;ks1500e[1742]<=ea6250d;ks1500e[1667]<=ba20edb;ks1500e[1652]<=me68be4;ks1500e[1637]<=sjb4b30[0];ks1500e[1631]<=oha1607;ks1500e[1622]<=fae1b9b[0];ks1500e[1546]<=lde97d2;ks1500e[1535]<=vkb79dc;ks1500e[1531]<=sj7adb;ks1500e[1509]<=fac5ca1;ks1500e[1504]<=ir9a8b7;ks1500e[1471]<=xlcdbc;ks1500e[1468]<=hod5cf3[0];ks1500e[1463]<=ph32866;ks1500e[1437]<=yz12868;ks1500e[1391]<=xl9b573[0];ks1500e[1312]<=ble63c9;ks1500e[1286]<=an76da;ks1500e[1256]<=pf45f20;ks1500e[1226]<=pfd270d[0];ks1500e[1215]<=dob03d;ks1500e[1197]<=gddcda[0];ks1500e[1153]<=oh8f271;ks1500e[1050]<=eadb548;ks1500e[1044]<=kd4be97;ks1500e[1037]<=mr4e355;ks1500e[1023]<=datain[0];ks1500e[1022]<=ksbcee2;ks1500e[1014]<=rv3d6dc;ks1500e[971]<=sw2e50b;ks1500e[961]<=cmd45bd;ks1500e[928]<=lq7c83b;ks1500e[895]<=lq66de7;ks1500e[889]<=gb6f172;ks1500e[888]<=zz9e6a2;ks1500e[879]<=rv94336;ks1500e[826]<=ohd17c;ks1500e[811]<=fc9c373[0];ks1500e[765]<=vic0f5b;ks1500e[734]<=psdab9e[0];ks1500e[695]<=zk736ae[0];ks1500e[656]<=mgbcc79;ks1500e[576]<=ym31e4e;ks1500e[525]<=ec3b6d5;ks1500e[518]<=kdc9c6a;ks1500e[464]<=vk2f907;ks1500e[444]<=lsade2e;ks1500e[405]<=zm9386e[0];ks1500e[382]<=ho581eb;ks1500e[347]<=hb6e6d5[0];ks1500e[328]<=aa9798f;ks1500e[259]<=rg7938d;ks1500e[222]<=xj55bc5;ks1500e[164]<=fnd2f31;ks1500e[111]<=gb6ab78;ks1500e[104]<=ned5203;ks1500e[82]<=gofa5e6;ks1500e[55]<=aa8d56f;ks1500e[52]<=tudaa40;ks1500e[41]<=jp5f4bc;ks1500e[27]<=dz71aad;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule































`timescale 1 ns / 100 ps
module ep26022 (

   clk,
   rst_n,
   param_trcd,
   param_trp,
   param_twr,
   param_tras,
   param_trc,
   param_trrd,
   param_trtp,
   param_twtr,
   ir3c3f6,
   kq59b50,
   nt84678,
   sw3eba2,
   alc6999,
   xwc566d,
   wj75566,
   vxaab34,
   coa6661,
   aa34ccc,
   
   uk3e0cb,
   yzae610,
   ls1b119,
   su5627f, 
   yzb13f8,
   je89fc4,
   fn4fe23,
   uv7f11e,   
   

   dm6351f, 
   ou1a8fa,
   dz7ed10,
   dzf6886,
   yzb4436,
   jea21b4, 
   ks10da2,
   ls86d10,
   mt36882,
   sjb4414,
   nga20a4,
   qi10522,
      
   ks82911,
   do14888,
   ira4442,
   nga7c19, 
   wy88573,
   do2071d,
   rd_odd,
   fp1c880
);
input                           clk;
input                           rst_n;
input                           ir3c3f6;
input                           kq59b50;
input                           nt84678;
input                           sw3eba2;
input                           alc6999;
input                           xwc566d;
input                           wj75566;
input                           vxaab34;
input                           coa6661;
input                           aa34ccc;
input [5:0]                     uk3e0cb;
input                           yzae610;
input                           ls1b119;
input [`AL_WIDTH-1:0]           su5627f;
input [`CL_WIDTH-1:0]           yzb13f8;
input                           je89fc4;
input [`CWL_WIDTH-1:0]          fn4fe23;
input                           uv7f11e;
input   [`TRCD_WIDTH-1:0]       param_trcd;
input   [`TRP_WIDTH-1:0]        param_trp;
input   [2:0]                   param_twr;
input   [`TRAS_WIDTH-1:0]       param_tras;
input   [`TRC_WIDTH-1:0]        param_trc;
input   [`TRRD_WIDTH-1:0]       param_trrd;
input   [`TRTP_WIDTH-1:0]       param_trtp;
input   [`TWTR_WIDTH-1:0]       param_twtr;
output [`RL_WIDTH-1:0]          dm6351f;
output [`WL_WIDTH-1:0]          ou1a8fa;
output                          dz7ed10 ;
output                          dzf6886 ;
output                          yzb4436 ;
output                          jea21b4 ;
output                          ks10da2 ;
output                          ls86d10 ;
output                          mt36882 ;
output                          sjb4414 ;
output                          nga20a4 ;
output                          qi10522 ;
output                          ks82911 ;
output                          do14888 ;
output                          ira4442 ;
output                          nga7c19 ;
output                          wy88573 ;
output                          do2071d;
output                          rd_odd ;
output                          fp1c880;
reg     [`TRCD_WIDTH-1:0]       tu7972f;
reg     [`TRCD_WIDTH-1:0]       ykcb97a;
reg     [`TRP_WIDTH-1:0]        os5cbd0;
reg     [`TWR_WIDTH+4 :0]       uie5e80;
reg     [`TWR_WIDTH+4 :0]       vk2f400;
reg     [`TRAS_WIDTH-1:0]       ip7a002;
reg     [`TRC_WIDTH-1:0]        tud0015;
reg     [`TRRD_WIDTH-1:0]       kf800ab;
reg     [`TRTP_WIDTH+3:0]       co55c;
reg     [`TRTP_WIDTH+3:0]       sj2ae0;
reg     [`TWTR_WIDTH+3:0]       ou15704;
reg     [`TWTR_WIDTH+3:0]       wlab821;
reg     [`RL_WIDTH-1:0]         su5c10d;
reg     [`RL_WIDTH-1:0]         eae0869;
reg     [`RL_WIDTH-1:0]         xy4348;
reg     [`RL_WIDTH-1:0]         co21a42;
reg                             ird210;
reg                             rg69084;
reg                             fa48423;
reg     [`CL_WIDTH-1:0]         tu4211a;
reg     [`CL_WIDTH-1:0]         aa108d3;
reg     [`CWL_WIDTH-1:0]        lf84698;
reg     [`RL_WIDTH-1:0]         dm6351f;
reg     [`WL_WIDTH-1:0]         ou1a8fa;
reg     [5:0]                   ald31a0;
reg                             nga7c19;
reg                             alc6820;
reg                             aa34104;
reg                             bna0820;
reg                             zm4106;
reg                             do14888;
reg                             ira4442;
wire                            do2071d;
reg                             bn6492, ph32497;
reg                             sw924bf, wy925f8;
reg                             wy88573;
reg                             fp1c880;
reg                             fpbf009;
reg                             wjf804f;
reg                             xwc027c;
reg                             do13e2;
reg                             bn9f12;
reg                             th4f897;
reg                             by7c4be;
reg                             mre25f2;
reg                             dz7ed10;
reg                             dzf6886;
reg                             yzb4436;
reg                             mt36882;
reg                             sjb4414;
reg                             ks10da2;
reg                             ls86d10;
reg                             nga20a4;
reg                             qi10522 ;
reg                             ks82911;
reg                             jea21b4;
wire                            rd_odd;
reg                             zxe34f0;
reg                             ie1a786;
reg                             ald3c30;
reg                             ph9e185;

`ifdef ECP3_SP2

`else

`endif
reg [`TRCD_WIDTH - 1 : 0] cmf0c2e;
reg [`TRP_WIDTH - 1 : 0] tw86171;
reg [2 : 0] uie0a0d;
reg [`TRAS_WIDTH - 1 : 0] mt85c5b;
reg [`TRC_WIDTH - 1 : 0] wy2e2dd;
reg [`TRRD_WIDTH - 1 : 0] uk5068;
reg [`TRTP_WIDTH - 1 : 0] hd8b746;
reg [`TWTR_WIDTH - 1 : 0] of5ba37;
reg vv55f3f;
reg je20b42;
reg ui46f7c;
reg tw149c;
reg dobdf06;
reg su6848f;
reg vk3fc1d;
reg psfe0ea;
reg rv6650;
reg mt33287;
reg [5 : 0] ayea615;
reg ks34e4e;
reg jp50f5b;
reg [`AL_WIDTH - 1 : 0] qtc9e60;
reg [`CL_WIDTH - 1 : 0] tj3d6f0;
reg fafe5db;
reg [`CWL_WIDTH - 1 : 0] of5bc32;
reg wjf2edb;
reg [`TRCD_WIDTH - 1 : 0] wwf0ca8;
reg [`TRCD_WIDTH - 1 : 0] xy86541;
reg [`TRP_WIDTH - 1 : 0] jr32a0b;
reg [`TWR_WIDTH + 4 : 0] ux9505e;
reg [`TWR_WIDTH + 4 : 0] ria82f5;
reg [`TRAS_WIDTH - 1 : 0] gb417ab;
reg [`TRC_WIDTH - 1 : 0] xybd5c;
reg [`TRRD_WIDTH - 1 : 0] ip5eae2;
reg [`TRTP_WIDTH + 3 : 0] cmf5715;
reg [`TRTP_WIDTH + 3 : 0] qvab8a8;
reg [`TWTR_WIDTH + 3 : 0] ww5c545;
reg [`TWTR_WIDTH + 3 : 0] mre2a29;
reg [`RL_WIDTH - 1 : 0] mg1514d;
reg [`RL_WIDTH - 1 : 0] fca8a69;
reg [`RL_WIDTH - 1 : 0] ld4534a;
reg [`RL_WIDTH - 1 : 0] mt29a56;
reg ne4d2b4;
reg fa695a2;
reg pf4ad13;
reg [`CL_WIDTH - 1 : 0] ui5689e;
reg [`CL_WIDTH - 1 : 0] sjb44f1;
reg [`CWL_WIDTH - 1 : 0] nga278c;
reg [5 : 0] tj13c62;
reg lf9e317;
reg xwf18be;
reg fc8c5f3;
reg su62f9a;
reg kf17cd1;
reg qvbe68d;
reg hbf346d;
reg ir9a36f;
reg ykd1b7c;
reg sw8dbe0;
reg ww6df01;
reg qt6f808;
reg xw7c045;
reg eae022a;
reg ba1151;
reg kf8a8a;
reg nr45455;
reg ba2a2ae;
reg en51572;
reg ux8ab95;
reg [2047:0] ks1500e;
wire [68:0] pua8071;

`ifdef ECP3_SP2

`else

`endif

localparam rt4038b = 69,hq1c5e = 32'hfdffd84b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ECP3_SP2


`else


`endif






















always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      zxe34f0 <= 1'b1;   end   else if (je20b42) begin      zxe34f0 <= ks34e4e;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      ie1a786 <= 1'b1;      ald3c30        <= 1'b0;   end   else begin      ie1a786 <= nr45455;      ald3c30        <= je20b42;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      ph9e185    <= 1'b0;   end   else if (en51572) begin      ph9e185    <= ~(nr45455 ^ ba2a2ae);   end
end





always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      tu7972f <=  'b0;      alc6820 <=  'b0;   end   else if (ykd1b7c) begin      tu7972f <=  'b0;      alc6820 <=  'b0;   end   else if ( (je20b42 && !lf9e317 ) || |wwf0ca8 )  begin      tu7972f <=  wwf0ca8 + 1;      alc6820 <=  'b1;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)           ykcb97a <=  'b0;   else if (sw8dbe0) ykcb97a <=  'b0;   else if ((je20b42 && lf9e317) || |xy86541 )      ykcb97a <=  xy86541 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                            fpbf009 <=  1'b0;   else if (wwf0ca8 == (cmf0c2e -2)) fpbf009 <=  1'b1;   else                                   fpbf009 <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                            wjf804f <=  1'b0;   else if (xy86541 == (cmf0c2e -2)) wjf804f <=  1'b1;   else                                   wjf804f <=  1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                ip7a002 <=  'b0;   else if (qt6f808 )       ip7a002 <=  'b0;   else if (je20b42 || |gb417ab)  ip7a002 <=  gb417ab + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                          do13e2 <=  1'b0;
   else if (gb417ab == (mt85c5b -3)) do13e2 <=  1'b1;   else                                 do13e2 <=  1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                 tud0015 <=  'b0;   else if (yzb4436)          tud0015 <=  'b0;   else if (je20b42 && |xybd5c)    tud0015 <=  'b1;   else if ((je20b42 || |xybd5c) ) tud0015 <=  xybd5c + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                 kf800ab <=  'b0;   else if (yzb4436)          kf800ab <=  'b0;   else if (je20b42 && |ip5eae2)    kf800ab <=  'b1;    else if ((je20b42 || |ip5eae2) ) kf800ab <=  ip5eae2 + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin          dzf6886 <=  1'b0;          yzb4436 <=  1'b0;   end
   else if (( ux8ab95 && (xybd5c  == wy2e2dd  -2)) ||            (!ux8ab95 && (ip5eae2 >= uk5068 -1) && !yzb4436))  begin         dzf6886 <=  1'b1;         yzb4436 <=  1'b1;   end   else begin         dzf6886 <=  1'b0;         yzb4436 <=  1'b0;   end
end





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)               os5cbd0 <=  'b0;   else if (ls86d10 )       os5cbd0 <=  'b0;   else if (tw149c || |jr32a0b)  os5cbd0 <=  jr32a0b + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin         ks10da2 <=  1'b0;         ls86d10 <=  1'b0;   end
   else if (jr32a0b == (tw86171 -1)) begin        ks10da2 <=  1'b1;        ls86d10 <=  1'b1;   end   else begin       ks10da2 <=  1'b0;       ls86d10 <=  1'b0;   end
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      uie5e80 <=  'b0;
   else if ((ww6df01 && !(vk3fc1d || rv6650)) || (!nga7c19 && !wy88573 && (vk3fc1d || rv6650)) )      uie5e80 <=  'b0;   else if ((vk3fc1d || rv6650) && |ux9505e )      uie5e80 <=  'b1;     else if (((vk3fc1d && wy88573 ) || ((vk3fc1d || rv6650) && nga7c19 && !wy88573))|| |ux9505e)      uie5e80 <=  ux9505e + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ou15704 <=  'b0;     
     else if ((eae022a && !vk3fc1d) || (!nga7c19 && !wy88573 && (vk3fc1d || rv6650)) )      ou15704 <=  'b0;          else if (vk3fc1d &&  wy88573 &&  |ww5c545)      ou15704 <=  'b1;                    else if (((vk3fc1d && wy88573 ) || ((vk3fc1d || rv6650) && nga7c19 && !wy88573))|| |ww5c545)      ou15704 <=  ww5c545 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)               co55c <=  'b0;   else if (xw7c045 )      co55c <=  'b0;   else if (psfe0ea && |cmf5715)  co55c <=  'b1;   else if (psfe0ea || |cmf5715)  co55c <=  cmf5715 + 1;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)             su5c10d <=  'b0;   else if (ba1151 )  su5c10d <=  'b0;   else if (psfe0ea && |mg1514d) su5c10d <=  'b1;   else if (psfe0ea || |mg1514d) su5c10d <=  mg1514d + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                           by7c4be <=  1'b0;
   else if ((mg1514d == (fca8a69 )) && !psfe0ea)   by7c4be <=  1'b1;   else                                  by7c4be <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)             xy4348 <=  'b0;   else if (kf8a8a )   xy4348 <=  'b0;   else if (psfe0ea && |ld4534a  )   xy4348 <=  'b1;   else if (psfe0ea || |ld4534a )  xy4348 <=  ld4534a + 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                        mre25f2 <=  1'b0;   else if (ld4534a == (mt29a56 -2) && !psfe0ea)  mre25f2 <=  1'b1;   else                               mre25f2 <=  1'b0;
end








always @ (negedge rst_n or posedge clk) begin   if (!rst_n)   dz7ed10 <=  'b0;   else if (jp50f5b ) begin       if (ykd1b7c || sw8dbe0)            dz7ed10 <=  'b1;       else if ( vk3fc1d || psfe0ea)  dz7ed10 <=  'b0;   end   else if (wwf0ca8 == (cmf0c2e -2)) dz7ed10 <=  1'b1;   else if (xy86541 == (cmf0c2e -2)) dz7ed10 <=  1'b1;   else                                   dz7ed10 <=  1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          aa34104 <=  'b0;   else if (ww6df01 )   aa34104 <=  'b1;   else if (vk3fc1d || je20b42)  aa34104 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        bna0820 <=  'b0;   else if (eae022a)bna0820 <=  'b1;   else if (tw149c || dobdf06 || je20b42 || ui46f7c || vk3fc1d || psfe0ea)     bna0820 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        zm4106 <=  'b0;   else if (xw7c045)zm4106 <=  'b1;   else if (tw149c || dobdf06 || je20b42 || ui46f7c || vk3fc1d || psfe0ea)     zm4106 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)            jea21b4 <=  1'b0;   else if (qt6f808)    jea21b4 <=  1'b1;      else                   jea21b4 <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          do14888 <=  'b0;   else if (ba1151)do14888 <=  'b1;
   else if (je20b42 || psfe0ea)  do14888 <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                  ira4442 <=  'b0;   else if (kf8a8a)         ira4442 <=  'b1;   else if (vk3fc1d || tw149c || je20b42 || psfe0ea)   ira4442 <=  'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)                 wy88573 <=  'b0;   else if (ayea615 == 'b1)  wy88573 <=  'b1;   else                        wy88573 <=  'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          ald31a0 <=  'b0;   else if (su6848f || je20b42) ald31a0 <=  ayea615;   else if (( psfe0ea || vk3fc1d ) && !wy88573)     ald31a0 <=  tj13c62 - 1;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)              nga7c19 <=  'b0;   else if (wy88573) nga7c19 <=  'b0;   else if ((tj13c62 == 'h1) && (psfe0ea ||vk3fc1d))     nga7c19 <=  'b1;   else                     nga7c19 <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)               fp1c880 <=  'b0;   else if (wy88573)  fp1c880 <=  'b0;   else if ((tj13c62 == 'h2) && (psfe0ea ||vk3fc1d))     fp1c880 <=  'b1;   else                      fp1c880 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       ird210 <=  1'b0;       rg69084 <=  1'b0;       fa48423 <=  1'b0;   end   else begin   case(qtc9e60)    0: begin        ird210 <=  1'b1;        rg69084 <=  1'b0;        fa48423 <=  1'b0;       end    1: begin        ird210 <=  1'b0;        rg69084 <=  1'b1;        fa48423 <=  1'b0;      end    2: begin       ird210 <=  1'b0;       rg69084 <=  1'b0;       fa48423 <=  1'b1;       end    default:begin        ird210 <=  1'b1;        rg69084 <=  1'b0;        fa48423 <=  1'b0;       end   endcase   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       aa108d3 <=  'b0;   else              aa108d3 <=  tj3d6f0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      lf84698 <=  'b0;   else             lf84698 <=  of5bc32;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     ou1a8fa <=  'b0;     bn6492 <= 1'b0;   end   else if (fa695a2) begin     if (wjf2edb || fafe5db)         ou1a8fa <=  sjb44f1 +2;     else         ou1a8fa <=  sjb44f1 +3;     if (vk3fc1d || rv6650)         if (wjf2edb)  bn6492 <= fafe5db;         else bn6492 <= !fafe5db;     else if (psfe0ea || mt33287)   bn6492 <= 1'b0;     else bn6492 <= 1'b0;
   end   else if (pf4ad13) begin     if (wjf2edb)       if (fafe5db) ou1a8fa <= sjb44f1 +1 ;       else  ou1a8fa <= sjb44f1 +2 ;     else ou1a8fa <= sjb44f1 +2 ;     if (vk3fc1d || rv6650)       if (wjf2edb) bn6492 <= !fafe5db;       else bn6492 <= fafe5db;     else if (psfe0ea || mt33287)        bn6492 <= 1'b0;     else bn6492 <= 1'b0;   end   else begin     ou1a8fa <=   nga278c;     if (vk3fc1d || rv6650)        bn6492 <= wjf2edb;     else if (psfe0ea || mt33287)        bn6492 <= 1'b0;     else bn6492 <= 1'b0;   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     dm6351f <=  'b0;     sw924bf <= 1'b0;   end   else if (fa695a2) begin    if (fafe5db) begin     dm6351f <= (sjb44f1 + sjb44f1 - 1);     if (psfe0ea || mt33287)        sw924bf <= 1'b1;     else if (vk3fc1d || rv6650)        sw924bf <= 1'b0;     else sw924bf <= 1'b0;    end    else begin     dm6351f <= (sjb44f1 + sjb44f1 );     if (psfe0ea || mt33287)        sw924bf <= 1'b1;     else if (vk3fc1d || rv6650)        sw924bf <= 1'b0;     else sw924bf <= 1'b0;    end   end   else if (pf4ad13) begin    if (fafe5db) begin     dm6351f <= (sjb44f1 + sjb44f1 - 2);     sw924bf <= 1'b0;    end    else begin     dm6351f <= (sjb44f1 + sjb44f1 - 1);        sw924bf <= 1'b0;    end   end   else begin     dm6351f <=   sjb44f1;     if (psfe0ea || mt33287)        sw924bf <= fafe5db;     else if (vk3fc1d || rv6650)        sw924bf <= 1'b0;     else sw924bf <= 1'b0;   end
end

 always @ (negedge rst_n or posedge clk) begin   if (!rst_n)     tu4211a <= 1'b0;   else if (ne4d2b4)     tu4211a <= 1'b0;   else     tu4211a <= sjb44f1 - 1;
end


 always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin     wy925f8 <= 1'b0;     ph32497 <= 1'b0;   end   else begin     wy925f8 <= hbf346d ;     ph32497 <= kf17cd1;   end
end
assign  rd_odd = hbf346d || ir9a36f;
assign  do2071d = kf17cd1 || qvbe68d;

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  vk2f400 <= 'b0;
     else         vk2f400 <= (uie0a0d +ou1a8fa +4 );
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin             xwc027c <= 1'b0;             mt36882 <= 1'b0;             sjb4414 <= 1'b0;   end
   else  if (!vk3fc1d && (ux9505e == ria82f5 -1)) begin          xwc027c <= 1'b1;          mt36882 <= 1'b1;          sjb4414 <= 1'b1;   end   else   begin         xwc027c <= 1'b0;         mt36882 <= 1'b0;         sjb4414 <= 1'b0;  end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)          nga20a4 <=  'b0;   else if (ww6df01 ||(ux9505e == (ria82f5 -1)))   nga20a4 <=  'b1;
   else if (vk3fc1d || je20b42)  nga20a4 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  sj2ae0 <= 'b0;
   else         sj2ae0 <= hd8b746 + ui5689e;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  begin            bn9f12 <= 'b0;   end   else if (cmf5715 == (qvab8a8 -1)) begin      bn9f12 <= 1'b1;   end   else begin         bn9f12 <= 'b0;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        ks82911 <=  'b0;   else if (xw7c045 || (cmf5715 == (qvab8a8 -1)))ks82911 <=  'b1;   else if (tw149c || dobdf06 || je20b42 || ui46f7c || vk3fc1d || psfe0ea)     ks82911 <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  wlab821 <= 'b0;   else         wlab821 <=  (of5ba37 + ou1a8fa +2) ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      th4f897 <= 'b0;   end
   else  if ((ww5c545 == (mre2a29 -2)) && !vk3fc1d)begin       th4f897 <=  1'b1 ;   end   else begin      th4f897 <=  1'b0 ;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)        qi10522 <=  'b0;
   else if ( (eae022a  || (ww5c545 == mre2a29 -2)) && !vk3fc1d ) qi10522 <=  'b1;   else if (tw149c || dobdf06 || je20b42 || ui46f7c || vk3fc1d || psfe0ea)     qi10522 <=  'b0;
end



`ifdef ECP3_SP2

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  co21a42 <= 'b0;   else         co21a42 <=  (dm6351f- ou1a8fa +4) ;
end

`else

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  co21a42 <= 'b0;   else         co21a42 <=  (dm6351f- ou1a8fa +3) ;
end

`endif

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)  eae0869 <= 'b0;   else         eae0869 <=  (dm6351f +2) ;
end
always@* begin cmf0c2e<={param_trcd>>1,pua8071[0]};tw86171<={param_trp>>1,pua8071[1]};uie0a0d<={param_twr>>1,pua8071[2]};mt85c5b<={param_tras>>1,pua8071[3]};wy2e2dd<={param_trc>>1,pua8071[4]};uk5068<={param_trrd>>1,pua8071[5]};hd8b746<={param_trtp>>1,pua8071[6]};of5ba37<={param_twtr>>1,pua8071[7]};vv55f3f<=pua8071[8];je20b42<=pua8071[9];ui46f7c<=pua8071[10];tw149c<=pua8071[11];dobdf06<=pua8071[12];su6848f<=pua8071[13];vk3fc1d<=pua8071[14];psfe0ea<=pua8071[15];rv6650<=pua8071[16];mt33287<=pua8071[17];ayea615<={uk3e0cb>>1,pua8071[18]};ks34e4e<=pua8071[19];jp50f5b<=pua8071[20];qtc9e60<={su5627f>>1,pua8071[21]};tj3d6f0<={yzb13f8>>1,pua8071[22]};fafe5db<=pua8071[23];of5bc32<={fn4fe23>>1,pua8071[24]};wjf2edb<=pua8071[25];wwf0ca8<={tu7972f>>1,pua8071[26]};xy86541<={ykcb97a>>1,pua8071[27]};jr32a0b<={os5cbd0>>1,pua8071[28]};ux9505e<={uie5e80>>1,pua8071[29]};ria82f5<={vk2f400>>1,pua8071[30]};gb417ab<={ip7a002>>1,pua8071[31]};xybd5c<={tud0015>>1,pua8071[32]};ip5eae2<={kf800ab>>1,pua8071[33]};cmf5715<={co55c>>1,pua8071[34]};qvab8a8<={sj2ae0>>1,pua8071[35]};ww5c545<={ou15704>>1,pua8071[36]};mre2a29<={wlab821>>1,pua8071[37]};mg1514d<={su5c10d>>1,pua8071[38]};fca8a69<={eae0869>>1,pua8071[39]};ld4534a<={xy4348>>1,pua8071[40]};mt29a56<={co21a42>>1,pua8071[41]};ne4d2b4<=pua8071[42];fa695a2<=pua8071[43];pf4ad13<=pua8071[44];ui5689e<={tu4211a>>1,pua8071[45]};sjb44f1<={aa108d3>>1,pua8071[46]};nga278c<={lf84698>>1,pua8071[47]};tj13c62<={ald31a0>>1,pua8071[48]};lf9e317<=pua8071[49];xwf18be<=pua8071[50];fc8c5f3<=pua8071[51];su62f9a<=pua8071[52];kf17cd1<=pua8071[53];qvbe68d<=pua8071[54];hbf346d<=pua8071[55];ir9a36f<=pua8071[56];ykd1b7c<=pua8071[57];sw8dbe0<=pua8071[58];ww6df01<=pua8071[59];qt6f808<=pua8071[60];xw7c045<=pua8071[61];eae022a<=pua8071[62];ba1151<=pua8071[63];kf8a8a<=pua8071[64];nr45455<=pua8071[65];ba2a2ae<=pua8071[66];en51572<=pua8071[67];ux8ab95<=pua8071[68];end
always@* begin ks1500e[2047]<=param_trp[0];ks1500e[2046]<=param_twr[0];ks1500e[2044]<=param_tras[0];ks1500e[2040]<=param_trc[0];ks1500e[2033]<=param_trrd[0];ks1500e[2019]<=param_trtp[0];ks1500e[1999]<=sj2ae0[0];ks1500e[1991]<=param_twtr[0];ks1500e[1981]<=bna0820;ks1500e[1958]<=wy925f8;ks1500e[1950]<=ou15704[0];ks1500e[1947]<=ird210;ks1500e[1934]<=ir3c3f6;ks1500e[1914]<=zm4106;ks1500e[1892]<=ls1b119;ks1500e[1868]<=fpbf009;ks1500e[1852]<=wlab821[0];ks1500e[1851]<=vxaab34;ks1500e[1847]<=rg69084;ks1500e[1820]<=kq59b50;ks1500e[1783]<=ald31a0[0];ks1500e[1780]<=bn6492;ks1500e[1737]<=su5627f[0];ks1500e[1689]<=wjf804f;ks1500e[1657]<=su5c10d[0];ks1500e[1654]<=coa6661;ks1500e[1647]<=fa48423;ks1500e[1610]<=fn4fe23[0];ks1500e[1608]<=mre25f2;ks1500e[1593]<=nt84678;ks1500e[1523]<=kf800ab[0];ks1500e[1519]<=alc6820;ks1500e[1513]<=ph32497;ks1500e[1426]<=yzb13f8[0];ks1500e[1404]<=ip7a002[0];ks1500e[1330]<=xwc027c;ks1500e[1267]<=eae0869[0];ks1500e[1260]<=aa34ccc;ks1500e[1246]<=tu4211a[0];ks1500e[1225]<=bn9f12;ks1500e[1199]<=os5cbd0[0];ks1500e[1173]<=uv7f11e;ks1500e[1169]<=zxe34f0;ks1500e[1163]<=ph9e185;ks1500e[1139]<=sw3eba2;ks1500e[1023]<=param_trcd[0];ks1500e[999]<=co55c[0];ks1500e[990]<=aa34104;ks1500e[979]<=sw924bf;ks1500e[973]<=co21a42[0];ks1500e[946]<=yzae610;ks1500e[925]<=wj75566;ks1500e[891]<=lf84698[0];ks1500e[805]<=je89fc4;ks1500e[804]<=by7c4be;ks1500e[761]<=tud0015[0];ks1500e[702]<=vk2f400[0];ks1500e[612]<=do13e2;ks1500e[599]<=ykcb97a[0];ks1500e[581]<=ald3c30;ks1500e[486]<=xy4348[0];ks1500e[473]<=uk3e0cb[0];ks1500e[462]<=xwc566d;ks1500e[445]<=aa108d3[0];ks1500e[402]<=th4f897;ks1500e[351]<=uie5e80[0];ks1500e[299]<=tu7972f[0];ks1500e[290]<=ie1a786;ks1500e[231]<=alc6999;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule






















`timescale 1 ns / 100 ps
module cmfaebb (

    clk,			              
    rst_n,	
    jp55589,
    jraac4f,
    qi9d556,
    oseaab1,
    ls1e755,
    zxf3aaa,
    fpb5d20,
    sjae907,

    pf7483d,
    uxa41ef,
    cm72e75,
    wy9d397,
    
    end96c9,
    ba8cf16,
    
    nr744e9,
    zma274e,
    

    en5b269,
    ux3c599,
    wjc9a65,
    jr16665,
    uvd934c,
    ipe2ccc,
    wwcb64d,
    qg678b3,
    iea6b8a,
    hq35c51    
    
);
input                                 clk;
input                                 rst_n;
input                                 jp55589;
input                                 jraac4f;
input                                 qi9d556;
input                                 oseaab1;
input                                 ls1e755;
input                                 zxf3aaa;
input                                 fpb5d20;
input                                 sjae907;
input                                 end96c9;
input                                 ba8cf16;
input                                 nr744e9;
input                                 zma274e;
input                                 pf7483d;
input [3:0]                           uxa41ef;
input                                 cm72e75;
input                                 wy9d397;
output                                iea6b8a;
output                                hq35c51;
output                                en5b269;
output                                ux3c599;
output                                wjc9a65;
output                                jr16665;
output                                uvd934c;
output                                ipe2ccc ;
output                                wwcb64d;
output                                qg678b3;
reg                                   en5b269, by66aab;
reg                                   ux3c599, zzaaada;
reg                                   wjc9a65, kfab6bf;
reg                                   jr16665, xwdafe4;
reg                                   uvd934c, bnbf91f;
reg                                   ipe2ccc, hoe47f7 ;
wire                                  wwcb64d;
wire                                  qg678b3;
wire                                  vifeee9;
wire                                  pf7483d;
reg [3:0]                             cbbba55;
wire                                  cm72e75;
reg                                   fne9567;
reg                                   pf4ab3f;
wire                                  hq35c51;
reg                                   iea6b8a;
reg                                   ww67fb0;
reg [`TRFC_WIDTH-1:0]                 pu3fd81;
reg fc1bf97;
reg fadfcbb;
reg lqc06fe;
reg nt37f2;
reg jpc701b;
reg bn380df;
reg ym97d8b;
reg yzbec59;
reg pff62cc;
reg [3 : 0] uxb1667;
reg su68af5;
reg wjed15e;
reg uk1f270;
reg doad973;
reg ld457a8;
reg ks2bd46;
reg fp38a6c;
reg vic5367;
reg oh29b3a;
reg dm4d9d4;
reg ho6cea3;
reg yk6751a;
reg ba3a8d0;
reg [3 : 0] kqd4682;
reg oua3411;
reg ym1a088;
reg xwd0440;
reg [`TRFC_WIDTH - 1 : 0] ou82203;
reg [2047:0] ks1500e;
wire [27:0] pua8071;

localparam rt4038b = 28,hq1c5e = 32'hfdffc70b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;



assign   hq35c51 = ba3a8d0;
assign   wwcb64d = ym97d8b;
assign   qg678b3 = yzbec59;
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      xwdafe4  <= 'b0;   else if ( nt37f2 && doad973)      xwdafe4  <= 'b1;   else       xwdafe4  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      jr16665  <= 'b0;   else      jr16665  <= dm4d9d4;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      kfab6bf  <= 'b0;   else if ( lqc06fe && uk1f270)      kfab6bf  <= 'b1;   else       kfab6bf  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      wjc9a65  <= 'b0;   else      wjc9a65  <= oh29b3a;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      bnbf91f  <= 'b0;   else if ( jpc701b && uk1f270)      bnbf91f  <= 'b1;   else      bnbf91f  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      uvd934c  <= 'b0;   else      uvd934c  <= ho6cea3;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      hoe47f7  <= 'b0;   else if ( bn380df && doad973)      hoe47f7  <= 'b1;   else      hoe47f7  <= 'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      ipe2ccc  <= 'b0;   else      ipe2ccc  <= yk6751a;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      by66aab         <= 1'b0;   else if (fc1bf97 && ld457a8)      by66aab         <= 1'b0;   else if (fc1bf97 && uk1f270)      by66aab         <= 1'b1;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      en5b269  <= 'b0;   else      en5b269  <= fp38a6c;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      zzaaada         <= 1'b0;   else if (fadfcbb && ks2bd46)      zzaaada         <= 1'b0;   else if (fadfcbb && doad973)      zzaaada         <= 1'b1;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      ux3c599  <= 'b0;   else      ux3c599  <= vic5367;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      ww67fb0        <= 1'b0;   else if (kqd4682>0)      ww67fb0        <= 1'b1;   else      ww67fb0        <= 1'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)     cbbba55   <= 'b0;   else if (uxb1667 >1 && pff62cc && !xwd0440)     cbbba55   <= uxb1667;   else if (wjed15e && xwd0440)     cbbba55   <= kqd4682 -1;   else if (!xwd0440)     cbbba55   <= 'b0;
end

always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      fne9567 <= 1'b0;   else if ((kqd4682 ==1) && xwd0440 && su68af5)      fne9567 <= 1'b1;   else     fne9567 <= 1'b0;
end
always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      pf4ab3f <= 1'b0;   else if ((kqd4682 ==1) && xwd0440 && wjed15e)      pf4ab3f <= 1'b1;   else     pf4ab3f <= 1'b0;
end
assign      vifeee9 = (ou82203 == `TRFC); 
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      pu3fd81 <=  'b0;   else if ( ba3a8d0 )      pu3fd81 <=  'b0;   else if ((uxb1667  >1 && ym1a088 )|| (uxb1667  < 2 && wjed15e  )|| |ou82203)      pu3fd81 <=  ou82203 + 1;
end


always @ (posedge clk or negedge rst_n) begin   if (!rst_n)      iea6b8a <=  'b0;   else if (uxb1667  >1)      iea6b8a <=  oua3411;   else      iea6b8a <=  su68af5;
end
always@* begin fc1bf97<=pua8071[0];fadfcbb<=pua8071[1];lqc06fe<=pua8071[2];nt37f2<=pua8071[3];jpc701b<=pua8071[4];bn380df<=pua8071[5];ym97d8b<=pua8071[6];yzbec59<=pua8071[7];pff62cc<=pua8071[8];uxb1667<={uxa41ef>>1,pua8071[9]};su68af5<=pua8071[10];wjed15e<=pua8071[11];uk1f270<=pua8071[12];doad973<=pua8071[13];ld457a8<=pua8071[14];ks2bd46<=pua8071[15];fp38a6c<=pua8071[16];vic5367<=pua8071[17];oh29b3a<=pua8071[18];dm4d9d4<=pua8071[19];ho6cea3<=pua8071[20];yk6751a<=pua8071[21];ba3a8d0<=pua8071[22];kqd4682<={cbbba55>>1,pua8071[23]};oua3411<=pua8071[24];ym1a088<=pua8071[25];xwd0440<=pua8071[26];ou82203<={pu3fd81>>1,pua8071[27]};end
always@* begin ks1500e[2047]<=jraac4f;ks1500e[2046]<=qi9d556;ks1500e[2044]<=oseaab1;ks1500e[2040]<=ls1e755;ks1500e[2032]<=zxf3aaa;ks1500e[2016]<=fpb5d20;ks1500e[1985]<=sjae907;ks1500e[1922]<=pf7483d;ks1500e[1867]<=xwdafe4;ks1500e[1797]<=uxa41ef[0];ks1500e[1686]<=bnbf91f;ks1500e[1547]<=cm72e75;ks1500e[1490]<=zzaaada;ks1500e[1413]<=ww67fb0;ks1500e[1324]<=hoe47f7;ks1500e[1200]<=cbbba55[0];ks1500e[1047]<=wy9d397;ks1500e[1023]<=jp55589;ks1500e[933]<=kfab6bf;ks1500e[779]<=pu3fd81[0];ks1500e[745]<=by66aab;ks1500e[706]<=pf4ab3f;ks1500e[600]<=vifeee9;ks1500e[372]<=zma274e;ks1500e[353]<=fne9567;ks1500e[186]<=nr744e9;ks1500e[93]<=ba8cf16;ks1500e[46]<=end96c9;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule






























`timescale 1 ns / 100 ps
module al7f801 (

   clk,
   rst_n,
   lq6621f,
   ym887d0,
   ie1f400,
   ks3105a,
   cb23cea,
   end96c9,
   ba8cf16,
   swac1a6,
   

   gd12245,
   ri89167,
   vv459d3,
   ic674fc,
   gbd3f03
   );
input           clk;
input           rst_n;
input           lq6621f;
input           ym887d0;
input           ie1f400;
input           ks3105a;
input           cb23cea;
input           end96c9;
input           ba8cf16;
input           swac1a6;
output          gd12245;
output          ri89167;
output          vv459d3;
output          ic674fc;
output          gbd3f03;

`define IDLE_M    0

`define FLOW    1

`define SPECL   2

`define INIT    3
reg [3:0]       yke0ddd, db6ee8;
reg             vv459d3, mtbba37;
reg             ic674fc, uve8de7;
reg             gbd3f03, nt379e0;
reg             gd12245, she7831;
reg             ri89167, eae0c6c;
reg             zz6360, wy31b07;
wire            wy8d839;
reg qg5cd50;
reg yx60e4b;
reg cb725c;
reg fpb5416;
reg ngb8e03;
reg uk1f270;
reg doad973;
reg lfa073f;
reg [3 : 0] ir2c900;
reg [3 : 0] jp64804;
reg ks24026;
reg xy20131;
reg wy98b;
reg zm4c59;
reg yz262cb;
reg aa3165c;
reg bn8b2e0;
reg qg59707;
reg [2047:0] ks1500e;
wire [17:0] pua8071;

`define IDLE_M    0

`define FLOW    1

`define SPECL   2

`define INIT    3

localparam rt4038b = 18,hq1c5e = 32'hfdffe0cb;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`define IDLE_M    0


`define FLOW    1


`define SPECL   2


`define INIT    3











`define IDLE_M    0



`define FLOW    1



`define SPECL   2



`define INIT    3





assign          wy8d839 = cb725c || bn8b2e0;
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      zz6360           <=  'b0 ;   else if (ri89167)      zz6360           <=  'b1 ;  else if (cb725c)      zz6360           <=  'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      wy31b07           <=  'b0 ;   else      wy31b07           <=  cb725c ;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      yke0ddd           <=  4'b0 ;      vv459d3           <=  1'b0 ;      ic674fc        <=  1'b0 ;      gbd3f03          <=  1'b0 ;      ri89167   <=  1'b0 ;      gd12245      <=  1'b0 ;   end   else begin      yke0ddd           <=  jp64804 ;      vv459d3           <=  ks24026 ;      ic674fc        <=  xy20131 ;      gbd3f03          <=  wy98b ;      ri89167   <=  yz262cb ;      gd12245      <=  zm4c59 ;   end
end







always @ (ir2c900 or fpb5416 or ngb8e03 or lfa073f or          uk1f270 or doad973 or yx60e4b or qg5cd50 or cb725c          or aa3165c or qg59707 or vv459d3 or ic674fc or gbd3f03 or ri89167 or gd12245) begin
db6ee8 = 4'b0;
mtbba37 = vv459d3;
uve8de7 = ic674fc;
nt379e0 = gbd3f03;
eae0c6c = ri89167;
she7831 = gd12245;
case (1)        ir2c900[`IDLE_M] :  begin                    mtbba37 = 1'b0;                    uve8de7 = 1'b0;                    nt379e0 = 1'b0;
                    if (qg5cd50) begin                      db6ee8[`INIT] = 1'b1;                    end                    else db6ee8[`IDLE_M] = 1'b1;                  end



   ir2c900[`FLOW] :  begin                    if (yx60e4b) begin                      if (fpb5416 || ngb8e03 || lfa073f) begin                         db6ee8[`SPECL] = 1'b1;                         mtbba37 = 1'b0;                         uve8de7 = 1'b0;                         nt379e0 = 1'b1;                         eae0c6c = 1'b1;                      end                      else begin                         she7831 = 1'b0;                         db6ee8[`FLOW] = 1'b1;                      end                    end                    else begin                      she7831 = 1'b0;                      db6ee8[`FLOW] = 1'b1;                    end                  end



   ir2c900[`SPECL] : begin                   if (!aa3165c && ((uk1f270 || doad973 ) && !ngb8e03  && !fpb5416)) begin                         db6ee8[`FLOW] = 1'b1;                         mtbba37 = 1'b1;                         uve8de7 = 1'b1;                         nt379e0 = 1'b0;                         she7831 = 1'b1;                         eae0c6c = 1'b0;                   end                   else if (!aa3165c && !qg59707 && (fpb5416 || ngb8e03 || lfa073f)) begin                         db6ee8[`SPECL] = 1'b1;                         mtbba37 = 1'b0;                         uve8de7 = 1'b0;                         nt379e0 = 1'b1;                         eae0c6c = 1'b1;                    end                    else begin                      eae0c6c = 1'b0;                      db6ee8[`SPECL] = 1'b1;                    end                  end



   ir2c900[`INIT] :  begin                   if (!qg5cd50) begin                      if (fpb5416 || ngb8e03 || lfa073f) begin                        db6ee8[`SPECL] = 1'b1;                        nt379e0 = 1'b1;                        eae0c6c = 1'b1;                      end                      else if ((uk1f270 || doad973) && !ngb8e03  && !fpb5416) begin                        db6ee8[`FLOW] = 1'b1;                        mtbba37 = 1'b1;                        uve8de7 = 1'b1;                        she7831 = 1'b1;                      end                      else db6ee8[`INIT] = 1'b1;                  end                  else db6ee8[`INIT] = 1'b1;                  end
        default : begin                    db6ee8[`IDLE_M] = 1'b1;                    she7831 = 1'b0;                    eae0c6c = 1'b0;                 end endcase end

always@* begin qg5cd50<=pua8071[0];yx60e4b<=pua8071[1];cb725c<=pua8071[2];fpb5416<=pua8071[3];ngb8e03<=pua8071[4];uk1f270<=pua8071[5];doad973<=pua8071[6];lfa073f<=pua8071[7];ir2c900<={yke0ddd>>1,pua8071[8]};jp64804<={db6ee8>>1,pua8071[9]};ks24026<=pua8071[10];xy20131<=pua8071[11];wy98b<=pua8071[12];zm4c59<=pua8071[13];yz262cb<=pua8071[14];aa3165c<=pua8071[15];bn8b2e0<=pua8071[16];qg59707<=pua8071[17];end
always@* begin ks1500e[2047]<=ym887d0;ks1500e[2046]<=ie1f400;ks1500e[2044]<=ks3105a;ks1500e[2040]<=cb23cea;ks1500e[2033]<=end96c9;ks1500e[2018]<=ba8cf16;ks1500e[1988]<=swac1a6;ks1500e[1929]<=yke0ddd[0];ks1500e[1811]<=db6ee8[0];ks1500e[1574]<=mtbba37;ks1500e[1247]<=zz6360;ks1500e[1101]<=uve8de7;ks1500e[1023]<=lq6621f;ks1500e[894]<=wy8d839;ks1500e[623]<=eae0c6c;ks1500e[447]<=wy31b07;ks1500e[311]<=she7831;ks1500e[155]<=nt379e0;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule   





























`timescale 1 ns / 100 ps
module gbcc42c (
    
    sclk,			   
    rst_n,
    init_done,
    wl_act,
    ld6402c,
    ep7b2c,
    jr3d964,
    mee5408,
    xj5020a,
    ay6764c,
    ir82be,
    gbd9301,
    ofc980d,
    qg4c06d,
    en60368,
    ba1b45,

    
    mem_odt_out,
    cntl_odt_out

    );
input                        sclk;
input                        rst_n;
input                        init_done;
input                        wl_act;
input   [`CS_WIDTH-1 : 0]    ld6402c;
input                        ep7b2c;
input                        jr3d964;
input                        mee5408;
input                        xj5020a;
input                        ay6764c;
input                        ir82be;
input   [3:0]                gbd9301;
input   [1:0]                ofc980d;
input   [`CS_WIDTH-1 : 0]    qg4c06d;
input                        en60368;
input                        ba1b45;
output  [`CS_WIDTH-1 : 0]    mem_odt_out;
output                       cntl_odt_out;

`define      LOW          1'b0
parameter    me78a00   = 2;
parameter    zkc5001   = 3;
wire  [`CS_WIDTH-1 : 0]      mem_odt_out;
reg                          cntl_odt_out;
reg                          aa2be;
reg                          ba15f0;
reg                          ieaf82;
reg                          rg57c10;
reg                          uxbe083;
reg   [1:0]                  kqf041d;
reg   [1:0]                  aa820e8;
reg                          ec10741;
reg                          tw83a09;
reg                          yz1d04a;
reg                          cze8255;
reg                          qt412ad;
reg                          bn956c;
reg                          pf4ab66;
reg                          xj55b36;
reg                          lsad9b6;
reg                          fa6cdb2;
reg                          jc66d92;

`ifdef CS_WIDTH_1
wire  [`CS_WIDTH-1 : 0]      qv36c93;
wire                         wyb649c;

`else
reg   [`CS_WIDTH-1 : 0]      qv36c93;
reg                          wyb649c;

`endif
reg                          pu93858;
reg                          do9c2c3;
wire  [1:0]                  pse161b;
wire                         lsb0db;
wire  [1:0]                  tu586db;
wire                         ofc36db;
wire                         ng1b6dd;
wire                         medb6ea;
reg   [3:0]                  eadb750;
reg                          sudba80;
wire  [`CS_WIDTH-1 : 0]      hbdd401;
wire                         uiea00f;
wire                         bl50078;
reg   [`CS_WIDTH-1 : 0]      wl803c7;

`ifdef CS_WIDTH_4  // Both slots have double ranks

`endif

`ifdef CS_WIDTH_2

`ifdef DUAL_RANK   // There is only one slot. (1DIMM, 2 RANKS)

`else //Both slot1 and slot2 have single rank 

`endif

`endif

`ifdef CS_WIDTH_1 // One slot with one rank

`endif
reg vk1e3c;
reg mtd03d;
reg [`CS_WIDTH - 1 : 0] go78f19;
reg fnc78c9;
reg qv3c64e;
reg dze3274;
reg rv193a6;
reg yxc9d37;
reg uv4e9bd;
reg [3 : 0] ld74dec;
reg [1 : 0] mga6f67;
reg [`CS_WIDTH - 1 : 0] ph37b39;
reg pubd9ce;
reg zxece73;
reg me6739e;
reg kf39cf0;
reg icce785;
reg vi73c29;
reg nt9e14a;
reg [1 : 0] mef0a56;
reg [1 : 0] wl852b1;
reg wl2958c;
reg vv4ac65;
reg qg5632e;
reg irb1970;
reg pu8cb85;
reg al65c2b;
reg qi2e15c;
reg uv70ae0;
reg ir85705;
reg mg2b82c;
reg qg5c161;
reg ose0b09;
reg ym5848;
reg [1 : 0] qv2c241;
reg zx6120d;
reg [1 : 0] ph906f;
reg vi4837e;
reg sh41bf2;
reg uxdf95;
reg [3 : 0] of6fcad;
reg jp7e56d;
reg [`CS_WIDTH - 1 : 0] czf2b6f;
reg qv95b7c;
reg hqadbe4;
reg [`CS_WIDTH - 1 : 0] yk6df22;
reg [2047:0] ks1500e;
wire [45:0] pua8071;

`define      LOW          1'b0

`ifdef CS_WIDTH_1

`else

`endif

`ifdef CS_WIDTH_4  // Both slots have double ranks

`endif

`ifdef CS_WIDTH_2

`ifdef DUAL_RANK   // There is only one slot. (1DIMM, 2 RANKS)

`else //Both slot1 and slot2 have single rank 

`endif

`endif

`ifdef CS_WIDTH_1 // One slot with one rank

`endif

localparam rt4038b = 46,hq1c5e = 32'hfdffd48b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`define      LOW          1'b0


`ifdef CS_WIDTH_1


`else


`endif


`ifdef CS_WIDTH_4  // Both slots have double ranks


`endif


`ifdef CS_WIDTH_2


`ifdef DUAL_RANK   // There is only one slot. (1DIMM, 2 RANKS)


`else //Both slot1 and slot2 have single rank 


`endif


`endif


`ifdef CS_WIDTH_1 // One slot with one rank


`endif



























`define      LOW          1'b0














`ifdef CS_WIDTH_1



`else



`endif




always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      wl803c7 <= {`CS_WIDTH{1'b0}};   end   else begin      wl803c7 <= ph37b39;   end
end


always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      pu93858 <= 1'b0;   end   else if (dze3274) begin      pu93858 <= 1'b1;   end   else if (mef0a56 == 2'b01) begin      pu93858 <= 1'b0;   end
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      do9c2c3 <= 1'b0;   end   else if (rv193a6) begin      do9c2c3 <= 1'b1;   end   else if (wl852b1 == 2'b01) begin      do9c2c3 <= 1'b0;   end
end








always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      aa2be    <= 1'b0;      ba15f0    <= 1'b0;      ieaf82   <= 1'b0;   end   else begin      aa2be    <=  fnc78c9 & ~qv3c64e & ~icce785;      ba15f0    <=  fnc78c9 &  qv3c64e & ~icce785;            ieaf82   <=  fnc78c9 &  hqadbe4 & ~zxece73;   end
end
assign bl50078  = 1'b0;  




assign  pse161b         = yxc9d37 ? `TODTH4 : `TODTH8 ;


assign  tu586db         = yxc9d37 ? me78a00 : zkc5001 ;

always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)
      kqf041d     <= 2'b0;      else if (dze3274)      kqf041d     <= qv2c241;   else if (mtd03d)      kqf041d     <= 2'b0;   else if (mef0a56 != 2'b0)      kqf041d     <= mef0a56 - 1'b1;
end

assign ng1b6dd = |(mef0a56);
always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)
      aa820e8     <= 2'b0;      else if (rv193a6)      aa820e8     <= ph906f;   else if (mtd03d)      aa820e8     <= 2'b0;   else if (wl852b1 != 2'b0)      aa820e8     <= wl852b1 - 1'b1;
end

assign medb6ea = |(wl852b1) ;











always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)      eadb750 <= 4'h0;   else      eadb750 <= ld74dec + mga6f67 - 2;
end
always @ (negedge rst_n or posedge sclk) begin   if (!rst_n) begin      ec10741  <= `LOW;      tw83a09  <= `LOW;      yz1d04a  <= `LOW;      cze8255  <= `LOW;      qt412ad  <= `LOW;      bn956c  <= `LOW;      pf4ab66  <= `LOW;      xj55b36  <= `LOW;      lsad9b6  <= `LOW;      fa6cdb2 <= `LOW;   end   else begin      ec10741  <= uxdf95;      tw83a09  <= wl2958c;      yz1d04a  <= vv4ac65;      cze8255  <= qg5632e;      qt412ad  <= irb1970;      bn956c  <= pu8cb85;      pf4ab66  <= al65c2b;      xj55b36  <= qi2e15c;      lsad9b6  <= uv70ae0;      fa6cdb2 <= ir85705;   end
end
always @ (of6fcad or          qg5632e or irb1970 or pu8cb85 or al65c2b or  qi2e15c or uv70ae0 or ir85705 or mg2b82c) begin   case (of6fcad[3:0])      4'd3:  jc66d92 = qg5632e;      4'd4:  jc66d92 = irb1970;      4'd5:  jc66d92 = pu8cb85;      4'd6:  jc66d92 = al65c2b;      4'd7:  jc66d92 = qi2e15c;      4'd8:  jc66d92 = uv70ae0;      4'd9:  jc66d92 = ir85705;      4'd10: jc66d92 = mg2b82c;      default : jc66d92 = 1'b0;   endcase
end
always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)      sudba80 <=  1'b0 ;   else            sudba80 <=  1'b0 ;
end









`ifdef CS_WIDTH_4  // Both slots have double ranks



 always @ (ym5848 or ose0b09 or yk6df22) begin   begin
      case ({ym5848,ose0b09,yk6df22})         6'b011110 : begin                   qv36c93  = 4'b1001;     wyb649c = 1'b0;             end         6'b011101 : begin               qv36c93  = 4'b1001;         wyb649c = 1'b0;             end         6'b011011 : begin               qv36c93  = 4'b0110;         wyb649c = 1'b0;             end         6'b010111 : begin               qv36c93  = 4'b0110;         wyb649c = 1'b0;             end         6'b101110 : begin               qv36c93  = 4'b1000;         wyb649c = 1'b1;             end         6'b101101 : begin               qv36c93  = 4'b1000;         wyb649c = 1'b1;             end         6'b101011 : begin               qv36c93  = 4'b0010;         wyb649c = 1'b1;             end         6'b100111 : begin               qv36c93  = 4'b0010;         wyb649c = 1'b1;             end         default   : begin             qv36c93  = 4'b0000;             wyb649c = 1'b0;             end      endcase   end
end


`endif




`ifdef CS_WIDTH_2



`ifdef DUAL_RANK   // There is only one slot. (1DIMM, 2 RANKS)

always @ (ym5848 or ose0b09 or ph37b39) begin   begin      case ({ym5848,ose0b09,ph37b39})         4'b0110 : begin                 qv36c93  = 2'b01;   wyb649c = 1'b0;           end         4'b0101 : begin             qv36c93  = 2'b01;       wyb649c = 1'b0;           end         4'b1010 : begin             qv36c93  = 2'b00;       wyb649c = 1'b1;           end         4'b1001 : begin             qv36c93  = 2'b00;       wyb649c = 1'b1;           end         default : begin           qv36c93  = 2'b00;           wyb649c = 1'b0;           end      endcase   end
end


`else //Both slot1 and slot2 have single rank 



always @ (ym5848 or ose0b09 or ph37b39) begin   begin      case ({ym5848,ose0b09,ph37b39})         4'b0110 : begin                 qv36c93  = 2'b11;   wyb649c = 1'b0;           end         4'b0101 : begin             qv36c93  = 2'b11;       wyb649c = 1'b0;           end         4'b1010 : begin             qv36c93  = 2'b10;       wyb649c = 1'b1;           end         4'b1001 : begin             qv36c93  = 2'b01;       wyb649c = 1'b1;           end         default : begin           qv36c93  = 2'b00;           wyb649c = 1'b0;           end      endcase   end
end

`endif



`endif




`ifdef CS_WIDTH_1 // One slot with one rank


assign qv36c93  = ose0b09 & ~ph37b39;
assign wyb649c = 1'b0;


`endif


assign hbdd401    = (sh41bf2 | jp7e56d)  ? qv36c93  : {`CS_WIDTH{1'b0}};
assign uiea00f   = (jp7e56d)                 ? wyb649c : 1'h0;

assign mem_odt_out = (czf2b6f | go78f19) ;


always @ (negedge rst_n or posedge sclk) begin   if (!rst_n)      cntl_odt_out <= 1'b0;   else      cntl_odt_out <= qv95b7c ;
end

always@* begin vk1e3c<=pua8071[0];mtd03d<=pua8071[1];go78f19<={ld6402c>>1,pua8071[2]};fnc78c9<=pua8071[3];qv3c64e<=pua8071[4];dze3274<=pua8071[5];rv193a6<=pua8071[6];yxc9d37<=pua8071[7];uv4e9bd<=pua8071[8];ld74dec<={gbd9301>>1,pua8071[9]};mga6f67<={ofc980d>>1,pua8071[10]};ph37b39<={qg4c06d>>1,pua8071[11]};pubd9ce<=pua8071[12];zxece73<=pua8071[13];me6739e<=pua8071[14];kf39cf0<=pua8071[15];icce785<=pua8071[16];vi73c29<=pua8071[17];nt9e14a<=pua8071[18];mef0a56<={kqf041d>>1,pua8071[19]};wl852b1<={aa820e8>>1,pua8071[20]};wl2958c<=pua8071[21];vv4ac65<=pua8071[22];qg5632e<=pua8071[23];irb1970<=pua8071[24];pu8cb85<=pua8071[25];al65c2b<=pua8071[26];qi2e15c<=pua8071[27];uv70ae0<=pua8071[28];ir85705<=pua8071[29];mg2b82c<=pua8071[30];qg5c161<=pua8071[31];ose0b09<=pua8071[32];ym5848<=pua8071[33];qv2c241<={pse161b>>1,pua8071[34]};zx6120d<=pua8071[35];ph906f<={tu586db>>1,pua8071[36]};vi4837e<=pua8071[37];sh41bf2<=pua8071[38];uxdf95<=pua8071[39];of6fcad<={eadb750>>1,pua8071[40]};jp7e56d<=pua8071[41];czf2b6f<={hbdd401>>1,pua8071[42]};qv95b7c<=pua8071[43];hqadbe4<=pua8071[44];yk6df22<={wl803c7>>1,pua8071[45]};end
always@* begin ks1500e[2047]<=wl_act;ks1500e[2046]<=ld6402c[0];ks1500e[2044]<=ep7b2c;ks1500e[2040]<=jr3d964;ks1500e[2032]<=mee5408;ks1500e[2018]<=hbdd401[0];ks1500e[2017]<=xj5020a;ks1500e[1989]<=uiea00f;ks1500e[1987]<=ay6764c;ks1500e[1931]<=bl50078;ks1500e[1927]<=ir82be;ks1500e[1865]<=ieaf82;ks1500e[1859]<=do9c2c3;ks1500e[1815]<=wl803c7[0];ks1500e[1806]<=gbd9301[0];ks1500e[1682]<=rg57c10;ks1500e[1671]<=pse161b[0];ks1500e[1565]<=ofc980d[0];ks1500e[1488]<=jc66d92;ks1500e[1326]<=bn956c;ks1500e[1317]<=uxbe083;ks1500e[1295]<=lsb0db;ks1500e[1210]<=xj55b36;ks1500e[1189]<=yz1d04a;ks1500e[1172]<=aa820e8[0];ks1500e[1087]<=ofc36db;ks1500e[1082]<=qg4c06d[0];ks1500e[1023]<=init_done;ks1500e[1009]<=sudba80;ks1500e[932]<=ba15f0;ks1500e[929]<=pu93858;ks1500e[744]<=fa6cdb2;ks1500e[663]<=qt412ad;ks1500e[605]<=pf4ab66;ks1500e[594]<=tw83a09;ks1500e[586]<=kqf041d[0];ks1500e[543]<=tu586db[0];ks1500e[504]<=eadb750[0];ks1500e[466]<=aa2be;ks1500e[372]<=lsad9b6;ks1500e[331]<=cze8255;ks1500e[297]<=ec10741;ks1500e[252]<=medb6ea;ks1500e[233]<=ba1b45;ks1500e[126]<=ng1b6dd;ks1500e[116]<=en60368;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule
































`timescale 1 ns / 100 ps
module xwf4207 (

   clk,
   rst_n,
   ri89167,
   
   yz7567,
   pu3ab3d,			
   tud59ea,
   ecacf52,
   ay67a90,
   xl3d481,
   eaea40e,
   by52070, 
   sj90382,
   db81c15,
   doe0af,
   ip7057b,
   ks82bdc,
   co15ee0,
   bnaf700,
   fn7b806,
   shdc036,
   vifeee9,

   ie1f400,   			
   lf13a72,			   
   wy9d397,
   nre9cb9,
   ecafb5,
   
   kdc9117, 
   of445e3, 
   gd178e7, 
   rte39e8, 
   mre7a3e,
   uve8fae,
   sw3eba2,
   gbd3f03,
   fca206e,
   vx81b91,
   cbae881, 
   alc6999,
   jpc8cbf,
   cm465ff,
   xl32ff9,
   aa97fce,
   phbfe71,
   suff38e,
   xjf9c71,
   icce38f,
   ria8044,
   qi98423,
   yzbed43,
   ay5ca81,
`ifdef DIR_SREF_EXT
   sref_ent_cmd,
   sref_ext_cmd,
`endif
   mr75008
   );
input            clk;
input            rst_n;
input            ri89167;
input            gbd3f03;
input            yz7567;
input            pu3ab3d;
input            tud59ea;
input            ecacf52;
input            ay67a90;
input            xl3d481;
input            eaea40e;
input            by52070;
input            sj90382;
input            db81c15;
input            doe0af;
input            ip7057b;
input            ks82bdc;
input            co15ee0;
input            bnaf700;
input            fn7b806;
input            shdc036;
input            vifeee9;
output           ie1f400;
output           lf13a72;
output           wy9d397;
output           nre9cb9;
output           kdc9117;
output           of445e3;
output           gd178e7;
output           rte39e8;
output           mre7a3e;
output           uve8fae;
output           fca206e;
output           vx81b91;
output           cbae881;
output           sw3eba2;
output           qi98423;
output           ria8044;
output           alc6999;
output           jpc8cbf;
output           yzbed43;
output           ecafb5;
output           cm465ff;
output           xl32ff9;
output           aa97fce;
output           phbfe71;
output           suff38e;
output           xjf9c71;
output           icce38f;
output           ay5ca81;

`ifdef DIR_SREF_EXT
output           sref_ent_cmd;
output           sref_ext_cmd;

`endif
output           mr75008;

`define IDLE_SP        	0

`define PRE_WAIT_SP    	1

`define PRE_SP         	2

`define SREF_ENT    	3

`define SREF_EXT    	4

`define TCKESR_S      	5

`define T512        	6

`define PWR_ENT     	7

`define PWR_EXT     	8

`define PWR_WAIT    	9

`define TPD_S         	10

`define CKE_LOW     	11

`define TXPDLL_S      	12

`define LMR_S         	13

`define REF_S         	14

`define ZQCLONG     	15

`define ZQCSHORT    	16

`define TZQOPER_S     	17

`define TZQS_S        	18

`define TMRD_S        	19

`define N_LMR          	20

`define L2L             21
reg              ie1f400, wy31b07 ;
reg              lf13a72, lfb5fb2;
reg              wy9d397, rt7ecbf;
reg              nre9cb9, ngb2ff7;
reg              kdc9117, zzbfdd1;
reg              of445e3, qtf7472;
reg              gd178e7, ead1caf;
reg              rte39e8, os72bc7;
reg              mre7a3e, xlaf1c4;
reg              uve8fae, dzc7131;
reg              aa97fce, uic4c7f;
reg              phbfe71, sw31fcc;
reg              fca206e, uv7f30c;
reg              vx81b91, ipcc32f;
reg              cbae881, phcbe6;
reg              suff38e, ri2f9bc;
reg              qi98423, gqbcd00;
reg              alc6999, sucb76a;
reg              sw3eba2, tu763cb;
reg              cm465ff, vife19b;
reg              xl32ff9, ri866d9;
reg              xjf9c71, xl9b65d;
reg              yzbed43, wjd9770;
reg              icce38f, ho5dc28;
reg              ecafb5, cz70a12;
reg              jpc8cbf, hd284ac;
reg              dm42567, ep12b3b;
reg              ux959dd, mgaceec;
reg              me67760, ie3bb00;
reg              rtdd800, vvec006;
reg              mr60037, mg1bd;
reg              swde8, vx6f41;
reg              ph37a0e, pubd076;
reg [21:0]       uve83b2, en41d95;
reg              ria8044, ps7656a;
reg              twb2b53, wl95a9a;
reg              doad4d4, yx6a6a3;
reg              ea5351c;
reg              qv9a8e0;
reg              ay5ca81, uka3829;
reg              bn1c149;
reg              mr75008, aa5278;
reg              sref_ent_cmd;
reg              sref_ext_cmd;
wire             th4f029;

`ifdef DIR_SREF_EXT

`else

`endif

`ifdef DIR_SREF_EXT

`else

`endif

`ifdef DIR_SREF_EXT

`endif

`ifdef DIR_SREF_EXT

`else

`endif

`ifdef CS_WIDTH_4

`else

`ifdef CS_WIDTH_2

`else

`endif

`endif

`ifdef DIR_SREF_EXT

`else

`endif
reg ea7814f;
reg jcc0a78;
reg ym53c3;
reg mt29e18;
reg pf4f0c4;
reg yk78627;
reg ofc3138;
reg oh189c5;
reg uic4e2c;
reg lf27161;
reg db38b0e;
reg fac5877;
reg ux2c3bb;
reg fn61ddd;
reg fceeee;
reg su77772;
reg sjbbb91;
reg thddc8c;
reg ba3a8d0;
reg os72332;
reg bn8b2e0;
reg je8cc8e;
reg dm66473;
reg rv3239a;
reg lf91cd7;
reg vx8e6be;
reg vi735f7;
reg qv9afbb;
reg rtd7ddd;
reg uxbeeef;
reg ipf777c;
reg qvbbbe5;
reg dzddf2c;
reg kqef966;
reg by7cb31;
reg ose598b;
reg kd4e2a5;
reg cb2c5b8;
reg jrbf962;
reg rv8b110;
reg ps58887;
reg cmc443a;
reg tj221d0;
reg mg10e86;
reg aa87430;
reg fc3a181;
reg vid0c0b;
reg vk8605a;
reg ri302d3;
reg hd8169a;
reg fcb4d6;
reg zx5a6b3;
reg gbd359e;
reg gd9acf4;
reg ofd67a5;
reg qib3d2c;
reg zz9e960;
reg jcf4b07;
reg zza583b;
reg kf2c1de;
reg [21 : 0] cz60ef5;
reg [21 : 0] ir77ac;
reg qi3bd65;
reg aydeb28;
reg qgf5941;
reg aaaca09;
reg wj65048;
reg rv28245;
reg gb4122f;
reg zz917c;
reg xw48be6;
reg nr45f33;
reg fc2f99f;
reg [2047:0] ks1500e;
wire [72:0] pua8071;

`ifdef DIR_SREF_EXT

`endif

`define IDLE_SP        	0

`define PRE_WAIT_SP    	1

`define PRE_SP         	2

`define SREF_ENT    	3

`define SREF_EXT    	4

`define TCKESR_S      	5

`define T512        	6

`define PWR_ENT     	7

`define PWR_EXT     	8

`define PWR_WAIT    	9

`define TPD_S         	10

`define CKE_LOW     	11

`define TXPDLL_S      	12

`define LMR_S         	13

`define REF_S         	14

`define ZQCLONG     	15

`define ZQCSHORT    	16

`define TZQOPER_S     	17

`define TZQS_S        	18

`define TMRD_S        	19

`define N_LMR          	20

`define L2L             21

`ifdef DIR_SREF_EXT

`else

`endif

`ifdef DIR_SREF_EXT

`else

`endif

`ifdef DIR_SREF_EXT

`endif

`ifdef DIR_SREF_EXT

`else

`endif

`ifdef CS_WIDTH_4

`else

`ifdef CS_WIDTH_2

`else

`endif

`endif

`ifdef DIR_SREF_EXT

`else

`endif

localparam rt4038b = 73,hq1c5e = 32'hfdffe44b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef DIR_SREF_EXT


`endif


`define IDLE_SP        	0


`define PRE_WAIT_SP    	1


`define PRE_SP         	2


`define SREF_ENT    	3


`define SREF_EXT    	4


`define TCKESR_S      	5


`define T512        	6


`define PWR_ENT     	7


`define PWR_EXT     	8


`define PWR_WAIT    	9


`define TPD_S         	10


`define CKE_LOW     	11


`define TXPDLL_S      	12


`define LMR_S         	13


`define REF_S         	14


`define ZQCLONG     	15


`define ZQCSHORT    	16


`define TZQOPER_S     	17


`define TZQS_S        	18


`define TMRD_S        	19


`define N_LMR          	20


`define L2L             21


`ifdef DIR_SREF_EXT


`else


`endif


`ifdef DIR_SREF_EXT


`else


`endif


`ifdef DIR_SREF_EXT


`endif


`ifdef DIR_SREF_EXT


`else


`endif


`ifdef CS_WIDTH_4


`else


`ifdef CS_WIDTH_2


`else


`endif


`endif


`ifdef DIR_SREF_EXT


`else


`endif












`ifdef DIR_SREF_EXT



`endif





`define IDLE_SP        	0



`define PRE_WAIT_SP    	1



`define PRE_SP         	2



`define SREF_ENT    	3



`define SREF_EXT    	4



`define TCKESR_S      	5



`define T512        	6



`define PWR_ENT     	7



`define PWR_EXT     	8



`define PWR_WAIT    	9



`define TPD_S         	10



`define CKE_LOW     	11



`define TXPDLL_S      	12



`define LMR_S         	13



`define REF_S         	14



`define ZQCLONG     	15



`define ZQCSHORT    	16



`define TZQOPER_S     	17



`define TZQS_S        	18



`define TMRD_S        	19



`define N_LMR          	20



`define L2L             21








always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      uve83b2   <=  20'b0;      kdc9117              <=  1'b0;      of445e3              <=  1'b0;      gd178e7              <=  1'b0;      rte39e8              <=  1'b0;      mre7a3e              <=  1'b0;      uve8fae             <=  1'b0;      fca206e             <=  1'b0;      vx81b91             <=  1'b0;      cbae881              <=  1'b0;      dm42567         <=  1'b0;      ux959dd     <=  1'b0;      rtdd800         <=  1'b0;      mr60037         <=  1'b0;      swde8         <=  1'b0;      qi98423             <=  1'b0;      alc6999         <=  1'b0;      sw3eba2              <=  1'b0;      cm465ff           <=  1'b0;      xl32ff9             <=  1'b0;      xjf9c71              <=  1'b0;      yzbed43          <=  1'b0;      icce38f           <=  1'b0;      ph37a0e         <=  1'b0;      ecafb5    <=  1'b0;      aa97fce          <=  1'b0;      phbfe71             <=  1'b0;      suff38e             <=  1'b0;      jpc8cbf         <=  1'b0;      lf13a72       <=  1'b0;
      wy9d397    <=  1'b0;      nre9cb9        <=  1'b0;      ria8044          <=  1'b0;      twb2b53        <=  1'b0;      ie1f400     <=  1'b0;      doad4d4           <=  1'b0;      ay5ca81          <=  1'b0;      mr75008          <=  1'b0;   end   else begin      uve83b2   <=  ir77ac ;      kdc9117              <=  lf91cd7 ;      of445e3              <=  vx8e6be ;      gd178e7              <=  vi735f7 ;      rte39e8              <=  qv9afbb ;      mre7a3e              <=  rtd7ddd ;      uve8fae             <=  uxbeeef ;      fca206e             <=  dzddf2c ;      vx81b91             <=  kqef966 ;      cbae881              <=  by7cb31 ;      dm42567         <=  vk8605a ;      ux959dd     <=  hd8169a  ;      me67760     <=  zx5a6b3  ;      rtdd800         <=  gd9acf4 ;      mr60037         <=  qib3d2c  ;      swde8         <=  jcf4b07  ;      qi98423             <=  kd4e2a5 ;      alc6999         <=  cb2c5b8 ;      sw3eba2              <=  jrbf962 ;      cm465ff           <=  rv8b110 ;      xl32ff9             <=  ps58887 ;      xjf9c71              <=  cmc443a ;      yzbed43          <=  tj221d0 ;      icce38f           <=  mg10e86 ;      ph37a0e         <=  kf2c1de;      ecafb5    <=  aa87430;      aa97fce          <=  ipf777c;      phbfe71             <=  qvbbbe5;      suff38e             <=  ose598b;      jpc8cbf         <=  fc3a181;      lf13a72       <=  je8cc8e ;
      wy9d397    <=  dm66473 ;      nre9cb9        <=  rv3239a ;      ria8044          <=  qi3bd65;      twb2b53        <=  qgf5941;      doad4d4           <=  wj65048;      ie1f400     <=  bn8b2e0;      ay5ca81          <=  zz917c;      mr75008          <=  nr45f33;   end
end








`ifdef DIR_SREF_EXT

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ea5351c   <=  'b0;   else      ea5351c   <=  'b0;
end


`else

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ea5351c   <=  'b0;   else if (ym53c3)       ea5351c   <=  'b1;   else if (of445e3)      ea5351c   <=  'b0;
end


`endif


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      qv9a8e0   <=  'b0;   else if (pf4f0c4)       qv9a8e0   <=  'b1;   else if (rte39e8)      qv9a8e0   <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      bn1c149   <=  'b0;   else if (uic4e2c)       bn1c149   <=  'b1;   else if (cbae881)      bn1c149   <=  'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      sref_ent_cmd <= 1'b0;   else      sref_ent_cmd <= (ir77ac[`SREF_ENT] == 1'b1) ? 1'b1 : 1'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      sref_ext_cmd <= 1'b0;   else      sref_ext_cmd <= (ir77ac[`SREF_EXT] == 1'b1) ? 1'b1 : 1'b0;
end










`ifdef DIR_SREF_EXT

assign  th4f029 = ym53c3;

`else

assign  th4f029 = 1'b0;

`endif


always @ (cz60ef5 or os72332 or uic4e2c or jcc0a78 or fc2f99f          or yk78627 or ofc3138 or oh189c5 or mt29e18 or vid0c0b or          ri302d3 or gbd359e or ofd67a5 or zz9e960          or lf27161 or zza583b or db38b0e or fac5877 or ba3a8d0          or ux2c3bb or fn61ddd or fceeee or su77772          or yzbed43 or sjbbb91 or thddc8c or icce38f or uve8fae          or rv28245 or gb4122f or aaaca09 or ea7814f or xw48be6 or aydeb28          or ie1f400 or ecafb5 or alc6999 or vx81b91  or cm465ff or mre7a3e or sw3eba2          or phbfe71 or aa97fce or suff38e or lf13a72 or nre9cb9 or xl32ff9 or wy9d397          or ay5ca81 or jpc8cbf or fca206e or xjf9c71 or aydeb28 or mr75008) begin
gqbcd00 = 1'b0;
en41d95 = 20'b0;
zzbfdd1 = 1'b0;
qtf7472 = 1'b0;
ead1caf = 1'b0;
os72bc7 = 1'b0;
ps7656a = 1'b0;
phcbe6 = 1'b0;
wy31b07 = ie1f400;
cz70a12 = ecafb5;
sucb76a = alc6999;
hd284ac = jpc8cbf;
vx6f41 = zz9e960;
mg1bd = ofd67a5;
mgaceec = ri302d3;
ie3bb00 = fcb4d6;
ep12b3b = vid0c0b;
vvec006 = gbd359e;
pubd076 = zza583b;
ipcc32f = vx81b91;
vife19b = cm465ff;
yx6a6a3 = aaaca09;
xlaf1c4 = mre7a3e;
dzc7131 = uve8fae;
wjd9770 = yzbed43;
tu763cb = sw3eba2;
sw31fcc = phbfe71;
uic4c7f = aa97fce;
ri2f9bc = suff38e;
lfb5fb2 = lf13a72;
ngb2ff7 = nre9cb9;
ho5dc28 = icce38f;
ri866d9 = xl32ff9;
rt7ecbf = wy9d397;
uka3829 = ay5ca81;
uv7f30c = fca206e;
xl9b65d = xjf9c71;
wl95a9a = aydeb28;
aa5278 = mr75008;
case (1)        cz60ef5[`IDLE_SP] :  begin                    lfb5fb2 = 1'b0;                    rt7ecbf = 1'b0;                    ngb2ff7 = 1'b0;                    ps7656a = 1'b0;                    gqbcd00 = 1'b1;                    zzbfdd1 = 1'b0;                    qtf7472 = 1'b0;                    ead1caf = 1'b0;                    os72bc7 = 1'b0;                    xlaf1c4 = 1'b0;                    dzc7131 = 1'b0;                    uv7f30c = 1'b0;                    ipcc32f = 1'b0;                    phcbe6 = 1'b0;                    sucb76a = 1'b0;                    tu763cb = 1'b0;                    vife19b = 1'b0;                    ri866d9 = 1'b0;                    xl9b65d = 1'b0;                    wjd9770 = 1'b0;                    ho5dc28 = 1'b0;                    ep12b3b = 1'b0;                    mgaceec = 1'b0;                    ie3bb00 = 1'b0;                    vvec006 = 1'b0;                    mg1bd = 1'b0;                    vx6f41 = 1'b0;                    pubd076 = 1'b0;                    cz70a12 = 1'b0;                    uic4c7f = 1'b0;                    sw31fcc = 1'b0;                    ri2f9bc = 1'b0;                    hd284ac = 1'b0;                    wl95a9a = 1'b0;                    yx6a6a3 = 1'b0;                    wy31b07 = 1'b0;                    uka3829 = 1'b0;                    aa5278 = 1'b0;                    if (os72332 || ea7814f) begin                       if (xw48be6 && ba3a8d0) begin                            en41d95[`PRE_SP] = 1'b1;                          tu763cb = 1'b1;                          sucb76a = 1'b0;                          ep12b3b = 1'b1;                          

                       end                       else if (jcc0a78) begin                          en41d95[`PRE_WAIT_SP] = 1'b1;                          ep12b3b = 1'b1;                           mgaceec = 1'b1;                          gqbcd00 = 1'b0;                          sucb76a = 1'b1;                          cz70a12 = 1'b1;                       end


`ifdef DIR_SREF_EXT
                       else if (ym53c3) begin                          en41d95[`SREF_EXT] = 1'b1;                          ie3bb00 = 1'b0;                          gqbcd00 = 1'b0;                          sucb76a = 1'b0;                          cz70a12 = 1'b1;                       end

`endif
                       else if (yk78627) begin                          en41d95[`PRE_WAIT_SP] = 1'b1;                          vvec006 = 1'b1;                          gqbcd00 = 1'b0;                          sucb76a = 1'b1;                          cz70a12 = 1'b1;                       end                       else if (ofc3138) begin                          en41d95[`PRE_WAIT_SP] = 1'b1;                          mg1bd = 1'b1;                          gqbcd00 = 1'b0;                          sucb76a = 1'b1;                          cz70a12 = 1'b1;                       end                       else if (oh189c5) begin                          en41d95[`PRE_WAIT_SP] = 1'b1;                          vx6f41 = 1'b1;                          gqbcd00 = 1'b0;                          sucb76a = 1'b1;                          cz70a12 = 1'b1;                       end                       else if (mt29e18) begin                          en41d95[`PWR_WAIT] = 1'b1;                          gqbcd00 = 1'b0;                          hd284ac = 1'b1;                          cz70a12 = 1'b1;                       end                       else  en41d95[`IDLE_SP] = 1'b1 ;                    end                    else en41d95[`IDLE_SP] = 1'b1;                 end                    cz60ef5[`PRE_WAIT_SP] :  begin    ps7656a = 1'b0;    if (zza583b) begin       if (lf27161) begin          if (vid0c0b) begin              en41d95[`REF_S] = 1'b1;
              phcbe6 = 1'b1;              ep12b3b = 1'b0;              sucb76a = 1'b0;              pubd076 = 1'b0;          end
          else if (gbd359e) begin              en41d95[`LMR_S] = 1'b1;              xlaf1c4 = 1'b1;              vvec006 = 1'b0;              sucb76a = 1'b0;              pubd076 = 1'b0;          end          else if (ofd67a5) begin              en41d95[`ZQCLONG] = 1'b1;              uv7f30c = 1'b1;              mg1bd = 1'b0;              sucb76a = 1'b0;              pubd076 = 1'b0;          end          else if (zz9e960) begin              en41d95[`ZQCSHORT] = 1'b1;              ipcc32f = 1'b1;              vx6f41 = 1'b0;              sucb76a = 1'b0;              pubd076 = 1'b0;          end          else begin            en41d95[`PRE_WAIT_SP] = 1'b1;            sucb76a = 1'b1;          end       end       else begin         en41d95[`PRE_WAIT_SP] = 1'b1;         sucb76a = 1'b1;       end    end    else if (lf27161) begin         en41d95[`PRE_SP] = 1'b1;         tu763cb = 1'b1;         sucb76a = 1'b0;     end     else begin         en41d95[`PRE_WAIT_SP] = 1'b1;         sucb76a = 1'b1;     end    end                cz60ef5[`PRE_SP] :  begin        en41d95[`PRE_WAIT_SP] = 1'b1;        sucb76a = 1'b1;        tu763cb = 1'b0;        pubd076 = 1'b1;        ps7656a = 1'b1;    end                    cz60ef5[`SREF_ENT] :  begin        zzbfdd1 = 1'b0;        vife19b = 1'b1;        en41d95[`TCKESR_S] = 1'b1;    end                    cz60ef5[`SREF_EXT] :  begin       en41d95[`T512] = 1'b1;       ri866d9 = 1'b1;       qtf7472 = 1'b0;
    end                    cz60ef5[`TCKESR_S] :  begin      if ((db38b0e && rv28245) ||          ( aydeb28 && rv28245)) begin         en41d95[`SREF_EXT] = 1'b1;         qtf7472 = 1'b1;         vife19b = 1'b0;         wl95a9a = 1'b0;         wjd9770 = 1'b0;      end      else if (db38b0e) begin

`ifdef DIR_SREF_EXT
          en41d95[`IDLE_SP] = 1'b1;          ri866d9 = 1'b0;          gqbcd00 = 1'b1;
          wy31b07 = 1'b1;          lfb5fb2= 1'b1;

`else
        en41d95[`TCKESR_S] = 1'b1;        vife19b = 1'b1;        wl95a9a = 1'b1;


`endif
      end      else begin        en41d95[`TCKESR_S] = 1'b1;        vife19b = 1'b1;      end    end                    cz60ef5[`T512] :  begin      if (fac5877) begin          en41d95[`IDLE_SP] = 1'b1;          ri866d9 = 1'b0;          gqbcd00 = 1'b1;          cz70a12 = 1'b0;          wy31b07 = 1'b1;          lfb5fb2= 1'b1;      end      else en41d95[`T512] = 1'b1;
    end                    cz60ef5[`PWR_ENT] :  begin        en41d95[`TPD_S] = 1'b1;        ead1caf = 1'b0;        xl9b65d = 1'b1;    end                    cz60ef5[`PWR_EXT] :  begin       if (yzbed43) begin          en41d95[`PWR_EXT] = 1'b1;          wjd9770 = 1'b0;       end       else begin          en41d95[`TXPDLL_S] = 1'b1;          ho5dc28 = 1'b1;          os72bc7= 1'b1;
       end
    end                    cz60ef5[`PWR_WAIT] :  begin        if(fceeee) begin            en41d95[`CKE_LOW] = 1'b1;            wjd9770 = 1'b1;            hd284ac = 1'b0;        end        else begin            en41d95[`PWR_WAIT] = 1'b1;        end    end                    cz60ef5[`TPD_S] :  begin      if ((su77772 && gb4122f) ||          ( aaaca09 && gb4122f)) begin          en41d95[`PWR_EXT] = 1'b1;          xl9b65d = 1'b0;          yx6a6a3 = 1'b0;       end      else if (su77772) begin        en41d95[`TPD_S] = 1'b1;        xl9b65d = 1'b1;        yx6a6a3 = 1'b1;      end       else begin          en41d95[`TPD_S] = 1'b1;       end    end                cz60ef5[`CKE_LOW] :  begin        en41d95[`PWR_ENT] = 1'b1;        ead1caf = 1'b1;        uka3829 = 1'b1;    end                    cz60ef5[`TXPDLL_S] :  begin      os72bc7= 1'b0;      uka3829 = 1'b0;      if (thddc8c) begin             en41d95[`IDLE_SP] = 1'b1;             gqbcd00 = 1'b0;             ho5dc28 = 1'b0;             cz70a12 = 1'b0;             ngb2ff7 = 1'b1;             wy31b07 = 1'b1;      end      else begin             en41d95[`TXPDLL_S] = 1'b1;      end    end                




    cz60ef5[`LMR_S] :  begin      xlaf1c4 = 1'b0;

`ifdef CS_WIDTH_4
       en41d95[`N_LMR] = 1'b1;

`else



`ifdef CS_WIDTH_2
         en41d95[`N_LMR] = 1'b1;


`else
        en41d95[`TMRD_S] = 1'b1;        ri2f9bc = 1'b1;


`endif



`endif
    end    cz60ef5[`N_LMR] :  begin      dzc7131 = 1'b1;      en41d95[`L2L] = 1'b1;   end    cz60ef5[`L2L] :  begin      en41d95[`TMRD_S] = 1'b1;      ri2f9bc = 1'b1;      dzc7131 = 1'b0;    end                    cz60ef5[`TMRD_S] :  begin      if (sjbbb91) begin        en41d95[`IDLE_SP] = 1'b1;        gqbcd00 = 1'b1;        ri2f9bc = 1'b0;        wy31b07 = 1'b1;      end      else begin         en41d95[`TMRD_S] = 1'b1;         ri2f9bc = 1'b1;      end    end                    cz60ef5[`REF_S] :  begin       phcbe6 = 1'b0;       if (hd8169a) begin   if (ba3a8d0) begin                 en41d95[`SREF_ENT] = 1'b1;             zzbfdd1 = 1'b1;             mgaceec = 1'b0;             sucb76a = 1'b0;             pubd076 = 1'b0;


`ifdef DIR_SREF_EXT
             wjd9770 = 1'b0;


`else
             wjd9770 = 1'b1;


`endif
  end  else begin             en41d95[`REF_S] = 1'b1;  end       end       else begin          en41d95[`IDLE_SP] = 1'b1;          gqbcd00 = 1'b1;          rt7ecbf = 1'b1;          wy31b07 = 1'b1;       end    end

                    cz60ef5[`ZQCLONG] :  begin        en41d95[`TZQOPER_S] = 1'b1;        uv7f30c = 1'b0;        uic4c7f = 1'b1;    end                    cz60ef5[`ZQCSHORT] :  begin        en41d95[`TZQS_S] = 1'b1;        ipcc32f = 1'b0;        sw31fcc = 1'b1;    end                    cz60ef5[`TZQOPER_S] :  begin        if (ux2c3bb) begin          en41d95[`IDLE_SP] = 1'b1;          gqbcd00 = 1'b1;          uic4c7f = 1'b0;          cz70a12 = 1'b0;          wy31b07 = 1'b1;          aa5278 = 1'b1;
        end        else begin          en41d95[`TZQOPER_S] = 1'b1;          uic4c7f = 1'b1;        end    end                    cz60ef5[`TZQS_S] :  begin        if (fn61ddd) begin          en41d95[`IDLE_SP] = 1'b1;          gqbcd00 = 1'b1;          sw31fcc = 1'b0;          aa5278 = 1'b1;          cz70a12 = 1'b0;          wy31b07 = 1'b1;
        end        else begin          en41d95[`TZQS_S] = 1'b1;          sw31fcc = 1'b1;        end    end
    default: begin       en41d95[`IDLE_SP] = 1'b1;        wy31b07 = 1'b0;        cz70a12 = 1'b0;    end
endcase
end

always@* begin ea7814f<=pua8071[0];jcc0a78<=pua8071[1];ym53c3<=pua8071[2];mt29e18<=pua8071[3];pf4f0c4<=pua8071[4];yk78627<=pua8071[5];ofc3138<=pua8071[6];oh189c5<=pua8071[7];uic4e2c<=pua8071[8];lf27161<=pua8071[9];db38b0e<=pua8071[10];fac5877<=pua8071[11];ux2c3bb<=pua8071[12];fn61ddd<=pua8071[13];fceeee<=pua8071[14];su77772<=pua8071[15];sjbbb91<=pua8071[16];thddc8c<=pua8071[17];ba3a8d0<=pua8071[18];os72332<=pua8071[19];bn8b2e0<=pua8071[20];je8cc8e<=pua8071[21];dm66473<=pua8071[22];rv3239a<=pua8071[23];lf91cd7<=pua8071[24];vx8e6be<=pua8071[25];vi735f7<=pua8071[26];qv9afbb<=pua8071[27];rtd7ddd<=pua8071[28];uxbeeef<=pua8071[29];ipf777c<=pua8071[30];qvbbbe5<=pua8071[31];dzddf2c<=pua8071[32];kqef966<=pua8071[33];by7cb31<=pua8071[34];ose598b<=pua8071[35];kd4e2a5<=pua8071[36];cb2c5b8<=pua8071[37];jrbf962<=pua8071[38];rv8b110<=pua8071[39];ps58887<=pua8071[40];cmc443a<=pua8071[41];tj221d0<=pua8071[42];mg10e86<=pua8071[43];aa87430<=pua8071[44];fc3a181<=pua8071[45];vid0c0b<=pua8071[46];vk8605a<=pua8071[47];ri302d3<=pua8071[48];hd8169a<=pua8071[49];fcb4d6<=pua8071[50];zx5a6b3<=pua8071[51];gbd359e<=pua8071[52];gd9acf4<=pua8071[53];ofd67a5<=pua8071[54];qib3d2c<=pua8071[55];zz9e960<=pua8071[56];jcf4b07<=pua8071[57];zza583b<=pua8071[58];kf2c1de<=pua8071[59];cz60ef5<={uve83b2>>1,pua8071[60]};ir77ac<={en41d95>>1,pua8071[61]};qi3bd65<=pua8071[62];aydeb28<=pua8071[63];qgf5941<=pua8071[64];aaaca09<=pua8071[65];wj65048<=pua8071[66];rv28245<=pua8071[67];gb4122f<=pua8071[68];zz917c<=pua8071[69];xw48be6<=pua8071[70];nr45f33<=pua8071[71];fc2f99f<=pua8071[72];end
always@* begin ks1500e[2047]<=yz7567;ks1500e[2046]<=pu3ab3d;ks1500e[2044]<=tud59ea;ks1500e[2040]<=ecacf52;ks1500e[2033]<=ay67a90;ks1500e[2019]<=xl3d481;ks1500e[1991]<=eaea40e;ks1500e[1934]<=by52070;ks1500e[1929]<=ep12b3b;ks1500e[1898]<=bnaf700;ks1500e[1821]<=sj90382;ks1500e[1810]<=ux959dd;ks1500e[1749]<=fn7b806;ks1500e[1707]<=gbd3f03;ks1500e[1666]<=xlaf1c4;ks1500e[1630]<=xl9b65d;ks1500e[1617]<=doad4d4;ks1500e[1595]<=db81c15;ks1500e[1572]<=mgaceec;ks1500e[1506]<=hd284ac;ks1500e[1450]<=shdc036;ks1500e[1440]<=ead1caf;ks1500e[1428]<=twb2b53;ks1500e[1384]<=zzbfdd1;ks1500e[1370]<=rt7ecbf;ks1500e[1366]<=wy31b07;ks1500e[1308]<=uka3829;ks1500e[1284]<=dzc7131;ks1500e[1212]<=wjd9770;ks1500e[1202]<=uve83b2[0];ks1500e[1187]<=yx6a6a3;ks1500e[1174]<=vx6f41;ks1500e[1170]<=mr60037;ks1500e[1142]<=doe0af;ks1500e[1137]<=aa5278;ks1500e[1125]<=sucb76a;ks1500e[1097]<=me67760;ks1500e[1041]<=sw31fcc;ks1500e[1023]<=ri89167;ks1500e[964]<=dm42567;ks1500e[949]<=co15ee0;ks1500e[853]<=vifeee9;ks1500e[833]<=os72bc7;ks1500e[815]<=ri866d9;ks1500e[808]<=wl95a9a;ks1500e[753]<=cz70a12;ks1500e[720]<=qtf7472;ks1500e[714]<=ps7656a;ks1500e[692]<=ngb2ff7;ks1500e[685]<=lfb5fb2;ks1500e[654]<=qv9a8e0;ks1500e[601]<=pubd076;ks1500e[587]<=swde8;ks1500e[585]<=vvec006;ks1500e[568]<=bn1c149;ks1500e[562]<=gqbcd00;ks1500e[520]<=uic4c7f;ks1500e[474]<=ks82bdc;ks1500e[407]<=vife19b;ks1500e[376]<=ho5dc28;ks1500e[357]<=en41d95[0];ks1500e[327]<=ea5351c;ks1500e[300]<=ph37a0e;ks1500e[293]<=mg1bd;ks1500e[292]<=rtdd800;ks1500e[281]<=ri2f9bc;ks1500e[237]<=ip7057b;ks1500e[226]<=th4f029;ks1500e[203]<=tu763cb;ks1500e[146]<=ie3bb00;ks1500e[140]<=phcbe6;ks1500e[70]<=ipcc32f;ks1500e[35]<=uv7f30c;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule































`timescale 1 ns / 100 ps
module vvfc0ed (

   clk,
   rst_n,
   param_trp ,
   param_tckesr ,
   param_tzqoper ,
   param_tzqs,
   param_tmrd,
   param_tpd,
   param_twr,  
   param_txpdll,
   param_tcke,
   qgf5a2b, 
   dm6351f,   
   ri89167,
   gbd3f03,
   of60d31,
   bn698c,			
   ie34c66,
   oua6331,
   ym31988,
   ng8cc41,
   jc6620b,
   ks3105a,
   aa882d0,
   gb41680,			
   xyb404,
   nr5a023,
   ned011e,
   oh808f3,
   ng479d,
   cb23cea,     
   rg63244,   
    

   kdc9117,
   of445e3,
   gd178e7,
   rte39e8,
   mre7a3e,
   uve8fae,
   sw3eba2,
   cbae881,   
   fca206e,
   vx81b91,
   ria8044,
   ie1f400, 			
   lf13a72,		   
   wy9d397,
   nre9cb9,
   ecafb5,
   yzbed43,
   cm72e75,		 
   ou973a8,			 
   qib9d40,
   eacea01,
   mr75008,
   ay5ca81,
   sh415f4,
   ouafa4,
`ifdef DIR_SREF_EXT
   sref_ent_cmd,
   sref_ext_cmd,
`endif
   ps66136,
   jr84d93      
   );
input                             clk;
input                             rst_n;
input [`TRP_WIDTH-1:0]            param_trp ;
input [`TCKESR_WIDTH-1:0]         param_tckesr ;
input [`TZQOPER_WIDTH-1:0]        param_tzqoper ;
input [`TZQS_WIDTH-1:0]           param_tzqs;
input [`TMRD_WIDTH-1:0]           param_tmrd;
input [`TPD_WIDTH-1:0]            param_tpd;
input [`TWR_WIDTH-1:0]            param_twr;
input [`TXPDLL_WIDTH-1:0]         param_txpdll;
input [`TCKE_WIDTH-1:0]           param_tcke;
input                             qgf5a2b;
input [`RL_WIDTH-1:0]             dm6351f;
input                             ri89167;
input                             gbd3f03;
input                             of60d31;
input                             bn698c;
input                             ie34c66;
input                             oua6331;
input                             ym31988;
input                             ng8cc41;
input                             jc6620b;
input                             ks3105a;
input                             aa882d0;
input                             gb41680;
input                             xyb404;
input                             nr5a023;
input                             ned011e;
input                             oh808f3;
input                             ng479d;
input                             cb23cea;
input                             rg63244;
output                            kdc9117;
output                            of445e3;
output                            gd178e7;
output                            rte39e8;
output                            mre7a3e;
output                            uve8fae;
output                            sw3eba2;
output                            cbae881;
output                            fca206e;
output                            vx81b91;
output                            ria8044;
output                            ie1f400;
output                            lf13a72;
output                            wy9d397;
output                            nre9cb9;
output                            ecafb5;
output                            yzbed43;
output                            cm72e75;
output                            ou973a8;
output                            qib9d40;
output                            eacea01;
output                            mr75008;
output                            ay5ca81;
output                            ouafa4;
output                            sh415f4;

`ifdef DIR_SREF_EXT
output                            sref_ent_cmd;
output                            sref_ext_cmd;

`endif
output                            ps66136;
output                            jr84d93;
wire [`TRP_WIDTH-1:0]             param_trp ;
wire [`TCKESR_WIDTH-1:0]          param_tckesr ;
wire [`TZQOPER_WIDTH-1:0]         param_tzqoper ;
wire [`TZQS_WIDTH-1:0]            param_tzqs;
wire [`TMRD_WIDTH-1:0]            param_tmrd;
wire [`TPD_WIDTH-1:0]             param_tpd;
wire [`TWR_WIDTH-1:0]             param_twr;
wire [`TXPDLL_WIDTH-1:0]          param_txpdll;
wire [`TCKE_WIDTH-1:0]            param_tcke;
wire [`RL_WIDTH-1:0]              dm6351f;

`ifdef DIR_SREF_EXT
wire                              sref_ent_cmd;
wire                              sref_ext_cmd;

`endif

`ifdef DIR_SREF_EXT

`endif
reg qg46c2e;
reg uvdc141;
reg ea7814f;
reg os72332;
reg hd39ff;
reg hd1cffe;
reg she7ff6;
reg je3ffb5;
reg wwffdaa;
reg xwfed50;
reg hbf6a82;
reg fpb5416;
reg phaa0b6;
reg nr505b6;
reg mg82db7;
reg vx16db8;
reg ymb6dc7;
reg ieb6e38;
reg lsb71c0;
reg ngb8e03;
reg qg726ee;
reg [2047:0] ks1500e;
wire [20:0] pua8071;

`ifdef DIR_SREF_EXT

`endif

`ifdef DIR_SREF_EXT

`endif


`ifdef DIR_SREF_EXT

`endif



localparam rt4038b = 21,hq1c5e = 32'hfdffd14b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef DIR_SREF_EXT


`endif


`ifdef DIR_SREF_EXT


`endif


`ifdef DIR_SREF_EXT


`endif








`ifdef DIR_SREF_EXT



`endif



`ifdef DIR_SREF_EXT



`endif






 xwf4207 qgfae02(
   .clk( clk ),   .rst_n( qg46c2e ),   .ri89167( ea7814f ),   .yz7567( yz7567 ),   .pu3ab3d( pu3ab3d ),
   .tud59ea( tud59ea ),   .ecacf52( ecacf52 ),   .ay67a90( ay67a90 ),   .xl3d481( xl3d481 ),   .eaea40e( eaea40e ),   .by52070( by52070 ),   .sj90382( sj90382 ),   .db81c15( db81c15 ),   .doe0af( doe0af ),   .ip7057b( ip7057b ),   .ks82bdc( ks82bdc ),   .co15ee0( co15ee0 ),   .bnaf700( bnaf700 ),   .fn7b806( fn7b806 ),   .shdc036( shdc036 ),   .gbd3f03(os72332),   .vifeee9(vifeee9),
   .ie1f400( ie1f400 ),
   .lf13a72( lf13a72 ),
   .wy9d397( wy9d397 ),   .nre9cb9( nre9cb9 ),   .ecafb5( ecafb5 ),   .kdc9117( kdc9117 ) ,   .of445e3( of445e3 ) ,   .gd178e7( gd178e7 ) ,   .rte39e8( rte39e8 ),   .mre7a3e( mre7a3e ),   .uve8fae ( uve8fae  ),   .sw3eba2( sw3eba2 ),   .fca206e( fca206e ),   .vx81b91( vx81b91 ),   .cbae881( cbae881 ),   .alc6999( alc6999 ),   .jpc8cbf( jpc8cbf ),   .cm465ff( cm465ff ),   .xl32ff9( xl32ff9 ),   .aa97fce( aa97fce ),   .phbfe71( phbfe71 ),   .suff38e( suff38e ),   .xjf9c71( xjf9c71 ),   .icce38f( icce38f ),   .ria8044( ria8044 ),   .qi98423(xwdf313),   .yzbed43( yzbed43 ),   .ay5ca81( ay5ca81 ),

`ifdef DIR_SREF_EXT
   .sref_ent_cmd (sref_ent_cmd),   .sref_ext_cmd (sref_ext_cmd),

`endif
   .mr75008(mr75008)   );



  fpaf033 ic7819e(
   .clk( clk ),   .rst_n( qg46c2e ),   .param_trp( param_trp ) ,   .param_tckesr( param_tckesr) ,   .param_tzqoper( param_tzqoper ) ,   .param_twr( param_twr ),   .param_tzqs( param_tzqs ),   .param_tmrd( param_tmrd ),   .param_tpd( param_tpd ),   .param_txpdll( param_txpdll ),   .param_tcke( param_tcke ),   .alc6999( alc6999 ),   .cm465ff( cm465ff ),   .xl32ff9( xl32ff9 ),   .aa97fce( aa97fce ),   .phbfe71( phbfe71 ),   .suff38e( suff38e ),   .xjf9c71( xjf9c71 ),   .qgf5a2b( uvdc141 ),   .dm6351f(dm6351f),   .icce38f( icce38f ),   .jpc8cbf( jpc8cbf ),   .cbae881( cbae881 ),   .swac1a6( by52070 ),
   .sj90382( sj90382 ),   .db81c15( db81c15 ),   .doe0af( doe0af ),   .ip7057b( ip7057b ),   .ks82bdc( ks82bdc ),   .co15ee0( co15ee0 ),   .bnaf700( bnaf700 ),   .fn7b806( fn7b806 ),   .shdc036( shdc036 ) ,   .vifeee9(vifeee9)   );

db8b446 jp5a237(
   .clk(clk ),   .rst_n(qg46c2e ),   .gbd3f03(os72332),   .of60d31(hd39ff ),   .bn698c(hd1cffe ),
   .ie34c66(she7ff6 ),   .oua6331(je3ffb5 ),   .ym31988(wwffdaa ),   .ng8cc41(xwfed50 ),   .jc6620b(hbf6a82 ),   .ks3105a(fpb5416 ),   .aa882d0(phaa0b6 ),   .gb41680(nr505b6 ),
   .xyb404(mg82db7 ),   .nr5a023(vx16db8 ),   .ned011e(ymb6dc7 ),   .oh808f3(ieb6e38 ),   .ng479d(lsb71c0 ),   .cb23cea(ngb8e03 ),   .rg63244(qg726ee ),   .mre7a3e(mre7a3e ),   .fca206e(fca206e ),   .vx81b91(vx81b91 ),   .lf13a72( lf13a72 ),
   .wy9d397( wy9d397 ),   .nre9cb9( nre9cb9 ),

   .cm72e75(cm72e75 ),
   .ou973a8(ou973a8 ),
   .qib9d40(qib9d40 ),   .eacea01(eacea01 ),   .mr75008(mr75008 ),   .of7a6ff(yz7567 ),   .jr9bfec(pu3ab3d ),   .ayffb3b(tud59ea ),   .pfecec5(ecacf52 ),   .ay67a90(ay67a90 ),   .xl3d481(xl3d481 ),   .eaea40e(eaea40e ),   .swac1a6(by52070 ),   .ouafa4(ouafa4),   .sh415f4(sh415f4),   .ps66136(ps66136),   .jr84d93(jr84d93)
   );
 always@* begin qg46c2e<=pua8071[0];uvdc141<=pua8071[1];ea7814f<=pua8071[2];os72332<=pua8071[3];hd39ff<=pua8071[4];hd1cffe<=pua8071[5];she7ff6<=pua8071[6];je3ffb5<=pua8071[7];wwffdaa<=pua8071[8];xwfed50<=pua8071[9];hbf6a82<=pua8071[10];fpb5416<=pua8071[11];phaa0b6<=pua8071[12];nr505b6<=pua8071[13];mg82db7<=pua8071[14];vx16db8<=pua8071[15];ymb6dc7<=pua8071[16];ieb6e38<=pua8071[17];lsb71c0<=pua8071[18];ngb8e03<=pua8071[19];qg726ee<=pua8071[20];end
always@* begin ks1500e[2047]<=qgf5a2b;ks1500e[2046]<=ri89167;ks1500e[2044]<=gbd3f03;ks1500e[2040]<=of60d31;ks1500e[2033]<=bn698c;ks1500e[2019]<=ie34c66;ks1500e[1990]<=oua6331;ks1500e[1939]<=ng479d;ks1500e[1933]<=ym31988;ks1500e[1831]<=cb23cea;ks1500e[1819]<=ng8cc41;ks1500e[1778]<=nr5a023;ks1500e[1615]<=rg63244;ks1500e[1591]<=jc6620b;ks1500e[1508]<=ned011e;ks1500e[1135]<=ks3105a;ks1500e[1023]<=rst_n;ks1500e[969]<=oh808f3;ks1500e[889]<=xyb404;ks1500e[444]<=gb41680;ks1500e[222]<=aa882d0;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule































`timescale 1 ns / 100 ps
module fpaf033 (

   clk,
   rst_n,
   param_trp ,
   param_tckesr ,
   param_tzqoper ,
   param_twr,
   param_tzqs,
   param_tmrd,
   param_tpd,
   param_txpdll,
   param_tcke,
   alc6999,
   jpc8cbf,
   cm465ff,
   xl32ff9,
   aa97fce,
   phbfe71,
   suff38e,
   xjf9c71,
   qgf5a2b,
   dm6351f,
   icce38f,
   cbae881,
   swac1a6,
   

   sj90382,
   db81c15,
   doe0af,
   ip7057b,
   ks82bdc,
   co15ee0,
   bnaf700,
   fn7b806,
   shdc036,
   vifeee9      
   );
input                             clk;
input                             rst_n;
input [`TRP_WIDTH-1:0]            param_trp ;
input [`TCKESR_WIDTH-1:0]         param_tckesr ;
input [`TZQOPER_WIDTH-1:0]        param_tzqoper ;
input [`TZQS_WIDTH-1:0]           param_tzqs;
input [`TMRD_WIDTH-1:0]           param_tmrd;
input [`TPD_WIDTH-1:0]            param_tpd;
input [`TWR_WIDTH-1:0]            param_twr;
input [`TXPDLL_WIDTH-1:0]         param_txpdll;
input [`TCKE_WIDTH-1:0]           param_tcke;
input                             alc6999;
input                             cm465ff;
input                             xl32ff9;
input                             aa97fce;
input                             phbfe71;
input                             suff38e;
input                             xjf9c71;
input                             qgf5a2b;
input [`RL_WIDTH-1:0]             dm6351f;
input                             icce38f;
input                             jpc8cbf;
input                             cbae881;
input                             swac1a6;
output                            sj90382;
output                            db81c15;
output                            doe0af;
output                            ip7057b;
output                            ks82bdc;
output                            co15ee0;
output                            bnaf700;
output                            fn7b806;
output                            shdc036;
output                            vifeee9;
reg [`TRP_WIDTH-1:0]              os5cbd0 ;
reg [`TCKESR_WIDTH-1:0]           gb41702 ;
reg [`TZQOPER_WIDTH-1:0]          xyb814 ;
reg [`TZQS_WIDTH-1:0]             go5c0a2;
reg [`TMRD_WIDTH-1:0]             mee0511;
reg [`TPD_WIDTH-1:0]              oh2889;
reg [`TXPDLL_WIDTH-1:0]           je1444c;
reg [`TWR_WIDTH+`RL_WIDTH+1:0]    hqa2263;
reg [`TWR_WIDTH+`RL_WIDTH+1:0]    vk1131a;
reg [8:0]                         zm898d3;
reg [`TRFC_WIDTH-1:0]             ay4c69b;
reg                               sj90382;
wire                              db81c15;
wire                              doe0af;
reg                               ip7057b;
reg                               ks82bdc;
reg                               co15ee0;
wire                              bnaf700;
wire                              fn7b806;
wire                              shdc036;
reg                               jr37e3d;
reg                               vifeee9;
reg [`TRP_WIDTH - 1 : 0] tw86171;
reg [`TCKESR_WIDTH - 1 : 0] nrc7bbd;
reg [`TZQOPER_WIDTH - 1 : 0] db3ddee;
reg [`TWR_WIDTH - 1 : 0] uie0a0d;
reg [`TZQS_WIDTH - 1 : 0] me77bbb;
reg [`TMRD_WIDTH - 1 : 0] ribddd8;
reg [`TPD_WIDTH - 1 : 0] neeeec3;
reg [`TXPDLL_WIDTH - 1 : 0] yk7761b;
reg [`TCKE_WIDTH - 1 : 0] ohbb0d9;
reg dobdf06;
reg yxc366f;
reg pu1b37d;
reg end9bea;
reg vvcdf54;
reg wj6faa7;
reg su7d53d;
reg qgea9e8;
reg uvdc141;
reg [`RL_WIDTH - 1 : 0] wyf9fe;
reg tj3d063;
reg gb5b820;
reg lfa073f;
reg [`TRP_WIDTH - 1 : 0] jr32a0b;
reg [`TCKESR_WIDTH - 1 : 0] jc63d6e;
reg [`TZQOPER_WIDTH - 1 : 0] pu1eb73;
reg [`TZQS_WIDTH - 1 : 0] gof5b9b;
reg [`TMRD_WIDTH - 1 : 0] zmadcd9;
reg [`TPD_WIDTH - 1 : 0] pf6e6ca;
reg [`TXPDLL_WIDTH - 1 : 0] lq73656;
reg [`TWR_WIDTH + `RL_WIDTH + 1 : 0] ph9b2b3;
reg [`TWR_WIDTH + `RL_WIDTH + 1 : 0] end959e;
reg [8 : 0] xwcacf5;
reg [`TRFC_WIDTH - 1 : 0] go567aa;
reg ecb3d50;
reg [2047:0] ks1500e;
wire [33:0] pua8071;

localparam rt4038b = 34,hq1c5e = 32'hfdffd48b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


assign      db81c15  = (jc63d6e == nrc7bbd -1);
assign      doe0af = ( xwcacf5[8] == 1'b1 );
assign      bnaf700 = (pf6e6ca == neeeec3 -1) ;
assign      fn7b806 = (zmadcd9 == ribddd8 -1);
assign      shdc036 = uvdc141? ( lq73656 == ohbb0d9 -1) : ( ecb3d50 );



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      os5cbd0 <=  'b0;   else if (sj90382 )      os5cbd0 <=  'b0;   else if ( dobdf06)      os5cbd0 <=  jr32a0b + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      sj90382 <=  1'b0;   else if (jr32a0b == (tw86171 -2))      sj90382 <=  1'b1;   else      sj90382 <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      gb41702 <=  'b0;   else if (db81c15 )      gb41702 <=  'b0;   else if ( pu1b37d)      gb41702 <=  jc63d6e + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      xyb814 <=  'b0;   else if (ip7057b )      xyb814 <=  'b0;   else if ( vvcdf54)      xyb814 <=  pu1eb73 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ip7057b <=  1'b0;   else if (pu1eb73 == (db3ddee -2))      ip7057b <=  1'b1;   else      ip7057b <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      go5c0a2 <=  'b0;   else if (ks82bdc )      go5c0a2 <=  'b0;   else if ( wj6faa7)      go5c0a2 <=  gof5b9b + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ks82bdc <=  1'b0;   else if (gof5b9b == (me77bbb -2))      ks82bdc <=  1'b1;   else      ks82bdc <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      oh2889 <=  'b0;   else if (bnaf700 )      oh2889 <=  'b0;   else if ( qgea9e8)      oh2889 <=  pf6e6ca + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      mee0511 <=  'b0;   else if (fn7b806 )      mee0511 <=  'b0;   else if ( su7d53d)      mee0511 <=  zmadcd9 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      je1444c <=  'b0;   else if (shdc036 )      je1444c <=  'b0;   else if ( tj3d063)      je1444c <=  lq73656 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      jr37e3d <=  1'b0;   else if ( lq73656 == (yk7761b -2))      jr37e3d <=  1'b1;   else      jr37e3d <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      vk1131a <=  'b0;   else      vk1131a <=  wyf9fe + uie0a0d +2 ;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      hqa2263 <=  'b0;   else if ( co15ee0 )      hqa2263 <=  'b0;   else if ( yxc366f )      hqa2263 <=  ph9b2b3 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)    co15ee0    <=  1'b0;   else if ( ph9b2b3 == (end959e -2) )    co15ee0  <=  1'b1;   else    co15ee0    <=  1'b0;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      zm898d3 <=  'b0;   else if ( doe0af )      zm898d3 <=  'b0;   else if ( end9bea )      zm898d3 <=  xwcacf5 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      ay4c69b <=  'b0;   else if ( vifeee9 )      ay4c69b <=  'b0;
   else if ( (lfa073f && (go567aa == 'b0)) || gb5b820 || |go567aa)      ay4c69b <=  go567aa + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      vifeee9 <=  1'b0;
   else if ( go567aa == `TRFC -1 )       vifeee9 <=  1'b1;   else      vifeee9 <=  1'b0;
end

always@* begin tw86171<={param_trp>>1,pua8071[0]};nrc7bbd<={param_tckesr>>1,pua8071[1]};db3ddee<={param_tzqoper>>1,pua8071[2]};uie0a0d<={param_twr>>1,pua8071[3]};me77bbb<={param_tzqs>>1,pua8071[4]};ribddd8<={param_tmrd>>1,pua8071[5]};neeeec3<={param_tpd>>1,pua8071[6]};yk7761b<={param_txpdll>>1,pua8071[7]};ohbb0d9<={param_tcke>>1,pua8071[8]};dobdf06<=pua8071[9];yxc366f<=pua8071[10];pu1b37d<=pua8071[11];end9bea<=pua8071[12];vvcdf54<=pua8071[13];wj6faa7<=pua8071[14];su7d53d<=pua8071[15];qgea9e8<=pua8071[16];uvdc141<=pua8071[17];wyf9fe<={dm6351f>>1,pua8071[18]};tj3d063<=pua8071[19];gb5b820<=pua8071[20];lfa073f<=pua8071[21];jr32a0b<={os5cbd0>>1,pua8071[22]};jc63d6e<={gb41702>>1,pua8071[23]};pu1eb73<={xyb814>>1,pua8071[24]};gof5b9b<={go5c0a2>>1,pua8071[25]};zmadcd9<={mee0511>>1,pua8071[26]};pf6e6ca<={oh2889>>1,pua8071[27]};lq73656<={je1444c>>1,pua8071[28]};ph9b2b3<={hqa2263>>1,pua8071[29]};end959e<={vk1131a>>1,pua8071[30]};xwcacf5<={zm898d3>>1,pua8071[31]};go567aa<={ay4c69b>>1,pua8071[32]};ecb3d50<=pua8071[33];end
always@* begin ks1500e[2047]<=param_tckesr[0];ks1500e[2046]<=param_tzqoper[0];ks1500e[2044]<=param_twr[0];ks1500e[2040]<=param_tzqs[0];ks1500e[2032]<=param_tmrd[0];ks1500e[2017]<=param_tpd[0];ks1500e[1987]<=param_txpdll[0];ks1500e[1927]<=param_tcke[0];ks1500e[1865]<=xjf9c71;ks1500e[1859]<=jr37e3d;ks1500e[1806]<=alc6999;ks1500e[1682]<=qgf5a2b;ks1500e[1565]<=jpc8cbf;ks1500e[1488]<=zm898d3[0];ks1500e[1326]<=mee0511[0];ks1500e[1317]<=dm6351f[0];ks1500e[1210]<=je1444c[0];ks1500e[1189]<=gb41702[0];ks1500e[1172]<=cbae881;ks1500e[1082]<=cm465ff;ks1500e[1023]<=param_trp[0];ks1500e[932]<=suff38e;ks1500e[929]<=ay4c69b[0];ks1500e[744]<=vk1131a[0];ks1500e[663]<=go5c0a2[0];ks1500e[605]<=oh2889[0];ks1500e[594]<=os5cbd0[0];ks1500e[586]<=icce38f;ks1500e[466]<=phbfe71;ks1500e[372]<=hqa2263[0];ks1500e[331]<=xyb814[0];ks1500e[297]<=swac1a6;ks1500e[233]<=aa97fce;ks1500e[116]<=xl32ff9;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule































`timescale 1 ns / 100 ps
module db8b446 (

   clk,
   rst_n,
   gbd3f03,
   of60d31,
   bn698c,			
   ie34c66,
   oua6331,
   ym31988,
   ng8cc41,
   jc6620b,
   ks3105a,
   aa882d0,
   gb41680,			
   xyb404,
   nr5a023,
   ned011e,
   oh808f3,
   ng479d,
   cb23cea,      
   rg63244, 
   mre7a3e,
   fca206e,
   vx81b91,
   lf13a72 ,			   
   wy9d397 ,
   nre9cb9 ,
    

   cm72e75,		 
   ou973a8,			 
   qib9d40,
   eacea01,
   mr75008, 
   of7a6ff,
   jr9bfec,
   ayffb3b,
   pfecec5,  
   ay67a90,
   xl3d481,
   eaea40e,
   swac1a6,
   ouafa4,
   sh415f4,
   ps66136,
   jr84d93 			 
   );
input          clk;
input          rst_n;
input          gbd3f03;
input          of60d31;
input          bn698c;
input          ie34c66;
input          oua6331;
input          ym31988;
input          ng8cc41;
input          jc6620b;
input          ks3105a;
input          aa882d0;
input          gb41680;
input          xyb404;
input          nr5a023;
input          ned011e;
input          oh808f3;
input          ng479d;
input          cb23cea;
input          rg63244;
input          mre7a3e;
input          fca206e;
input          vx81b91;
input          lf13a72;
input          wy9d397 ;
input          nre9cb9;
output          swac1a6;
output          cm72e75;
output          ou973a8;
output          qib9d40;
output          eacea01;
input           mr75008;
output          of7a6ff;
output          jr9bfec;
output          ayffb3b;
output          pfecec5;
output          ay67a90;
output          xl3d481;
output          eaea40e;
output          ouafa4;
output          sh415f4;
output          ps66136;
output          jr84d93;

`define IDLESP     0

`define Q0SP       1

`define Q1SP       2

`define REFF       3

`define SRE_SP     4

`define SRX_SP     5

`define PDE_SP     6

`define PDX_SP     7

`define MRS_SP     8         

`define ZQCL_SP    9         

`define ZQCS_SP    10         
reg [11:0]              nre6fae, xl37d77;
reg                     ps66136, suf5df4;
reg                     jr84d93, me77d0d;
reg                     swac1a6, wl908be;
reg                     of7a6ff, bna071c;
reg                     jr9bfec, rv1c73e;
reg                     ayffb3b, ph1cfbf ;
reg                     pfecec5, aa3eff5;
reg                     ay67a90, hdbfd44;
reg                     xl3d481, gof5132;
reg                     eaea40e, ip44c82;
reg                     sj26415, hd320ac;
reg                     ir90567, ym82b3d;
reg                     jc7335d, xy99aeb;
reg                     rtcd75a, nr6bad6;
reg                     cm72e75, dz40075, ym3ae;
reg                     ou973a8;
reg                     qib9d40;
reg                     eacea01;
reg                     yzae0d5, gb706ac;
reg                     ww67fb0;
wire                    ouafa4;
wire                    sh415f4;
reg os72332;
reg hd39ff;
reg hd1cffe;
reg she7ff6;
reg je3ffb5;
reg wwffdaa;
reg xwfed50;
reg hbf6a82;
reg fpb5416;
reg phaa0b6;
reg nr505b6;
reg mg82db7;
reg vx16db8;
reg ymb6dc7;
reg ieb6e38;
reg lsb71c0;
reg ngb8e03;
reg qg726ee;
reg qv856e0;
reg rg79735;
reg iccb9aa;
reg co8d089;
reg wjed15e;
reg ui68448;
reg go46342;
reg [11 : 0] jp4f305;
reg [11 : 0] dm7982f;
reg gbcc17b;
reg cz60bdc;
reg ux1886e;
reg vi667f2;
reg ep33f92;
reg gd9fc94;
reg nefe4a5;
reg ipf252b;
reg ou9295d;
reg xl94ae9;
reg nta574e;
reg uk2ba77;
reg dm5d3b9;
reg rte9dcb;
reg rtdda15;
reg uved0ae;
reg cm68575;
reg ps42ba9;
reg qt5e840;
reg psf4205;
reg qva102a;
reg ux8155;
reg xwd0440;
reg [2047:0] ks1500e;
wire [49:0] pua8071;

`define IDLESP     0

`define Q0SP       1

`define Q1SP       2

`define REFF       3

`define SRE_SP     4

`define SRX_SP     5

`define PDE_SP     6

`define PDX_SP     7

`define MRS_SP     8         

`define ZQCL_SP    9         

`define ZQCS_SP    10         

localparam rt4038b = 50,hq1c5e = 32'hfdffd30b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`define IDLESP     0


`define Q0SP       1


`define Q1SP       2


`define REFF       3


`define SRE_SP     4


`define SRX_SP     5


`define PDE_SP     6


`define PDX_SP     7


`define MRS_SP     8         


`define ZQCL_SP    9         


`define ZQCS_SP    10         











`define IDLESP     0



`define Q0SP       1



`define Q1SP       2



`define REFF       3



`define SRE_SP     4



`define SRX_SP     5



`define PDE_SP     6



`define PDX_SP     7



`define MRS_SP     8         



`define ZQCL_SP    9         



`define ZQCS_SP    10         




assign  sh415f4 = ( ps66136 && (go46342 || eacea01 || qib9d40  || qt5e840))                        || (ou973a8 && rtdda15 );
assign  ouafa4 =( jr84d93 && (go46342 || eacea01 || qib9d40 || psf4205))                      || (ou973a8 && uved0ae );




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       eacea01          <=  1'b0 ;   else if ((ayffb3b || pfecec5)&& os72332)       eacea01          <=  1'b1 ;   else       eacea01          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       qib9d40          <=  1'b0 ;   else if ((of7a6ff || jr9bfec)&& os72332)       qib9d40          <=  1'b1 ;   else       qib9d40          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ou973a8          <=  1'b0 ;     else if (qv856e0 && os72332)       ou973a8          <=  1'b1 ;   else       ou973a8          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       cm72e75          <=  1'b0 ;       dz40075         <=  1'b0 ;       ym3ae         <=  1'b0 ;   end   else if ((swac1a6)&& os72332) begin       cm72e75          <=  1'b1 ;       dz40075         <=  1'b1 ;       ym3ae         <=  1'b1 ;   end   else begin       cm72e75          <=  1'b0 ;       dz40075         <=  1'b0 ;       ym3ae         <=  1'b0 ;
   end
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       yzae0d5          <=  1'b0 ;   else if (( ps66136 && (swac1a6 || ay67a90 || of7a6ff || jr9bfec ||        ayffb3b || pfecec5 || xl3d481 || eaea40e ))&& os72332)       yzae0d5          <=  1'b1 ;   else       yzae0d5          <=  1'b0 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       gb706ac          <=  1'b0 ;   else if (( jr84d93 && (swac1a6 || ay67a90 || of7a6ff || jr9bfec ||        ayffb3b || pfecec5 || xl3d481 || eaea40e )) && os72332)       gb706ac          <=  1'b1 ;   else       gb706ac          <=  1'b0 ;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       jc7335d          <=  1'b0 ;   else if (qva102a)       jc7335d          <=  1'b1 ;   else if (ux8155 || !os72332  || wjed15e)       jc7335d          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       xy99aeb          <=  1'b0 ;   else if (ux8155)       xy99aeb          <=  1'b1 ;   else if (qva102a || !os72332  || wjed15e)       xy99aeb          <=  1'b0 ;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       rtcd75a          <=  1'b0 ;       nr6bad6          <=  1'b0 ;   end   else begin       rtcd75a          <=  rtdda15 ;       nr6bad6          <=  uved0ae ;   end
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       ww67fb0  <= 1'b0;   else if (of7a6ff || ayffb3b || swac1a6 || ay67a90 || xl3d481 || eaea40e)       ww67fb0  <= 1'b1;   else if (co8d089 || ui68448 || wjed15e || qv856e0 || go46342)       ww67fb0  <= 1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      nre6fae           <=  12'b0 ;      ps66136              <=  1'b0;      jr84d93              <=  1'b0;      swac1a6        <=  1'b0;      of7a6ff   <=  1'b0;      jr9bfec   <=  1'b0;      ayffb3b     <=  1'b0;      pfecec5     <=  1'b0;      ay67a90             <=  1'b0;      xl3d481         <=  1'b0;      eaea40e        <=  1'b0;      sj26415       <=  1'b0;      ir90567        <=  1'b0;   end   else begin      nre6fae           <=  dm7982f ;      ps66136              <=  gbcc17b;      jr84d93              <=  cz60bdc;      swac1a6        <=  ux1886e;      of7a6ff    <=  vi667f2;      jr9bfec    <=  ep33f92;      ayffb3b      <=  gd9fc94;      pfecec5      <=  nefe4a5;      ay67a90             <=  ipf252b;      xl3d481         <=  ou9295d;      eaea40e        <=  xl94ae9;      sj26415       <=  uk2ba77;      ir90567        <=  rte9dcb ;   end
end





always @ (jp4f305 or fpb5416  or ngb8e03  or rtdda15 or uved0ae or          hd39ff or hd1cffe or she7ff6 or je3ffb5 or          wwffdaa or xwfed50 or hbf6a82  or qg726ee or cm68575 or          phaa0b6 or nr505b6 or mg82db7 or vx16db8 or          ymb6dc7 or ieb6e38 or lsb71c0 or dm5d3b9 or ps42ba9 or          nta574e  or xwd0440 or ps66136 or jr84d93 or swac1a6 or nta574e or dm5d3b9 or           os72332          ) begin
xl37d77 = 12'b0;
bna071c = 1'b0;
rv1c73e = 1'b0;
ph1cfbf = 1'b0;
aa3eff5 = 1'b0;
hdbfd44 = 1'b0;
gof5132 = 1'b0;
ip44c82 = 1'b0;
suf5df4= ps66136;
me77d0d= jr84d93;
wl908be = swac1a6;
hd320ac =nta574e;
ym82b3d = dm5d3b9;
case (1)        jp4f305[`IDLESP] :  begin                        suf5df4 = 1'b0;                        me77d0d = 1'b0;                        wl908be = 1'b0;                        bna071c = 1'b0;                        rv1c73e = 1'b0;                        ph1cfbf = 1'b0;                        aa3eff5 = 1'b0;                        hdbfd44 = 1'b0;                        gof5132 = 1'b0;                        ip44c82 = 1'b0;                        hd320ac = 1'b0;                        ym82b3d = 1'b0;
                        if ((fpb5416 || qg726ee) && !xwd0440 && os72332) begin                            xl37d77[`Q0SP] = 1'b1;                            suf5df4 = 1'b1;                        end                        else if ((ngb8e03 || qg726ee) && !xwd0440 && os72332) begin                            xl37d77[`Q1SP] = 1'b1;                            me77d0d = 1'b1;                        end                        else xl37d77[`IDLESP] = 1'b1;                end


   jp4f305[`Q0SP] :  begin                   if (os72332) begin                    if (ngb8e03 && rtdda15 && xwd0440)                       begin                        xl37d77[`Q1SP] = 1'b1;                        suf5df4 = 1'b0;                        me77d0d = 1'b1;                        hd320ac = 1'b0;                        ym82b3d = 1'b0;                    end                     else if ((rtdda15 || cm68575 )&& !xwd0440 && !qg726ee ) begin                        xl37d77[`IDLESP] = 1'b1;                        suf5df4 = 1'b0;                        me77d0d = 1'b1;                    end                    else if (fpb5416 ) begin                       if (hd39ff  && !xwd0440) begin                        xl37d77[`SRE_SP] = 1'b1;                        bna071c =1'b1;                        suf5df4 = 1'b1;                       end                       else if (hd1cffe && !nta574e) begin                        xl37d77[`SRX_SP] = 1'b1;                        rv1c73e =1'b1;                        suf5df4 = 1'b1;
                       end                       else if (she7ff6  && !xwd0440) begin                        xl37d77[`PDE_SP] = 1'b1;                        ph1cfbf =1'b1;                        suf5df4 = 1'b1;                       end                       else if (je3ffb5 && !dm5d3b9) begin                        xl37d77[`PDX_SP] = 1'b1;                        aa3eff5 =1'b1;                        suf5df4 = 1'b1;                       end                       else if (wwffdaa  && !xwd0440) begin                        xl37d77[`MRS_SP] = 1'b1;                        hdbfd44 =1'b1;                        suf5df4 = 1'b1;                       end                       else if (xwfed50  && !xwd0440) begin                        xl37d77[`ZQCL_SP] = 1'b1;                        gof5132 =1'b1;                        suf5df4 = 1'b1;                       end                       else if (hbf6a82  && !xwd0440) begin                        xl37d77[`ZQCS_SP] = 1'b1;                        ip44c82 =1'b1;                        suf5df4 = 1'b1;                       end                       else if (qg726ee  && !xwd0440) begin                        xl37d77[`REFF] = 1'b1;                        wl908be =1'b1;                        suf5df4 = 1'b1;                       end                       else xl37d77[`Q0SP] = 1'b1;                    end                      else if (qg726ee  && !xwd0440) begin                      xl37d77[`REFF] = 1'b1;                      wl908be =1'b1;                      suf5df4 = 1'b1;                    end                    else if (!qg726ee  && !xwd0440) begin                          xl37d77[`Q0SP] = 1'b1;                    end                    else begin                          xl37d77[`Q0SP] = 1'b1;                    end                 end 
                 else  begin                        xl37d77[`IDLESP] = 1'b1;                        hd320ac = 1'b0;                        ym82b3d = 1'b0;                 end                end
 jp4f305[`SRE_SP] :  begin                  if (ps66136) begin                     xl37d77[`Q0SP] = 1'b1;                     bna071c = 1'b0;                  end                  else  begin                     xl37d77[`Q1SP] = 1'b1;                     bna071c = 1'b0;                 end                end
jp4f305[`SRX_SP] :  begin                  if (ps66136) begin                     xl37d77[`Q0SP] = 1'b1;                     rv1c73e = 1'b0;                     hd320ac = 1'b1;                  end                  else  begin                     xl37d77[`Q1SP] = 1'b1;                     rv1c73e = 1'b0;                     hd320ac = 1'b1;                 end                end
 jp4f305[`PDE_SP] :  begin                  if (ps66136) begin                     xl37d77[`Q0SP] = 1'b1;                     ph1cfbf = 1'b0;                  end                  else  begin                     xl37d77[`Q1SP] = 1'b1;                     ph1cfbf = 1'b0;                 end                end
 jp4f305[`PDX_SP] :  begin                  if (ps66136) begin                     xl37d77[`Q0SP] = 1'b1;                     aa3eff5 = 1'b0;                     ym82b3d = 1'b1;                  end                  else  begin                     xl37d77[`Q1SP] = 1'b1;                     aa3eff5 = 1'b0;                     ym82b3d = 1'b1;                 end                end
 jp4f305[`MRS_SP] :  begin                  if (ps66136) begin                     xl37d77[`Q0SP] = 1'b1;                     hdbfd44 = 1'b0;                  end                  else  begin                     xl37d77[`Q1SP] = 1'b1;                     hdbfd44 = 1'b0;                 end                end
 jp4f305[`ZQCL_SP] :  begin                  if (ps66136) begin                     xl37d77[`Q0SP] = 1'b1;                     gof5132 = 1'b0;                  end                  else  begin                     xl37d77[`Q1SP] = 1'b1;                     gof5132 = 1'b0;                 end                end
  jp4f305[`ZQCS_SP] :  begin                  if (ps66136) begin                     xl37d77[`Q0SP] = 1'b1;                     ip44c82 = 1'b0;                  end                  else  begin                     xl37d77[`Q1SP] = 1'b1;                     ip44c82 = 1'b0;                 end                end  jp4f305[`REFF] :  begin                  if (ps66136) begin                     xl37d77[`Q0SP] = 1'b1;                     wl908be = 1'b0;                  end                  else  begin                     xl37d77[`Q1SP] = 1'b1;                     wl908be = 1'b0;                 end                end


   jp4f305[`Q1SP] :  begin                   if (os72332) begin                     if (fpb5416 && uved0ae && xwd0440)                       begin                        xl37d77[`Q0SP] = 1'b1;                        suf5df4 = 1'b1;                        me77d0d = 1'b0;                        hd320ac = 1'b0;                        ym82b3d = 1'b0;                    end                     else if ((uved0ae ||ps42ba9 )&& !xwd0440 && !qg726ee) begin                        xl37d77[`IDLESP] = 1'b1;                        suf5df4 = 1'b0;                        me77d0d = 1'b1;                    end                    else if (ngb8e03 ) begin                       if (phaa0b6  && !xwd0440) begin                        xl37d77[`SRE_SP] = 1'b1;                        bna071c =1'b1;                        me77d0d = 1'b1;                       end                       else if (nr505b6 && !nta574e) begin                        xl37d77[`SRX_SP] = 1'b1;                        rv1c73e =1'b1;                        me77d0d = 1'b1;                       end                       else if (mg82db7  && !xwd0440) begin                        xl37d77[`PDE_SP] = 1'b1;                        ph1cfbf =1'b1;                        me77d0d = 1'b1;                       end                       else if (vx16db8 && !dm5d3b9) begin                        xl37d77[`PDX_SP] = 1'b1;                        aa3eff5 =1'b1;                        me77d0d = 1'b1;                       end                       else if (ymb6dc7  && !xwd0440) begin                        xl37d77[`MRS_SP] = 1'b1;                        hdbfd44 =1'b1;                        me77d0d = 1'b1;                       end                       else if (ieb6e38  && !xwd0440) begin                        xl37d77[`ZQCL_SP] = 1'b1;                        gof5132 =1'b1;                        me77d0d = 1'b1;                       end                       else if (lsb71c0  && !xwd0440) begin                        xl37d77[`ZQCS_SP] = 1'b1;                        ip44c82 =1'b1;                        me77d0d = 1'b1;                       end                        else if (qg726ee  && !xwd0440) begin                        xl37d77[`REFF] = 1'b1;                        wl908be =1'b1;                        me77d0d = 1'b1;                       end                       else xl37d77[`Q1SP] = 1'b1;                    end                    else if (qg726ee  && !xwd0440) begin                        xl37d77[`REFF] = 1'b1;                        wl908be =1'b1;                        me77d0d = 1'b1;                    end                    else if (!qg726ee  && !xwd0440) begin                          xl37d77[`Q1SP] = 1'b1;                    end                    else xl37d77[`Q1SP] = 1'b1;                 end                 else begin                        xl37d77[`IDLESP] = 1'b1;                        hd320ac = 1'b0;                        ym82b3d = 1'b0;                     end                end   default : begin                   xl37d77[`IDLESP] = 1'b1;             end
endcase
end
always@* begin os72332<=pua8071[0];hd39ff<=pua8071[1];hd1cffe<=pua8071[2];she7ff6<=pua8071[3];je3ffb5<=pua8071[4];wwffdaa<=pua8071[5];xwfed50<=pua8071[6];hbf6a82<=pua8071[7];fpb5416<=pua8071[8];phaa0b6<=pua8071[9];nr505b6<=pua8071[10];mg82db7<=pua8071[11];vx16db8<=pua8071[12];ymb6dc7<=pua8071[13];ieb6e38<=pua8071[14];lsb71c0<=pua8071[15];ngb8e03<=pua8071[16];qg726ee<=pua8071[17];qv856e0<=pua8071[18];rg79735<=pua8071[19];iccb9aa<=pua8071[20];co8d089<=pua8071[21];wjed15e<=pua8071[22];ui68448<=pua8071[23];go46342<=pua8071[24];jp4f305<={nre6fae>>1,pua8071[25]};dm7982f<={xl37d77>>1,pua8071[26]};gbcc17b<=pua8071[27];cz60bdc<=pua8071[28];ux1886e<=pua8071[29];vi667f2<=pua8071[30];ep33f92<=pua8071[31];gd9fc94<=pua8071[32];nefe4a5<=pua8071[33];ipf252b<=pua8071[34];ou9295d<=pua8071[35];xl94ae9<=pua8071[36];nta574e<=pua8071[37];uk2ba77<=pua8071[38];dm5d3b9<=pua8071[39];rte9dcb<=pua8071[40];rtdda15<=pua8071[41];uved0ae<=pua8071[42];cm68575<=pua8071[43];ps42ba9<=pua8071[44];qt5e840<=pua8071[45];psf4205<=pua8071[46];qva102a<=pua8071[47];ux8155<=pua8071[48];xwd0440<=pua8071[49];end
always@* begin ks1500e[2047]<=of60d31;ks1500e[2046]<=bn698c;ks1500e[2044]<=ie34c66;ks1500e[2040]<=oua6331;ks1500e[2032]<=ym31988;ks1500e[2016]<=ng8cc41;ks1500e[1985]<=jc6620b;ks1500e[1922]<=ks3105a;ks1500e[1796]<=aa882d0;ks1500e[1732]<=wl908be;ks1500e[1600]<=nr6bad6;ks1500e[1572]<=ph1cfbf;ks1500e[1544]<=gb41680;ks1500e[1457]<=suf5df4;ks1500e[1417]<=bna071c;ks1500e[1302]<=lf13a72;ks1500e[1164]<=sj26415;ks1500e[1153]<=dz40075;ks1500e[1124]<=ym82b3d;ks1500e[1115]<=nre9cb9;ks1500e[1105]<=rg63244;ks1500e[1096]<=aa3eff5;ks1500e[1041]<=xyb404;ks1500e[1038]<=gb706ac;ks1500e[1023]<=gbd3f03;ks1500e[866]<=me77d0d;ks1500e[800]<=rtcd75a;ks1500e[786]<=rv1c73e;ks1500e[728]<=xl37d77[0];ks1500e[651]<=vx81b91;ks1500e[582]<=ip44c82;ks1500e[562]<=ir90567;ks1500e[557]<=wy9d397;ks1500e[552]<=cb23cea;ks1500e[519]<=yzae0d5;ks1500e[400]<=xy99aeb;ks1500e[364]<=nre6fae[0];ks1500e[325]<=fca206e;ks1500e[291]<=gof5132;ks1500e[281]<=hd320ac;ks1500e[276]<=ng479d;ks1500e[259]<=ym3ae;ks1500e[200]<=jc7335d;ks1500e[182]<=mr75008;ks1500e[162]<=mre7a3e;ks1500e[145]<=hdbfd44;ks1500e[138]<=oh808f3;ks1500e[69]<=ned011e;ks1500e[34]<=nr5a023;ks1500e[29]<=ww67fb0;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule   





























`timescale 1 ns / 100 ps
module ddr3_sdram_core (

  clk,
  rst_n,
  param_trcd,
  param_trp,
  param_twr,
  param_tras,
  param_trc,
  param_trrd,
  param_trtp,
  param_twtr,
  param_tckesr,
  param_tzqoper,
  param_tzqs,
  param_tmrd,
  param_tpd,
  param_txpdll,
  param_tcke,
  param_txpr,
  param_tmod,
  param_tzqinit,
  addr_init_0,
  addr_init_1,
  addr_init_2,
  addr_init_3,
  wl_phase_dly_cnt,

  phy_init_act, 
  wl_act,
  wl_done,                             
 

  init_start,
  cmd,
  addr,
  cmd_burst_cnt,
  cmd_valid,
  ofly_burst_len,
  
`ifdef EXT_AUTO_REF
  ext_auto_ref,                      
  ext_auto_ref_ack,                   
`endif 
  

  trefi,                           
  ar_burst_cnt, 
  

  datain,
  dmsel,
  DataRdy2Data,
  

  pio_read,
  cal_bc4,
  ddr_cs_n,
  ddr_ras_n,
  ddr_cas_n,
  ddr_we_n,
  ddr_ba,
  ddr_addr,
  ddr_cke,
  datain_valid, 


  cmd_rdy,                             
  init_done,   
  

  ddr_dq_out,
  ddr_wr_lat_odd,
  dqs_out,
  dqs_out_en,
  dqs_out_en_erly,
  dq_out_en,
  ddr_dqm,
  
  mem_odt_out,
  cntl_odt_out ,
  rd_odd,   
`ifdef DIR_SREF_EXT
  sref_ent_cmd,
  sref_ext_cmd,
`endif
  mirror_on

)
 ;
input                           rst_n;
input                           clk;
input [`TRCD_WIDTH-1:0]         param_trcd;
input [`TRP_WIDTH-1:0]          param_trp;
input [`TWR_WIDTH-1:0]          param_twr;
input [`TRAS_WIDTH-1:0]         param_tras;
input [`TRC_WIDTH-1:0]          param_trc;
input [`TRRD_WIDTH-1:0]         param_trrd;
input [`TRTP_WIDTH-1:0]         param_trtp;
input [`TWTR_WIDTH-1:0]         param_twtr;
input [`TCKESR_WIDTH-1:0]       param_tckesr ;
input [`TZQOPER_WIDTH-1:0]      param_tzqoper ;
input [`TZQS_WIDTH-1:0]         param_tzqs;
input [`TMRD_WIDTH-1:0]         param_tmrd;
input [`TPD_WIDTH-1:0]          param_tpd;
input [`TXPDLL_WIDTH-1:0]       param_txpdll;
input [`TCKE_WIDTH-1:0]         param_tcke;
input [`TXPR_WIDTH-1:0]         param_txpr;
input [`TMOD_WIDTH-1:0]         param_tmod;
input [`TZQINIT_WIDTH-1:0]      param_tzqinit;
input [15:0]                    addr_init_0;
input [15:0]                    addr_init_1;
input [15:0]                    addr_init_2;
input [15:0]                    addr_init_3;
input [7:0]                     wl_phase_dly_cnt;
input                           init_start;
input                           phy_init_act;
input                           wl_act;
input                           wl_done;
input [`DSIZE -1:0]             datain;
input [`USER_DM -1:0]           dmsel;
input [1:0]        DataRdy2Data;
input [3:0]                     cmd;
input [`ADDR_WIDTH-1:0]         addr;
input [4:0]                     cmd_burst_cnt;
input                           cmd_valid;
input                           ofly_burst_len;
input [15:0]                    trefi;
input [2:0]                     ar_burst_cnt;
output                          pio_read;
output                          cal_bc4;
output [`CS_WIDTH -1:0]         ddr_cs_n;
output                          ddr_ras_n;
output                          ddr_cas_n;
output                          ddr_we_n;
output [`BANK_WIDTH-1:0]        ddr_ba;

`ifdef ROW_WIDTH_12
output [`ROW_WIDTH:0]           ddr_addr ;

`else
output [`ROW_WIDTH-1:0]         ddr_addr ;

`endif
output                          datain_valid;
output [`DSIZE -1:0]            ddr_dq_out;
output                          ddr_wr_lat_odd;
output [`DQS_WIDTH-1:0]         dqs_out;
output                          dqs_out_en;
output                          dqs_out_en_erly;
output                          dq_out_en;
output [`USER_DM -1:0]          ddr_dqm;
output                          ddr_cke;

`ifdef EXT_AUTO_REF
input                           ext_auto_ref;
output                          ext_auto_ref_ack;

`endif
output                          cmd_rdy;
output                          init_done;
output [`CS_WIDTH-1 : 0]        mem_odt_out;
output                          cntl_odt_out;
output                          rd_odd;
output                          mirror_on;

`ifdef DIR_SREF_EXT
output                          sref_ent_cmd;
output                          sref_ext_cmd;

`endif
wire                           datain_valid;
wire                           bn94dd;
reg                            je8c162;
wire [4:0]                     dm6996a;
wire [`COL_WIDTH -1:0]         yx65a91;
wire [`BANK_WIDTH -1 :0]       db2d48c;
wire [`ROW_WIDTH -1:0]         yx6a467;
wire [4:0]                     tw99971;
wire [`COL_WIDTH -1:0]         mr65c55;
wire [`BANK_WIDTH -1 :0]       ie2e2ac;
wire [`ROW_WIDTH -1:0]         jp71560;
wire [`AL_WIDTH-1:0]           su5627f;
wire [`CL_WIDTH-1:0]           yzb13f8;
wire                           je89fc4;
wire                           uv7f11e;
wire [`CWL_WIDTH-1:0]          fn4fe23;
wire [`DQS_WIDTH-1:0]          sjb4b30;
wire [15:0]                    ux85d13;
wire [`TRCD_WIDTH-1:0]         param_trcd;
wire [`TRP_WIDTH-1:0]          param_trp;
wire [`TWR_WIDTH-1:0]          param_twr;
wire [`TRAS_WIDTH-1:0]         param_tras;
wire [`TRC_WIDTH-1:0]          param_trc;
wire [`TRTP_WIDTH-1:0]         param_trtp;
wire [`TWTR_WIDTH-1:0]         param_twtr;
wire [`TCKESR_WIDTH-1:0]       param_tckesr ;
wire [`TZQOPER_WIDTH-1:0]      param_tzqoper ;
wire [`TZQS_WIDTH-1:0]         param_tzqs;
wire [`TMRD_WIDTH-1:0]         param_tmrd;
wire [`TPD_WIDTH-1:0]          param_tpd;
wire [`TXPDLL_WIDTH-1:0]       param_txpdll;
wire [`TCKE_WIDTH-1:0]         param_tcke;
wire [`TXPR_WIDTH-1:0]         param_txpr;
wire [`TMOD_WIDTH-1:0]         param_tmod;
wire [`TZQINIT_WIDTH-1:0]      param_tzqinit;
wire [15:0]                    addr_init_0;
wire [15:0]                    addr_init_1;
wire [15:0]                    addr_init_2;
wire [15:0]                    addr_init_3;
wire [`DSIZE -1:0]             datain;
wire [`USER_DM -1:0]           dmsel;
wire [1:0]               DataRdy2Data;
wire [`CS_WIDTH -1:0]          ddr_cs_n;
wire [`CS_WIDTH -1:0]          ng2a041;
wire [`CS_WIDTH -1:0]          su4cb52;
wire [`CS_WIDTH -1:0]          kdccb8a;
wire [`BANK_WIDTH-1:0]         ddr_ba;

`ifdef ROW_WIDTH_12
wire [`ROW_WIDTH:0]          ddr_addr ;

`else
wire [`ROW_WIDTH-1:0]          ddr_addr ;

`endif
wire [`DSIZE -1:0]             ddr_dq_out;
wire [`DQS_WIDTH-1:0]          dqs_out;
wire [`USER_DM -1:0]           ddr_dqm;
wire                           ddr_wr_lat_odd;
wire                           cal_bc4;
wire [3:0]                     cmd;
wire [`ADDR_WIDTH-1:0]         addr;
wire [4:0]                     cmd_burst_cnt;
wire [15:0]                    trefi;
wire [2:0]                     ar_burst_cnt;
wire [2:0]                     ldf9017;
wire [3:0]                     ph6bc5;
wire                           oh2cc2e;
wire                           rt4f946;
wire [`CS_WIDTH-1:0]           lq7ca36;
wire [`CS_WIDTH-1:0]           qge51b3;
wire                           mgb6966;
wire   [`CS_WIDTH-1 : 0]       mem_odt_out;
wire                           cntl_odt_out;
wire                           sh415f4;
wire                           ouafa4;
wire                           qgf5a2b;
wire                           dzecb27;
wire                           wj4e5ce;
reg                            init_done;
wire                           pio_read;
wire                           ep7b2c;
wire                           jr3d964;
wire                           rg6cbe1;
wire [2:0]                     fa5233c;
wire [2:0]                     ux8ab06;
wire                           ph1c75e;
wire                           jpe3af7;
wire                           mirror_on;

`ifdef DIR_SREF_EXT
wire                           sref_ent_cmd;
wire                           sref_ext_cmd;

`endif
wire                           mee5408;
wire                           xj5020a;
reg  [4:0]                     ec98a04;
wire                           dq_out_en;
wire                           zz28102;

`ifdef DIR_SREF_EXT

`endif

`ifdef EXT_AUTO_REF

`endif
reg [`TRRD_WIDTH - 1 : 0] uk5068;
reg [7 : 0] ba40bf;
reg ww43e4e;
reg mtd03d;
reg sj7b0f;
reg gbc3768;
reg kq786ed;
reg ba1bb45;
reg do9cbcd;
reg rgfea8a;
reg [4 : 0] dz5f4db;
reg [`COL_WIDTH - 1 : 0] kdd36f1;
reg [`BANK_WIDTH - 1 : 0] nt9b78c;
reg [`ROW_WIDTH - 1 : 0] medbc66;
reg [4 : 0] me43680;
reg [`COL_WIDTH - 1 : 0] psda00a;
reg [`BANK_WIDTH - 1 : 0] dmd0052;
reg [`ROW_WIDTH - 1 : 0] mt80293;
reg [`AL_WIDTH - 1 : 0] qtc9e60;
reg [`CL_WIDTH - 1 : 0] tj3d6f0;
reg fafe5db;
reg wjf2edb;
reg [`CWL_WIDTH - 1 : 0] of5bc32;
reg [`DQS_WIDTH - 1 : 0] hod545e;
reg [15 : 0] mg8897a;
reg [`CS_WIDTH - 1 : 0] fad555b;
reg [`CS_WIDTH - 1 : 0] kqfa6de;
reg [`CS_WIDTH - 1 : 0] xy1b401;
reg [2 : 0] gdab6ff;
reg [3 : 0] sh5b7fc;
reg ww681ec;
reg rgdff21;
reg [`CS_WIDTH - 1 : 0] wwff90b;
reg [`CS_WIDTH - 1 : 0] zxfc858;
reg en41a07;
reg cz5ea31;
reg gof518d;
reg uvdc141;
reg jpc765a;
reg bldda2b;
reg fnc78c9;
reg qv3c64e;
reg rt5ae69;
reg [2 : 0] vx6b65;
reg [2 : 0] hbd281c;
reg jpcd3f1;
reg zk69f8e;
reg dze3274;
reg rv193a6;
reg [4 : 0] jcf1cb7;
reg zz8e5bb;
reg [2047:0] ks1500e;
wire [50:0] pua8071;

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef EXT_AUTO_REF

`endif

`ifdef DIR_SREF_EXT

`endif

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef DIR_SREF_EXT

`endif



`ifdef DIR_SREF_EXT

`endif


`ifdef EXT_AUTO_REF

`endif


localparam rt4038b = 51,hq1c5e = 32'hfdffca8b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef EXT_AUTO_REF


`endif


`ifdef DIR_SREF_EXT


`endif


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef DIR_SREF_EXT


`endif


`ifdef DIR_SREF_EXT


`endif


`ifdef EXT_AUTO_REF


`endif


`ifdef ROW_WIDTH_12



`else



`endif



`ifdef EXT_AUTO_REF



`endif




`ifdef DIR_SREF_EXT



`endif





`ifdef ROW_WIDTH_12



`else



`endif



`ifdef DIR_SREF_EXT



`endif

assign dq_out_en = ~zz8e5bb;
assign datain_valid = do9cbcd;

always @ (posedge clk or negedge rst_n) begin   if (!rst_n) begin      init_done            <= 1'b0;   end   else begin      init_done            <= bldda2b;   end
end

cmfaebb uk829ea(
    .clk(clk ) ,
    .rst_n(rst_n ),    .jp55589(jp55589 ),    .jraac4f(jraac4f ),    .qi9d556(qi9d556 ),    .oseaab1(oseaab1 ),    .ls1e755(ls1e755 ),    .zxf3aaa(zxf3aaa ),    .fpb5d20(fpb5d20),    .sjae907(sjae907),    .end96c9(end96c9 ),    .ba8cf16(ba8cf16 ),
    .nr744e9(nr744e9 ),    .zma274e(zma274e ),    .uxa41ef(sh5b7fc),    .pf7483d(swac1a6),    .cm72e75(cm72e75),    .wy9d397(wy9d397),
    .en5b269(en5b269 ),    .ux3c599(ux3c599 ),    .wjc9a65(wjc9a65 ),    .jr16665(jr16665 ),    .uvd934c(uvd934c ),    .ipe2ccc(ipe2ccc ),    .wwcb64d(wwcb64d),    .qg678b3(qg678b3),    .iea6b8a(iea6b8a ),    .hq35c51(hq35c51)
);

tw861d9 osd1a21(       .clk                 (clk ),    .rst_n              (rst_n ),    .phy_init_act       (ww43e4e ),
      .end96c9          (end96c9 ),
   .wwcb64d         (wwcb64d ),
   .en5b269            (en5b269 ),
   .uvd934c             (uvd934c ),
   .wjc9a65              (wjc9a65 ),
   .dm4d32d          (dm4d32d ),
   .dm6996a         (dz5f4db ),
   .su4cb52              (kqfa6de ),
   .yx65a91            (kdd36f1 ),   .db2d48c             (nt9b78c ),   .yx6a467            (medbc66 ),
   .fa5233c             (vx6b65),   .zz919e2         (zz919e2),
      .ba8cf16          (ba8cf16),
   .qg678b3         (qg678b3 ),
   .ux3c599            (ux3c599 ),
   .ipe2ccc             (ipe2ccc ),
   .jr16665              (jr16665 ),
   .cob332e          (cob332e ),
   .tw99971         (me43680 ),
   .kdccb8a              (xy1b401 ),
   .mr65c55            (psda00a ),   .ie2e2ac             (dmd0052 ),   .jp71560            (mt80293 ),   .ux8ab06             (hbd281c),   .ld55834         (ld55834),   .swac1a6            (swac1a6 ),   .of60d31      (of60d31 ),   .bn698c      (bn698c ),
   .ie34c66        (ie34c66 ),   .oua6331        (oua6331 ),   .ym31988               (ym31988 ),   .ng8cc41           (ng8cc41 ),   .jc6620b          (jc6620b ),   .ks3105a        (ks3105a ),   .aa882d0      (aa882d0 ),   .gb41680      (gb41680 ),
   .xyb404        (xyb404 ),   .nr5a023        (nr5a023 ),   .ned011e               (ned011e ),   .oh808f3           (oh808f3 ),   .ng479d          (ng479d ),   .cb23cea        (cb23cea ),   .ls1e755         (ls1e755 ),   .zxf3aaa         (zxf3aaa ),   .qi9d556          (qi9d556 ),   .oseaab1          (oseaab1 ),   .jp55589        (jp55589 ),   .jraac4f        (jraac4f ),   .su5627f                  (qtc9e60 ),   .yzb13f8                  (tj3d6f0 ),   .je89fc4              (fafe5db),   .fn4fe23                 (of5bc32 ),   .uv7f11e             (wjf2edb ),   .mrf88f5               (mg107c5 ),   .ykc47ad               (oh20f8 ),   .mt23d68               (wj6fc06 ),   .ng1eb45               (nt2df80 ),   .qgf5a2b                (uvdc141 ),   .addr_init_0         (addr_init_0 ),   .addr_init_1         (addr_init_1 ),   .addr_init_2         (addr_init_2 ),   .addr_init_3         (addr_init_3 ),   .ldf9017            (gdab6ff ),   .param_trcd          (param_trcd ),   .param_trp           (param_trp ),   .param_twr           (param_twr ),   .param_tras          (param_tras ),   .param_trc           (param_trc ),   .param_trrd          (uk5068 ),   .param_trtp          (param_trtp ),   .param_twtr          (param_twtr ),   .param_tckesr        (param_tckesr ) ,   .param_tzqoper       (param_tzqoper ) ,   .param_tzqs          (param_tzqs ),   .param_tmrd          (param_tmrd ),   .param_tpd           (param_tpd ),   .param_txpdll        (param_txpdll ),   .param_tcke          (param_tcke ),   .param_txpr          (param_txpr ),   .param_tmod          (param_tmod ),   .param_tzqinit       (param_tzqinit ) ,

   .datain              (datain ),   .dmsel               (dmsel ),   .DataRdy2Data        (DataRdy2Data ),
   .mgb6966         (en41a07 ),   .sjb4b30          (hod545e ),   .wl_act              (mtd03d ),   .oh2cc2e          (ww681ec ),   .dm66174        (rgdff21 ),   .pu30ba2               (wwff90b ),   .ux85d13         (mg8897a ),   .wl_done             (sj7b0f ),

   .nr744e9           (nr744e9 ),
   .zma274e           (zma274e ),   .lf13a72           (lf13a72 ),
   .wy9d397       (wy9d397 ),   .nre9cb9           (nre9cb9),   .wj4e5ce       (wj4e5ce ),   .cm72e75       (cm72e75 ),
   .ou973a8            (ou973a8 ),
   .qib9d40           (qib9d40 ),   .eacea01         ( ),   .mr75008             (mr75008 ),   .ria8044             (ria8044 ),   .ddr_cs_n            (ddr_cs_n ),   .ddr_ras_n           (ddr_ras_n ),   .ddr_cas_n           (ddr_cas_n ),   .ddr_we_n            (ddr_we_n ),   .ddr_ba              (ddr_ba ),   .ddr_addr            (ddr_addr ),   .ddr_cke             (ddr_cke ),   .datain_valid        (bn94dd ),

   .wyacaa4         (wyacaa4 ),

   .ddr_dq_out          (ddr_dq_out ),   .dqs_out             (dqs_out ),   .dqs_out_en          (dqs_out_en),   .dqs_out_en_erly     (dqs_out_en_erly),   .dq_out_en           (zz28102),   .ddr_dqm             (ddr_dqm ),

   .pio_read            (pio_read ),
   .ay5ca81             (ay5ca81 ),   .ng2a041            (ng2a041),   .mee5408              (mee5408 ),   .xj5020a              (xj5020a ),   .cal_bc4             (cal_bc4 ),   .ir82be             (ir82be ),   .sh415f4         (sh415f4),   .ouafa4         (ouafa4),

`ifdef DIR_SREF_EXT
   .sref_ent_cmd        (sref_ent_cmd),   .sref_ext_cmd        (sref_ext_cmd),

`endif
   .ne57d20              ( ) ,   .ohbe903              ( ) ,   .lqf481c               ( ) ,   .oha40e3               ( ) ,   .do2071d              (ddr_wr_lat_odd ),   .rd_odd              (rd_odd),   .ph1c75e             (ph1c75e),   .jpe3af7             (jpe3af7),   .mirror_on           (mirror_on)
);


qtd3872 uv6032b(        .clk                (clk ),
    .rst_n              (rst_n ),

        .cmd                (cmd ),    .addr               (addr ),    .cmd_burst_cnt      (cmd_burst_cnt ),    .cmd_valid          (kq786ed ),    .init_start         (gbc3768 ),    .ofly_burst_len     (ba1bb45 ),
        .wj4e5ce      (bldda2b ),    .wy9d397      (hq35c51 ),    .cm72e75      (iea6b8a ),    .nr744e9          (nr744e9 ),    .zma274e          (zma274e ),    .sh415f4        (cz5ea31 ),    .ouafa4        (gof518d ),    .ou973a8           (ou973a8 ),    .mr75008            (mr75008 ),    .qib9d40          (qib9d40 ),    .lf13a72          (lf13a72 ),    .yxf7d30         (ria8044 ),    .nre9cb9           (nre9cb9),


`ifdef EXT_AUTO_REF
    .ext_auto_ref       (ext_auto_ref ),    .ext_auto_ref_ack   (ext_auto_ref_ack ),


`endif

        .trefi             (trefi ),    .ar_burst_cnt      (ar_burst_cnt ),    .vx848c3         (addr_init_0 ),    .qi2461f         (addr_init_1 ),    .ux230f9         (addr_init_2 ),
        .cmd_rdy            (cmd_rdy ),
        .mrc3e65         ( ),    .sw1f32c        (yzb13f8 ),    .dzf9960    (je89fc4 ),    .gbccb07 (uv7f11e ),    .gb6583d         (su5627f ),    .oh2c1ec     (fn4fe23 ),    .ip60f65       (qgf5a2b ),    .ep7b2c            (ep7b2c ),    .jr3d964        (jr3d964 ),    .dzecb27           (dzecb27 ),    .ldf9017           (ldf9017 ),        .end96c9         (end96c9 ),    .wwcb64d        (fpb5d20 ),    .en5b269           (jp55589 ),    .uvd934c            (ls1e755 ),    .wjc9a65             (qi9d556 ),    .of60d31     (of60d31 ),    .bn698c     (bn698c ),    .ie34c66       (ie34c66 ),    .oua6331       (oua6331 ),    .uvc397a      (ng8cc41 ),    .hd1cbd4     (jc6620b ),    .yx6a467           (yx6a467 ),    .yx65a91           (yx65a91 ),    .db2d48c            (db2d48c ),    .su4cb52             (su4cb52 ),    .ym31988              (ym31988 ),    .ks3105a       (ks3105a ),    .zz919e2        (zz919e2 ),    .pu14010          (pu14010 ),    .dm4d32d         (dm4d32d ),    .dm6996a        (dm6996a ),    .oh20f8              (oh20f8 ),    .mg107c5              (mg107c5 ),    .fa5233c            (fa5233c),
        .ba8cf16         (ba8cf16 ),    .qg678b3        (sjae907 ),    .ux3c599           (jraac4f ),    .ipe2ccc            (zxf3aaa ),    .jr16665             (oseaab1 ),    .aa882d0     (aa882d0 ),    .gb41680     (gb41680 ),    .xyb404       (xyb404 ),    .nr5a023       (nr5a023 ),    .zzafd1e      (oh808f3 ),    .th7e8f7     (ng479d ),    .jp71560           (jp71560 ),    .mr65c55           (mr65c55 ),    .ie2e2ac            (ie2e2ac ),    .kdccb8a             (kdccb8a ),    .ned011e              (ned011e ),    .cb23cea       (cb23cea ),    .ld55834        (ld55834 ),    .jr8b96f          (jr8b96f ),    .cob332e         (cob332e ),    .tw99971        (tw99971 ),    .nt2df80              (nt2df80 ),    .wj6fc06              (wj6fc06 ),    .ux8ab06            (ux8ab06),
    .suf01af           ( ),    .oh80d78           ( ),        .ph6bc5     (ph6bc5  ),    .swac1a6           (swac1a6)

);
assign  oh2cc2e     = 1'b0;
assign  mgb6966    = 1'b0;
assign  ux85d13    = 16'h0;
assign  lq7ca36      = {`CS_WIDTH{1'b0}};
assign  qge51b3     = {`CS_WIDTH{1'b0}};
assign  sjb4b30     = {`DQS_WIDTH{1'b0}};
gbcc42c hdbf051(        .sclk               (clk),
    .rst_n              (rst_n),    .init_done          (bldda2b),    .wl_act             (mtd03d),    .ld6402c         (zxfc858),    .ep7b2c            (fnc78c9 ),    .jr3d964        (qv3c64e ),    .mee5408             (dze3274 ),    .xj5020a             (rv193a6 ),    .ay6764c            (jpcd3f1 ),    .ir82be            (zk69f8e ),    .gbd9301             (tj3d6f0 ),    .ofc980d             (qtc9e60 ),    .qg4c06d             (fad555b ),    .en60368       (ay5ca81 ),    .ba1b45           (uvdc141 ),        .mem_odt_out        (mem_odt_out ),    .cntl_odt_out       (cntl_odt_out )    );

always@* begin uk5068<={param_trrd>>1,pua8071[0]};ba40bf<={wl_phase_dly_cnt>>1,pua8071[1]};ww43e4e<=pua8071[2];mtd03d<=pua8071[3];sj7b0f<=pua8071[4];gbc3768<=pua8071[5];kq786ed<=pua8071[6];ba1bb45<=pua8071[7];do9cbcd<=pua8071[8];rgfea8a<=pua8071[9];dz5f4db<={dm6996a>>1,pua8071[10]};kdd36f1<={yx65a91>>1,pua8071[11]};nt9b78c<={db2d48c>>1,pua8071[12]};medbc66<={yx6a467>>1,pua8071[13]};me43680<={tw99971>>1,pua8071[14]};psda00a<={mr65c55>>1,pua8071[15]};dmd0052<={ie2e2ac>>1,pua8071[16]};mt80293<={jp71560>>1,pua8071[17]};qtc9e60<={su5627f>>1,pua8071[18]};tj3d6f0<={yzb13f8>>1,pua8071[19]};fafe5db<=pua8071[20];wjf2edb<=pua8071[21];of5bc32<={fn4fe23>>1,pua8071[22]};hod545e<={sjb4b30>>1,pua8071[23]};mg8897a<={ux85d13>>1,pua8071[24]};fad555b<={ng2a041>>1,pua8071[25]};kqfa6de<={su4cb52>>1,pua8071[26]};xy1b401<={kdccb8a>>1,pua8071[27]};gdab6ff<={ldf9017>>1,pua8071[28]};sh5b7fc<={ph6bc5>>1,pua8071[29]};ww681ec<=pua8071[30];rgdff21<=pua8071[31];wwff90b<={lq7ca36>>1,pua8071[32]};zxfc858<={qge51b3>>1,pua8071[33]};en41a07<=pua8071[34];cz5ea31<=pua8071[35];gof518d<=pua8071[36];uvdc141<=pua8071[37];jpc765a<=pua8071[38];bldda2b<=pua8071[39];fnc78c9<=pua8071[40];qv3c64e<=pua8071[41];rt5ae69<=pua8071[42];vx6b65<={fa5233c>>1,pua8071[43]};hbd281c<={ux8ab06>>1,pua8071[44]};jpcd3f1<=pua8071[45];zk69f8e<=pua8071[46];dze3274<=pua8071[47];rv193a6<=pua8071[48];jcf1cb7<={ec98a04>>1,pua8071[49]};zz8e5bb<=pua8071[50];end
always@* begin ks1500e[2047]<=wl_phase_dly_cnt[0];ks1500e[2046]<=phy_init_act;ks1500e[2044]<=wl_act;ks1500e[2040]<=wl_done;ks1500e[2032]<=init_start;ks1500e[2017]<=cmd_valid;ks1500e[1987]<=ofly_burst_len;ks1500e[1926]<=bn94dd;ks1500e[1805]<=sh415f4;ks1500e[1804]<=je8c162;ks1500e[1803]<=sjb4b30[0];ks1500e[1761]<=lq7ca36[0];ks1500e[1668]<=rg6cbe1;ks1500e[1562]<=ouafa4;ks1500e[1560]<=dm6996a[0];ks1500e[1558]<=ux85d13[0];ks1500e[1550]<=ie2e2ac[0];ks1500e[1475]<=qge51b3[0];ks1500e[1464]<=oh2cc2e;ks1500e[1288]<=fa5233c[0];ks1500e[1076]<=qgf5a2b;ks1500e[1072]<=yx65a91[0];ks1500e[1069]<=ng2a041[0];ks1500e[1056]<=ph1c75e;ks1500e[1052]<=jp71560[0];ks1500e[1028]<=zz28102;ks1500e[1023]<=param_trrd[0];ks1500e[902]<=mgb6966;ks1500e[901]<=fn4fe23[0];ks1500e[880]<=rt4f946;ks1500e[834]<=jr3d964;ks1500e[775]<=mr65c55[0];ks1500e[732]<=ph6bc5[0];ks1500e[528]<=ux8ab06[0];ks1500e[514]<=ec98a04[0];ks1500e[450]<=uv7f11e;ks1500e[417]<=ep7b2c;ks1500e[387]<=tw99971[0];ks1500e[366]<=ldf9017[0];ks1500e[257]<=xj5020a;ks1500e[225]<=je89fc4;ks1500e[208]<=wj4e5ce;ks1500e[193]<=yx6a467[0];ks1500e[183]<=kdccb8a[0];ks1500e[128]<=mee5408;ks1500e[112]<=yzb13f8[0];ks1500e[104]<=dzecb27;ks1500e[96]<=db2d48c[0];ks1500e[91]<=su4cb52[0];ks1500e[64]<=jpe3af7;ks1500e[56]<=su5627f[0];end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule






`timescale 1 ns / 100 ps
module kf8055 
  (
   rst_n,
   sclk,
   eclk,
   zx55990,
   aaacc86,
   ddrclkpol,
   fp32182,
   sj90c17,
   xy860bc,
   hq305e3,
   co82f1a,
   sj178d0,
   aabc685
   );
input                               rst_n;
input                    sclk;
input                    eclk;
input  [`DQS_WIDTH -1 :0]           zx55990;
input  [`DQS_WIDTH -1 :0]           aaacc86;
input  [`DQS_WIDTH -1 :0]           ddrclkpol;
input  [`DQS_WIDTH -1 :0]           fp32182;
input  [`DQS_WIDTH -1 :0]           sj90c17;
input  [`DQS_WIDTH -1 :0]           xy860bc;
input  [`DSIZE     -1 :0]           hq305e3;
output [`DSIZE     -1 :0]           co82f1a;
output [`DATA_WIDTH-1 :0]           sj178d0;
inout  [`DATA_WIDTH-1 :0]           aabc685;
wire   [`DATA_WIDTH-1 :0]           sj178d0;
wire   [`DSIZE     -1 :0]           co82f1a;
wire   [`DQS_WIDTH -1 :0]           gd80bc9;
wire   [`DQS_WIDTH -1 :0]           aa5e4d;
wire   [`DQS_WIDTH -1 :0]           fc2f269;
wire   [`DQS_WIDTH -1 :0]           jc7934a;
wire   [`DQS_WIDTH -1 :0]           yxc9a52;
wire   [`DQS_WIDTH -1 :0]           tu4d295;

`ifdef SIM 
wire  [(`DSIZE)-1:0]    by694aa;
reg   [(`DSIZE)-1:0]    jp4a553;
wire  [`DQS_WIDTH -1:0] dm52a9f;

`ifndef DV_DLY_BITS

`else

`ifdef DATA_SIZE_8

`endif

`ifdef DATA_SIZE_16

`endif

`ifdef DATA_SIZE_24

`endif

`ifdef DATA_SIZE_32

`endif

`ifdef DATA_SIZE_40

`endif

`ifdef DATA_SIZE_48

`endif

`ifdef DATA_SIZE_56

`endif

`ifdef DATA_SIZE_64

`endif

`ifdef DATA_SIZE_72

`endif

`endif // ifndef DV_DLY_BITS

`endif // ifdef SIM

`ifdef RDIMM

`ifdef x4

`ifdef DATA_SIZE_72

`endif

`ifdef DATA_SIZE_64

`endif

`ifdef DATA_SIZE_56

`endif

`ifdef DATA_SIZE_48

`endif

`ifdef DATA_SIZE_40

`endif

`ifdef DATA_SIZE_32

`endif

`ifdef DATA_SIZE_24

`endif

`ifdef DATA_SIZE_16

`endif

`ifdef DATA_SIZE_8

`endif

`else

`endif //x4

`else

`endif //RDIMM
genvar mt954fb;

`ifdef SIM

`else

`endif
reg hdaa7dd;
reg [`DQS_WIDTH - 1 : 0] yk53eee;
reg [`DQS_WIDTH - 1 : 0] yz9f771;
reg [`DQS_WIDTH - 1 : 0] xwfbb8c;
reg [`DQS_WIDTH - 1 : 0] hbddc62;
reg [`DQS_WIDTH - 1 : 0] rgee316;
reg [`DQS_WIDTH - 1 : 0] dz718b2;
reg [`DSIZE - 1 : 0] ba8c597;
reg [`DQS_WIDTH - 1 : 0] me62cba;
reg [`DQS_WIDTH - 1 : 0] ph165d1;
reg [`DQS_WIDTH - 1 : 0] zmb2e8e;
reg [`DQS_WIDTH - 1 : 0] qi97472;
reg [`DQS_WIDTH - 1 : 0] jrba390;
reg [`DQS_WIDTH - 1 : 0] ayd1c87;
reg [2047:0] ks1500e;
wire [13:0] pua8071;

`ifdef SIM 

`ifndef DV_DLY_BITS

`else

`ifdef DATA_SIZE_8

`endif

`ifdef DATA_SIZE_16

`endif

`ifdef DATA_SIZE_24

`endif

`ifdef DATA_SIZE_32

`endif

`ifdef DATA_SIZE_40

`endif

`ifdef DATA_SIZE_48

`endif

`ifdef DATA_SIZE_56

`endif

`ifdef DATA_SIZE_64

`endif

`ifdef DATA_SIZE_72

`endif

`endif // ifndef DV_DLY_BITS

`endif // ifdef SIM

`ifdef RDIMM

`ifdef x4

`ifdef DATA_SIZE_72

`endif

`ifdef DATA_SIZE_64

`endif

`ifdef DATA_SIZE_56

`endif

`ifdef DATA_SIZE_48

`endif

`ifdef DATA_SIZE_40

`endif

`ifdef DATA_SIZE_32

`endif

`ifdef DATA_SIZE_24

`endif

`ifdef DATA_SIZE_16

`endif

`ifdef DATA_SIZE_8

`endif

`else

`endif //x4

`else

`endif //RDIMM


`ifdef SIM

`else

`endif

localparam rt4038b = 14,hq1c5e = 32'hfdffe30b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef SIM 


`ifndef DV_DLY_BITS


`else


`ifdef DATA_SIZE_8


`endif


`ifdef DATA_SIZE_16


`endif


`ifdef DATA_SIZE_24


`endif


`ifdef DATA_SIZE_32


`endif


`ifdef DATA_SIZE_40


`endif


`ifdef DATA_SIZE_48


`endif


`ifdef DATA_SIZE_56


`endif


`ifdef DATA_SIZE_64


`endif


`ifdef DATA_SIZE_72


`endif


`endif // ifndef DV_DLY_BITS


`endif // ifdef SIM


`ifdef RDIMM


`ifdef x4


`ifdef DATA_SIZE_72


`endif


`ifdef DATA_SIZE_64


`endif


`ifdef DATA_SIZE_56


`endif


`ifdef DATA_SIZE_48


`endif


`ifdef DATA_SIZE_40


`endif


`ifdef DATA_SIZE_32


`endif


`ifdef DATA_SIZE_24


`endif


`ifdef DATA_SIZE_16


`endif


`ifdef DATA_SIZE_8


`endif


`else


`endif //x4


`else


`endif //RDIMM


`ifdef SIM


`else


`endif

















                                                









`ifdef SIM 





`ifndef DV_DLY_BITS

assign co82f1a = by694aa;

`else


always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      jp4a553 <= {`DSIZE{1'b0}};   else      jp4a553 <= by694aa;
end assign dm52a9f = `DV_DLY_BITS;


`ifdef DATA_SIZE_8
 assign co82f1a = dm52a9f ? jp4a553 : by694aa ;


`endif




`ifdef DATA_SIZE_16
 assign co82f1a = {             dm52a9f[1] ? jp4a553[63:32] : by694aa[63:32],             dm52a9f[0] ? jp4a553[31: 0] : by694aa[31: 0] };

`endif




`ifdef DATA_SIZE_24
 assign co82f1a = {             dm52a9f[2] ? jp4a553[ 95:64] : by694aa[ 95:64],             dm52a9f[1] ? jp4a553[ 63:32] : by694aa[ 63:32],             dm52a9f[0] ? jp4a553[ 31: 0] : by694aa[ 31: 0] };

`endif




`ifdef DATA_SIZE_32
 assign co82f1a = {             dm52a9f[3] ? jp4a553[127:96] : by694aa[127:96],             dm52a9f[2] ? jp4a553[ 95:64] : by694aa[ 95:64],             dm52a9f[1] ? jp4a553[ 63:32] : by694aa[ 63:32],             dm52a9f[0] ? jp4a553[ 31: 0] : by694aa[ 31: 0] };

`endif




`ifdef DATA_SIZE_40
 assign co82f1a = {             dm52a9f[4] ? jp4a553[159:128] : by694aa[159:128],             dm52a9f[3] ? jp4a553[127: 96] : by694aa[127: 96],             dm52a9f[2] ? jp4a553[ 95: 64] : by694aa[ 95: 64],             dm52a9f[1] ? jp4a553[ 63: 32] : by694aa[ 63: 32],             dm52a9f[0] ? jp4a553[ 31:  0] : by694aa[ 31:  0] };

`endif




`ifdef DATA_SIZE_48
 assign co82f1a = {             dm52a9f[5] ? jp4a553[191:160] : by694aa[191:160],             dm52a9f[4] ? jp4a553[159:128] : by694aa[159:128],             dm52a9f[3] ? jp4a553[127: 96] : by694aa[127: 96],             dm52a9f[2] ? jp4a553[ 95: 64] : by694aa[ 95: 64],             dm52a9f[1] ? jp4a553[ 63: 32] : by694aa[ 63: 32],             dm52a9f[0] ? jp4a553[ 31:  0] : by694aa[ 31:  0] };

`endif




`ifdef DATA_SIZE_56
 assign co82f1a = {             dm52a9f[6] ? jp4a553[223:192] : by694aa[223:192],             dm52a9f[5] ? jp4a553[191:160] : by694aa[191:160],             dm52a9f[4] ? jp4a553[159:128] : by694aa[159:128],             dm52a9f[3] ? jp4a553[127: 96] : by694aa[127: 96],             dm52a9f[2] ? jp4a553[ 95: 64] : by694aa[ 95: 64],             dm52a9f[1] ? jp4a553[ 63: 32] : by694aa[ 63: 32],             dm52a9f[0] ? jp4a553[ 31:  0] : by694aa[ 31:  0] };

`endif





`ifdef DATA_SIZE_64
 assign co82f1a = {             dm52a9f[7] ? jp4a553[255:224] : by694aa[255:224],             dm52a9f[6] ? jp4a553[223:192] : by694aa[223:192],             dm52a9f[5] ? jp4a553[191:160] : by694aa[191:160],             dm52a9f[4] ? jp4a553[159:128] : by694aa[159:128],             dm52a9f[3] ? jp4a553[127: 96] : by694aa[127: 96],             dm52a9f[2] ? jp4a553[ 95: 64] : by694aa[ 95: 64],             dm52a9f[1] ? jp4a553[ 63: 32] : by694aa[ 63: 32],             dm52a9f[0] ? jp4a553[ 31:  0] : by694aa[ 31:  0] };

`endif




`ifdef DATA_SIZE_72
 assign co82f1a = {             dm52a9f[8] ? jp4a553[287:256] : by694aa[287:256],             dm52a9f[7] ? jp4a553[255:224] : by694aa[255:224],             dm52a9f[6] ? jp4a553[223:192] : by694aa[223:192],             dm52a9f[5] ? jp4a553[191:160] : by694aa[191:160],             dm52a9f[4] ? jp4a553[159:128] : by694aa[159:128],             dm52a9f[3] ? jp4a553[127: 96] : by694aa[127: 96],             dm52a9f[2] ? jp4a553[ 95: 64] : by694aa[ 95: 64],             dm52a9f[1] ? jp4a553[ 63: 32] : by694aa[ 63: 32],             dm52a9f[0] ? jp4a553[ 31:  0] : by694aa[ 31:  0] };

`endif





`endif // ifndef DV_DLY_BITS



`endif // ifdef SIM









`ifdef RDIMM



`ifdef x4




`ifdef DATA_SIZE_72
      assign gd80bc9    ={rgee316[17],rgee316[8],rgee316[16],rgee316[7],                             rgee316[15],rgee316[6],rgee316[14],rgee316[5],                             rgee316[13],rgee316[4],rgee316[12],rgee316[3],                             rgee316[11],rgee316[2],rgee316[10],rgee316[1],                             rgee316[ 9],rgee316[0]};      assign aa5e4d    ={dz718b2[17],dz718b2[8],dz718b2[16],dz718b2[7],                             dz718b2[15],dz718b2[6],dz718b2[14],dz718b2[5],                             dz718b2[13],dz718b2[4],dz718b2[12],dz718b2[3],                             dz718b2[11],dz718b2[2],dz718b2[10],dz718b2[1],                             dz718b2[ 9],dz718b2[0]};      assign tu4d295  ={yk53eee[17],yk53eee[8],yk53eee[16],yk53eee[7],                             yk53eee[15],yk53eee[6],yk53eee[14],yk53eee[5],                             yk53eee[13],yk53eee[4],yk53eee[12],yk53eee[3],                             yk53eee[11],yk53eee[2],yk53eee[10],yk53eee[1],                             yk53eee[ 9],yk53eee[0]};      assign fc2f269    ={yz9f771[17],yz9f771[8],yz9f771[16],yz9f771[7],                             yz9f771[15],yz9f771[6],yz9f771[14],yz9f771[5],                             yz9f771[13],yz9f771[4],yz9f771[12],yz9f771[3],                             yz9f771[11],yz9f771[2],yz9f771[10],yz9f771[1],                             yz9f771[ 9],yz9f771[0]};      assign jc7934a ={xwfbb8c[17],xwfbb8c[8],xwfbb8c[16],xwfbb8c[7],                             xwfbb8c[15],xwfbb8c[6],xwfbb8c[14],xwfbb8c[5],                             xwfbb8c[13],xwfbb8c[4],xwfbb8c[12],xwfbb8c[3],                             xwfbb8c[11],xwfbb8c[2],xwfbb8c[10],xwfbb8c[1],                             xwfbb8c[ 9],xwfbb8c[0]};      assign yxc9a52  ={hbddc62[17],hbddc62[8],hbddc62[16],hbddc62[7],                             hbddc62[15],hbddc62[6],hbddc62[14],hbddc62[5],                             hbddc62[13],hbddc62[4],hbddc62[12],hbddc62[3],                             hbddc62[11],hbddc62[2],hbddc62[10],hbddc62[1],                             hbddc62[ 9],hbddc62[0]};


`endif




`ifdef DATA_SIZE_64
      assign gd80bc9    ={rgee316[15],rgee316[7],rgee316[14],rgee316[6],                             rgee316[13],rgee316[5],rgee316[12],rgee316[4],                             rgee316[11],rgee316[3],rgee316[10],rgee316[2],                             rgee316[ 9],rgee316[1],rgee316[ 8],rgee316[0]};      assign aa5e4d    ={dz718b2[15],dz718b2[7],dz718b2[14],dz718b2[6],                             dz718b2[13],dz718b2[5],dz718b2[12],dz718b2[4],                             dz718b2[11],dz718b2[3],dz718b2[10],dz718b2[2],                             dz718b2[ 9],dz718b2[1],dz718b2[ 8],dz718b2[0]};      assign tu4d295  ={yk53eee[15],yk53eee[7],yk53eee[14],yk53eee[6],                             yk53eee[13],yk53eee[5],yk53eee[12],yk53eee[4],                             yk53eee[11],yk53eee[3],yk53eee[10],yk53eee[2],                             yk53eee[ 9],yk53eee[1],yk53eee[ 8],yk53eee[0]};      assign fc2f269    ={yz9f771[15],yz9f771[7],yz9f771[14],yz9f771[6],                             yz9f771[13],yz9f771[5],yz9f771[12],yz9f771[4],                             yz9f771[11],yz9f771[3],yz9f771[10],yz9f771[2],                             yz9f771[ 9],yz9f771[1],yz9f771[ 8],yz9f771[0]};      assign jc7934a ={xwfbb8c[15],xwfbb8c[7],xwfbb8c[14],xwfbb8c[6],                             xwfbb8c[13],xwfbb8c[5],xwfbb8c[12],xwfbb8c[4],                             xwfbb8c[11],xwfbb8c[3],xwfbb8c[10],xwfbb8c[2],                             xwfbb8c[ 9],xwfbb8c[1],xwfbb8c[ 8],xwfbb8c[0]};      assign yxc9a52  ={hbddc62[15],hbddc62[7],hbddc62[14],hbddc62[6],                             hbddc62[13],hbddc62[5],hbddc62[12],hbddc62[4],                             hbddc62[11],hbddc62[3],hbddc62[10],hbddc62[2],                             hbddc62[ 9],hbddc62[1],hbddc62[ 8],hbddc62[0]};


`endif




`ifdef DATA_SIZE_56
      assign gd80bc9    ={rgee316[13],rgee316[6],rgee316[12],rgee316[5],                             rgee316[11],rgee316[4],rgee316[10],rgee316[3],                             rgee316[ 9],rgee316[2],rgee316[ 8],rgee316[1],                             rgee316[ 7],rgee316[0]};      assign aa5e4d    ={dz718b2[13],dz718b2[6],dz718b2[12],dz718b2[5],                             dz718b2[11],dz718b2[4],dz718b2[10],dz718b2[3],                             dz718b2[ 9],dz718b2[2],dz718b2[ 8],dz718b2[1],                             dz718b2[ 7],dz718b2[0]};      assign tu4d295  ={yk53eee[13],yk53eee[6],yk53eee[12],yk53eee[5],                             yk53eee[11],yk53eee[4],yk53eee[10],yk53eee[3],                             yk53eee[ 9],yk53eee[2],yk53eee[ 8],yk53eee[1],                             yk53eee[ 7],yk53eee[0]};      assign fc2f269    ={yz9f771[13],yz9f771[6],yz9f771[12],yz9f771[5],                             yz9f771[11],yz9f771[4],yz9f771[10],yz9f771[3],                             yz9f771[ 9],yz9f771[2],yz9f771[ 8],yz9f771[1],                             yz9f771[ 7],yz9f771[0]};      assign jc7934a ={xwfbb8c[13],xwfbb8c[6],xwfbb8c[12],xwfbb8c[5],                             xwfbb8c[11],xwfbb8c[4],xwfbb8c[10],xwfbb8c[3],                             xwfbb8c[ 9],xwfbb8c[2],xwfbb8c[ 8],xwfbb8c[1],                             xwfbb8c[ 7],xwfbb8c[0]};      assign yxc9a52  ={hbddc62[13],hbddc62[6],hbddc62[12],hbddc62[5],                             hbddc62[11],hbddc62[4],hbddc62[10],hbddc62[3],                             hbddc62[ 9],hbddc62[2],hbddc62[ 8],hbddc62[1],                             hbddc62[ 7],hbddc62[0]};


`endif




`ifdef DATA_SIZE_48
      assign gd80bc9    ={rgee316[11],rgee316[5],rgee316[10],rgee316[4],                             rgee316[ 9],rgee316[3],rgee316[ 8],rgee316[2],                             rgee316[ 7],rgee316[1],rgee316[ 6],rgee316[0]};      assign aa5e4d    ={dz718b2[11],dz718b2[5],dz718b2[10],dz718b2[4],                             dz718b2[ 9],dz718b2[3],dz718b2[ 8],dz718b2[2],                             dz718b2[ 7],dz718b2[1],dz718b2[ 6],dz718b2[0]};      assign tu4d295  ={yk53eee[11],yk53eee[5],yk53eee[10],yk53eee[4],                             yk53eee[ 9],yk53eee[3],yk53eee[ 8],yk53eee[2],                             yk53eee[ 7],yk53eee[1],yk53eee[ 6],yk53eee[0]};      assign fc2f269    ={yz9f771[11],yz9f771[5],yz9f771[10],yz9f771[4],                             yz9f771[ 9],yz9f771[3],yz9f771[ 8],yz9f771[2],                             yz9f771[ 7],yz9f771[1],yz9f771[ 6],yz9f771[0]};      assign jc7934a ={xwfbb8c[11],xwfbb8c[5],xwfbb8c[10],xwfbb8c[4],                             xwfbb8c[ 9],xwfbb8c[3],xwfbb8c[ 8],xwfbb8c[2],                             xwfbb8c[ 7],xwfbb8c[1],xwfbb8c[ 6],xwfbb8c[0]};      assign yxc9a52  ={hbddc62[11],hbddc62[5],hbddc62[10],hbddc62[4],                             hbddc62[ 9],hbddc62[3],hbddc62[ 8],hbddc62[2],                             hbddc62[ 7],hbddc62[1],hbddc62[ 6],hbddc62[0]};


`endif




`ifdef DATA_SIZE_40
      assign gd80bc9    ={rgee316[9],rgee316[4],rgee316[8],rgee316[3],                             rgee316[7],rgee316[2],rgee316[6],rgee316[1],                             rgee316[5],rgee316[0]};      assign aa5e4d    ={dz718b2[9],dz718b2[4],dz718b2[8],dz718b2[3],                             dz718b2[7],dz718b2[2],dz718b2[6],dz718b2[1],                             dz718b2[5],dz718b2[0]};      assign tu4d295  ={yk53eee[9],yk53eee[4],yk53eee[8],yk53eee[3],                             yk53eee[7],yk53eee[2],yk53eee[6],yk53eee[1],                             yk53eee[5],yk53eee[0]};      assign fc2f269    ={yz9f771[9],yz9f771[4],yz9f771[8],yz9f771[3],                             yz9f771[7],yz9f771[2],yz9f771[6],yz9f771[1],                             yz9f771[5],yz9f771[0]};      assign jc7934a ={xwfbb8c[9],xwfbb8c[4],xwfbb8c[8],xwfbb8c[3],                             xwfbb8c[7],xwfbb8c[2],xwfbb8c[6],xwfbb8c[1],                             xwfbb8c[5],xwfbb8c[0]};      assign yxc9a52  ={hbddc62[9],hbddc62[4],hbddc62[8],hbddc62[3],                             hbddc62[7],hbddc62[2],hbddc62[6],hbddc62[1],                             hbddc62[5],hbddc62[0]};


`endif




`ifdef DATA_SIZE_32
      assign gd80bc9    ={rgee316[7],rgee316[3],rgee316[6],rgee316[2],                             rgee316[5],rgee316[1],rgee316[4],rgee316[0]};      assign aa5e4d    ={dz718b2[7],dz718b2[3],dz718b2[6],dz718b2[2],                             dz718b2[5],dz718b2[1],dz718b2[4],dz718b2[0]};      assign tu4d295  ={yk53eee[7],yk53eee[3],yk53eee[6],yk53eee[2],                             yk53eee[5],yk53eee[1],yk53eee[4],yk53eee[0]};      assign fc2f269    ={yz9f771[7],yz9f771[3],yz9f771[6],yz9f771[2],                             yz9f771[5],yz9f771[1],yz9f771[4],yz9f771[0]};      assign jc7934a ={xwfbb8c[7],xwfbb8c[3],xwfbb8c[6],xwfbb8c[2],                             xwfbb8c[5],xwfbb8c[1],xwfbb8c[4],xwfbb8c[0]};      assign yxc9a52  ={hbddc62[7],hbddc62[3],hbddc62[6],hbddc62[2],                             hbddc62[5],hbddc62[1],hbddc62[4],hbddc62[0]};


`endif




`ifdef DATA_SIZE_24
      assign gd80bc9    ={rgee316[5],rgee316[2],rgee316[4],rgee316[1],                             rgee316[3],rgee316[0]};      assign aa5e4d    ={dz718b2[5],dz718b2[2],dz718b2[4],dz718b2[1],                             dz718b2[3],dz718b2[0]};      assign tu4d295  ={yk53eee[5],yk53eee[2],yk53eee[4],yk53eee[1],                             yk53eee[3],yk53eee[0]};      assign fc2f269    ={yz9f771[5],yz9f771[2],yz9f771[4],yz9f771[1],                             yz9f771[3],yz9f771[0]};      assign jc7934a ={xwfbb8c[5],xwfbb8c[2],xwfbb8c[4],xwfbb8c[1],                             xwfbb8c[3],xwfbb8c[0]};      assign yxc9a52  ={hbddc62[5],hbddc62[2],hbddc62[4],hbddc62[1],                             hbddc62[3],hbddc62[0]};


`endif





`ifdef DATA_SIZE_16
      assign gd80bc9    ={rgee316[3],rgee316[1],rgee316[2],rgee316[0]};      assign aa5e4d    ={dz718b2[3],dz718b2[1],dz718b2[2],dz718b2[0]};      assign tu4d295  ={yk53eee[3],yk53eee[1],yk53eee[2],yk53eee[0]};      assign fc2f269    ={yz9f771[3],yz9f771[1],yz9f771[2],yz9f771[0]};      assign jc7934a ={xwfbb8c[3],xwfbb8c[1],xwfbb8c[2],xwfbb8c[0]};      assign yxc9a52  ={hbddc62[3],hbddc62[1],hbddc62[2],hbddc62[0]};


`endif




`ifdef DATA_SIZE_8
      assign gd80bc9    = rgee316;      assign aa5e4d    = dz718b2;      assign tu4d295  = yk53eee;      assign fc2f269    = yz9f771;      assign jc7934a = xwfbb8c;      assign yxc9a52  = hbddc62;


`endif




`else
    assign gd80bc9    = rgee316;    assign aa5e4d    = dz718b2;    assign tu4d295  = yk53eee;    assign fc2f269    = yz9f771;    assign jc7934a = xwfbb8c;    assign yxc9a52  = hbddc62;


`endif //x4



`else
    assign gd80bc9    = rgee316;    assign aa5e4d    = dz718b2;    assign tu4d295  = yk53eee;    assign fc2f269    = yz9f771;    assign jc7934a = xwfbb8c;    assign yxc9a52  = hbddc62;

`endif //RDIMM

   generate     for (mt954fb=0; mt954fb<`DATA_WIDTH; mt954fb=mt954fb+1)       begin: hoeb1f2  zk58f92 zk58f92             (.sclk       (sclk),              .eclk       (hdaa7dd),              .zx55990   (ayd1c87[mt954fb/`DQSW]),              .aaacc86     (zmb2e8e[mt954fb/`DQSW]),              .ddrclkpol  (qi97472[mt954fb/`DQSW]),              .sj90c17     (me62cba[mt954fb/`DQSW]),              .xy860bc     (ph165d1[mt954fb/`DQSW]),              .fp32182   (jrba390[mt954fb/`DQSW]),              .su467fe (ba8c597[mt954fb]),              .wwffc65 (ba8c597[mt954fb+  `DATA_WIDTH]),              .xy8ca1b (ba8c597[mt954fb+2*`DATA_WIDTH]),              .os436ef (ba8c597[mt954fb+3*`DATA_WIDTH]),

`ifdef SIM
              .lddde51  (by694aa[4*mt954fb]),              .tuca382  (by694aa[4*mt954fb+1]),              .of704e7  (by694aa[4*mt954fb+2]),              .ls9cf0f  (by694aa[4*mt954fb+3]),

`else
              .lddde51  (co82f1a[4*mt954fb]),              .tuca382  (co82f1a[4*mt954fb+1]),              .of704e7  (co82f1a[4*mt954fb+2]),              .ls9cf0f  (co82f1a[4*mt954fb+3]),

`endif
              .sj178d0      (sj178d0[mt954fb]),              .aabc685         (aabc685[mt954fb])     );       end   endgenerate
always@* begin hdaa7dd<=pua8071[0];yk53eee<={zx55990>>1,pua8071[1]};yz9f771<={aaacc86>>1,pua8071[2]};xwfbb8c<={ddrclkpol>>1,pua8071[3]};hbddc62<={fp32182>>1,pua8071[4]};rgee316<={sj90c17>>1,pua8071[5]};dz718b2<={xy860bc>>1,pua8071[6]};ba8c597<={hq305e3>>1,pua8071[7]};me62cba<={gd80bc9>>1,pua8071[8]};ph165d1<={aa5e4d>>1,pua8071[9]};zmb2e8e<={fc2f269>>1,pua8071[10]};qi97472<={jc7934a>>1,pua8071[11]};jrba390<={yxc9a52>>1,pua8071[12]};ayd1c87<={tu4d295>>1,pua8071[13]};end
always@* begin ks1500e[2047]<=zx55990[0];ks1500e[2046]<=aaacc86[0];ks1500e[2044]<=ddrclkpol[0];ks1500e[2040]<=fp32182[0];ks1500e[2032]<=sj90c17[0];ks1500e[2016]<=xy860bc[0];ks1500e[1985]<=hq305e3[0];ks1500e[1922]<=gd80bc9[0];ks1500e[1796]<=aa5e4d[0];ks1500e[1544]<=fc2f269[0];ks1500e[1040]<=jc7934a[0];ks1500e[1023]<=eclk;ks1500e[65]<=tu4d295[0];ks1500e[32]<=yxc9a52[0];end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule
`timescale 1 ns / 100 ps
module zk58f92 (
                 sclk,
                 eclk,
                 zx55990,
                 aaacc86,
                 ddrclkpol,
                 sj90c17,
                 xy860bc,
                 fp32182,
                 su467fe,
                 wwffc65,
                 xy8ca1b,
                 os436ef,
                 lddde51,
                 tuca382,
                 of704e7,
                 ls9cf0f,
                 sj178d0,
                 aabc685
                 );
input                 sclk;
input                 eclk;
input                 zx55990;
input                 aaacc86;
input                 ddrclkpol;
input                 sj90c17;
input                 xy860bc;
input                 su467fe;
input                 wwffc65;
input                 xy8ca1b;
input                 os436ef;
input                 fp32182;
output                lddde51;
output                tuca382;
output                of704e7;
output                ls9cf0f;
output                sj178d0;
inout                 aabc685;
wire                  ald62ae;
wire                  kfb1574;
wire                  sj178d0;
wire                  xj55d24;
wire                  mtae926;

`ifdef ECP3_SP2

`else

`endif

`ifdef ECP3_SP2

`else

`endif
reg hdaa7dd;
reg yk53eee;
reg yz9f771;
reg xwfbb8c;
reg rgee316;
reg dz718b2;
reg hbddc62;
reg goe0afa;
reg mg57d0;
reg sw2be80;
reg pf5f401;
reg cmfa00e;
reg xwd0071;
reg qv8038b;
reg zm1c5c;
reg [2047:0] ks1500e;
wire [14:0] pua8071;

`ifdef ECP3_SP2


`else


`endif

`ifdef ECP3_SP2


`else


`endif


localparam rt4038b = 15,hq1c5e = 32'hfdffd28b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ECP3_SP2


`else


`endif


`ifdef ECP3_SP2


`else


`endif

















`ifdef ECP3_SP2

IDDRX2D ne475b9 (.D(sj178d0), .ECLKDQSR(zx55990), .SCLK(sclk), .DDRLAT(aaacc86), .ECLK(eclk),            .DDRCLKPOL(ddrclkpol), .QA0(lddde51), .QB0(tuca382), .QA1(of704e7),            .QB1(ls9cf0f));

`else

IDDRX2D ne475b9 (.D(sj178d0), .ECLKDQSR(zx55990), .SCLK(sclk), .DDRLAT(aaacc86), .ECLK(eclk),            .DDRCLKPOL(ddrclkpol), .QA0(lddde51), .QB0(tuca382), .QA1(of704e7),            .QB1(ls9cf0f))  ;

`endif









`ifdef ECP3_SP2

defparam ldecb43.ISI_CAL = "BYPASS" ;
ODDRX2D ldecb43 (.SCLK(sclk), .DA0(su467fe), .DB0(wwffc65), .DA1(xy8ca1b),            .DB1(os436ef), .DQCLK0(sj90c17), .DQCLK1(xy860bc), .Q(ald62ae));

`else

defparam ldecb43.ISI_CAL = "BYPASS" ;
ODDRX2D ldecb43 (.SCLK(sclk), .DA0(su467fe), .DB0(wwffc65), .DA1(xy8ca1b),            .DB1(os436ef), .DQCLK0(sj90c17), .DQCLK1(xy860bc), .Q(ald62ae)) ;

`endif




assign #`DQ_TRC_DEL kfb1574   = cmfa00e;
assign #`DQ_TRC_DEL mtae926 = hbddc62;
assign #`DQ_TRC_DEL sj178d0      = qv8038b;
BB aa88f0d (.I(kfb1574), .T(mtae926), .O(xj55d24), .B(aabc685))  ;
always@* begin hdaa7dd<=pua8071[0];yk53eee<=pua8071[1];yz9f771<=pua8071[2];xwfbb8c<=pua8071[3];rgee316<=pua8071[4];dz718b2<=pua8071[5];hbddc62<=pua8071[6];goe0afa<=pua8071[7];mg57d0<=pua8071[8];sw2be80<=pua8071[9];pf5f401<=pua8071[10];cmfa00e<=pua8071[11];xwd0071<=pua8071[12];qv8038b<=pua8071[13];zm1c5c<=pua8071[14];end
always@* begin ks1500e[2047]<=zx55990;ks1500e[2046]<=aaacc86;ks1500e[2044]<=ddrclkpol;ks1500e[2040]<=sj90c17;ks1500e[2032]<=xy860bc;ks1500e[2017]<=fp32182;ks1500e[1987]<=su467fe;ks1500e[1926]<=wwffc65;ks1500e[1804]<=xy8ca1b;ks1500e[1561]<=os436ef;ks1500e[1074]<=ald62ae;ks1500e[1023]<=eclk;ks1500e[403]<=mtae926;ks1500e[201]<=xj55d24;ks1500e[100]<=kfb1574;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule





`timescale 1 ns / 100 ps
module jebdc43 (
    sclk,
    fn710da,
    sj90c17,
    xy860bc,
    zm1b581
);
input                        sclk;
input  [`USER_DM   -1 :0]    fn710da;
input  [`DQS_WIDTH -1 :0]    sj90c17;
input  [`DQS_WIDTH -1 :0]    xy860bc;
output [`DQS_WIDTH -1 :0]    zm1b581;
wire   [`DQS_WIDTH -1 :0]    zm1b581;
wire   [`DQS_WIDTH -1 :0]    ls9cd89;
genvar mt954fb;

`ifdef ECP3_SP2

`else

`endif
reg [`USER_DM - 1 : 0] oh36257;
reg [`DQS_WIDTH - 1 : 0] rgee316;
reg [`DQS_WIDTH - 1 : 0] dz718b2;
reg [`DQS_WIDTH - 1 : 0] nr4af62;
reg [2047:0] ks1500e;
wire [3:0] pua8071;

`ifdef ECP3_SP2


`else


`endif

localparam rt4038b = 4,hq1c5e = 32'hfdffc70b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ECP3_SP2


`else


`endif












`ifdef ECP3_SP2
   generate     for (mt954fb=0; mt954fb<`DQS_WIDTH; mt954fb=mt954fb+1)       begin: hoeb1f2             ODDRX2D sj859cc (             .SCLK    (sclk),             .DA0     (fn710da[mt954fb/(8/`DQSW)]),             .DB0     (fn710da[mt954fb/(8/`DQSW)+   `DATA_WIDTH/8]),             .DA1     (fn710da[mt954fb/(8/`DQSW)+ 2*`DATA_WIDTH/8]),             .DB1     (fn710da[mt954fb/(8/`DQSW)+ 3*`DATA_WIDTH/8]),             .DQCLK0  (sj90c17[mt954fb]),             .DQCLK1  (xy860bc[mt954fb]),             .Q       (ls9cd89[mt954fb])) ;       assign #`DQ_TRC_DEL zm1b581[mt954fb]    = nr4af62[mt954fb];       end   endgenerate

`else
   generate     for (mt954fb=0; mt954fb<`DQS_WIDTH; mt954fb=mt954fb+1)       begin: hoeb1f2             ODDRX2D sj859cc (             .SCLK    (sclk),             .DA0     (fn710da[mt954fb/(8/`DQSW)]),             .DB0     (fn710da[mt954fb/(8/`DQSW)+   `DATA_WIDTH/8]), .DA1     (fn710da[mt954fb/(8/`DQSW)+ 2*`DATA_WIDTH/8]),             .DB1     (fn710da[mt954fb/(8/`DQSW)+ 3*`DATA_WIDTH/8]), .DQCLK0  (sj90c17[mt954fb]), .DQCLK1  (xy860bc[mt954fb]), .Q       (ls9cd89[mt954fb]))  ;       assign #`DQ_TRC_DEL zm1b581[mt954fb]    = nr4af62[mt954fb];       end   endgenerate

`endif



always@* begin oh36257<={fn710da>>1,pua8071[0]};rgee316<={sj90c17>>1,pua8071[1]};dz718b2<={xy860bc>>1,pua8071[2]};nr4af62<={ls9cd89>>1,pua8071[3]};end
always@* begin ks1500e[2047]<=sj90c17[0];ks1500e[2046]<=xy860bc[0];ks1500e[2044]<=ls9cd89[0];ks1500e[1023]<=fn710da[0];end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule







`timescale 1 ns / 100 ps
module ng89b0c (
    
    rst_n,
    dqsbufd_rst,
    
    sclk,
    eclk,
    ps636f6,
    jpf9f9a,
    qgdbd92,
    osdec91,
    blf6489,
    lsb244f,
    mg9227b,
    db913d8,
    ls89ec7,
    vv4f63b,

    
    dqsdel  , 

    
    ddrclkpol,
    prmbdet,
    wy3bff7,
    aaacc86,
    zx55990,
    sj90c17,
    xy860bc,
    fcb8615,


    
    shc30aa

);
input                          rst_n;
input                          dqsbufd_rst;
input                          sclk;
input                          eclk;
input                          ps636f6;
input   [`DQS_WIDTH-1:0]       jpf9f9a;
input                          dqsdel;
input   [`DQS_WIDTH-1:0]       qgdbd92;
input   [7*(`DQS_WIDTH)-1:0]   osdec91;
input                          blf6489;
input   [`DQS_WIDTH-1:0]       lsb244f;
input   [`DQS_WIDTH-1:0]       mg9227b;
input                          db913d8;
input                          ls89ec7;
input                          vv4f63b;
output  [`DQS_WIDTH-1:0]       ddrclkpol;
output  [`DQS_WIDTH-1:0]       prmbdet;
output  [`DQS_WIDTH-1:0]       wy3bff7;
output  [`DQS_WIDTH-1:0]       aaacc86;
output  [`DQS_WIDTH-1:0]       zx55990;
output  [`DQS_WIDTH-1:0]       sj90c17;
output  [`DQS_WIDTH-1:0]       xy860bc;
output  [`DQS_WIDTH-1:0]       fcb8615;
inout   [`DQS_WIDTH-1:0]       shc30aa;
wire   [`DQS_WIDTH-1:0]       fcb8615;
wire                          aaa4a2;
reg                           jc52511 ;

`ifdef SIM 
wire  [(`DQS_WIDTH)-1:0] co9288a;
reg   [(`DQS_WIDTH)-1:0] fp94451;
wire  [(`DQS_WIDTH)-1:0] baa228f;

`ifndef DV_DLY_BITS

`else

`ifdef DATA_SIZE_8

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_16

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_24

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_32

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_40

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_48

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_56

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_64

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_72

`ifdef x4

`else

`endif

`endif

`endif

`endif
genvar mt954fb;

`ifdef SIM

`else

`endif
reg gd8a3d3;
reg hdaa7dd;
reg gd8f4ec;
reg [`DQS_WIDTH - 1 : 0] by7cff7;
reg [`DQS_WIDTH - 1 : 0] end3b2d;
reg [7 * (`DQS_WIDTH) - 1 : 0] sw9d96d;
reg dzecb68;
reg [`DQS_WIDTH - 1 : 0] uv65b46;
reg [`DQS_WIDTH - 1 : 0] xl2da34;
reg ww6d1a6;
reg su68d31;
reg ic46988;
reg mg34c40;
reg uka6201;
reg uk31008;
reg [2047:0] ks1500e;
wire [14:0] pua8071;

`ifdef SIM 

`ifndef DV_DLY_BITS

`else

`ifdef DATA_SIZE_8

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_16

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_24

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_32

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_40

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_48

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_56

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_64

`ifdef x4

`else

`endif

`endif

`ifdef DATA_SIZE_72

`ifdef x4

`else

`endif

`endif

`endif

`endif


`ifdef SIM

`else

`endif

localparam rt4038b = 15,hq1c5e = 32'hfdffd14b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef SIM 


`ifndef DV_DLY_BITS


`else


`ifdef DATA_SIZE_8


`ifdef x4


`else


`endif


`endif


`ifdef DATA_SIZE_16


`ifdef x4


`else


`endif


`endif


`ifdef DATA_SIZE_24


`ifdef x4


`else


`endif


`endif


`ifdef DATA_SIZE_32


`ifdef x4


`else


`endif


`endif


`ifdef DATA_SIZE_40


`ifdef x4


`else


`endif


`endif


`ifdef DATA_SIZE_48


`ifdef x4


`else


`endif


`endif


`ifdef DATA_SIZE_56


`ifdef x4


`else


`endif


`endif


`ifdef DATA_SIZE_64


`ifdef x4


`else


`endif


`endif


`ifdef DATA_SIZE_72


`ifdef x4


`else


`endif


`endif


`endif


`endif


`ifdef SIM


`else


`endif




































assign aaa4a2 = ic46988 | uk31008;
always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      jc52511 <= 1'b0;   else      jc52511 <= dzecb68;
end







`ifdef SIM 




`ifndef DV_DLY_BITS

assign wy3bff7 = co9288a;

`else


always @(posedge sclk or negedge rst_n) begin   if (!rst_n)      fp94451 <= {`DQS_WIDTH{1'b0}};   else      fp94451 <= co9288a;
end assign baa228f = `DV_DLY_BITS;



`ifdef DATA_SIZE_8



`ifdef x4
 assign wy3bff7 = {             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`else
 assign wy3bff7 = baa228f ? fp94451 : co9288a ;


`endif



`endif




`ifdef DATA_SIZE_16



`ifdef x4
 assign wy3bff7 = {             baa228f[3] ? fp94451[3] : co9288a[3],             baa228f[2] ? fp94451[2] : co9288a[2],             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`else
 assign wy3bff7 = {             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`endif



`endif




`ifdef DATA_SIZE_24



`ifdef x4
 assign wy3bff7 = {             baa228f[5] ? fp94451[5] : co9288a[5],             baa228f[4] ? fp94451[4] : co9288a[4],             baa228f[3] ? fp94451[3] : co9288a[3],             baa228f[2] ? fp94451[2] : co9288a[2],             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`else
 assign wy3bff7 = {             baa228f[2] ? fp94451[2] : co9288a[2],             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`endif



`endif




`ifdef DATA_SIZE_32



`ifdef x4
 assign wy3bff7 = {             baa228f[7] ? fp94451[7] : co9288a[7],             baa228f[6] ? fp94451[6] : co9288a[6],             baa228f[5] ? fp94451[5] : co9288a[5],             baa228f[4] ? fp94451[4] : co9288a[4],             baa228f[3] ? fp94451[3] : co9288a[3],             baa228f[2] ? fp94451[2] : co9288a[2],             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`else
 assign wy3bff7 = {             baa228f[3] ? fp94451[3] : co9288a[3],             baa228f[2] ? fp94451[2] : co9288a[2],             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`endif



`endif




`ifdef DATA_SIZE_40



`ifdef x4
 assign wy3bff7 = {             baa228f[ 9] ? fp94451[ 9] : co9288a[ 9],             baa228f[ 8] ? fp94451[ 8] : co9288a[ 8],             baa228f[ 7] ? fp94451[ 7] : co9288a[ 7],             baa228f[ 6] ? fp94451[ 6] : co9288a[ 6],             baa228f[ 5] ? fp94451[ 5] : co9288a[ 5],             baa228f[ 4] ? fp94451[ 4] : co9288a[ 4],             baa228f[ 3] ? fp94451[ 3] : co9288a[ 3],             baa228f[ 2] ? fp94451[ 2] : co9288a[ 2],             baa228f[ 1] ? fp94451[ 1] : co9288a[ 1],             baa228f[ 0] ? fp94451[ 0] : co9288a[ 0]  };

`else
 assign wy3bff7 = {             baa228f[4] ? fp94451[4] : co9288a[4],             baa228f[3] ? fp94451[3] : co9288a[3],             baa228f[2] ? fp94451[2] : co9288a[2],             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`endif



`endif




`ifdef DATA_SIZE_48



`ifdef x4
 assign wy3bff7 = {             baa228f[11] ? fp94451[11] : co9288a[11],             baa228f[10] ? fp94451[10] : co9288a[10],             baa228f[ 9] ? fp94451[ 9] : co9288a[ 9],             baa228f[ 8] ? fp94451[ 8] : co9288a[ 8],             baa228f[ 7] ? fp94451[ 7] : co9288a[ 7],             baa228f[ 6] ? fp94451[ 6] : co9288a[ 6],             baa228f[ 5] ? fp94451[ 5] : co9288a[ 5],             baa228f[ 4] ? fp94451[ 4] : co9288a[ 4],             baa228f[ 3] ? fp94451[ 3] : co9288a[ 3],             baa228f[ 2] ? fp94451[ 2] : co9288a[ 2],             baa228f[ 1] ? fp94451[ 1] : co9288a[ 1],             baa228f[ 0] ? fp94451[ 0] : co9288a[ 0]  };

`else
 assign wy3bff7 = {             baa228f[5] ? fp94451[5] : co9288a[5],             baa228f[4] ? fp94451[4] : co9288a[4],             baa228f[3] ? fp94451[3] : co9288a[3],             baa228f[2] ? fp94451[2] : co9288a[2],             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`endif



`endif




`ifdef DATA_SIZE_56



`ifdef x4
 assign wy3bff7 = {             baa228f[13] ? fp94451[13] : co9288a[13],             baa228f[12] ? fp94451[12] : co9288a[12],             baa228f[11] ? fp94451[11] : co9288a[11],             baa228f[10] ? fp94451[10] : co9288a[10],             baa228f[ 9] ? fp94451[ 9] : co9288a[ 9],             baa228f[ 8] ? fp94451[ 8] : co9288a[ 8],             baa228f[ 7] ? fp94451[ 7] : co9288a[ 7],             baa228f[ 6] ? fp94451[ 6] : co9288a[ 6],             baa228f[ 5] ? fp94451[ 5] : co9288a[ 5],             baa228f[ 4] ? fp94451[ 4] : co9288a[ 4],             baa228f[ 3] ? fp94451[ 3] : co9288a[ 3],             baa228f[ 2] ? fp94451[ 2] : co9288a[ 2],             baa228f[ 1] ? fp94451[ 1] : co9288a[ 1],             baa228f[ 0] ? fp94451[ 0] : co9288a[ 0]  };

`else
 assign wy3bff7 = {             baa228f[6] ? fp94451[6] : co9288a[6],             baa228f[5] ? fp94451[5] : co9288a[5],             baa228f[4] ? fp94451[4] : co9288a[4],             baa228f[3] ? fp94451[3] : co9288a[3],             baa228f[2] ? fp94451[2] : co9288a[2],             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`endif



`endif




`ifdef DATA_SIZE_64



`ifdef x4
 assign wy3bff7 = {             baa228f[15] ? fp94451[15] : co9288a[15],             baa228f[14] ? fp94451[14] : co9288a[14],             baa228f[13] ? fp94451[13] : co9288a[13],             baa228f[12] ? fp94451[12] : co9288a[12],             baa228f[11] ? fp94451[11] : co9288a[11],             baa228f[10] ? fp94451[10] : co9288a[10],             baa228f[ 9] ? fp94451[ 9] : co9288a[ 9],             baa228f[ 8] ? fp94451[ 8] : co9288a[ 8],             baa228f[ 7] ? fp94451[ 7] : co9288a[ 7],             baa228f[ 6] ? fp94451[ 6] : co9288a[ 6],             baa228f[ 5] ? fp94451[ 5] : co9288a[ 5],             baa228f[ 4] ? fp94451[ 4] : co9288a[ 4],             baa228f[ 3] ? fp94451[ 3] : co9288a[ 3],             baa228f[ 2] ? fp94451[ 2] : co9288a[ 2],             baa228f[ 1] ? fp94451[ 1] : co9288a[ 1],             baa228f[ 0] ? fp94451[ 0] : co9288a[ 0]  };

`else
 assign wy3bff7 = {             baa228f[7] ? fp94451[7] : co9288a[7],             baa228f[6] ? fp94451[6] : co9288a[6],             baa228f[5] ? fp94451[5] : co9288a[5],             baa228f[4] ? fp94451[4] : co9288a[4],             baa228f[3] ? fp94451[3] : co9288a[3],             baa228f[2] ? fp94451[2] : co9288a[2],             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`endif



`endif




`ifdef DATA_SIZE_72



`ifdef x4
 assign wy3bff7 = {             baa228f[17] ? fp94451[17] : co9288a[17],             baa228f[16] ? fp94451[16] : co9288a[16],             baa228f[15] ? fp94451[15] : co9288a[15],             baa228f[14] ? fp94451[14] : co9288a[14],             baa228f[13] ? fp94451[13] : co9288a[13],             baa228f[12] ? fp94451[12] : co9288a[12],             baa228f[11] ? fp94451[11] : co9288a[11],             baa228f[10] ? fp94451[10] : co9288a[10],             baa228f[ 9] ? fp94451[ 9] : co9288a[ 9],             baa228f[ 8] ? fp94451[ 8] : co9288a[ 8],             baa228f[ 7] ? fp94451[ 7] : co9288a[ 7],             baa228f[ 6] ? fp94451[ 6] : co9288a[ 6],             baa228f[ 5] ? fp94451[ 5] : co9288a[ 5],             baa228f[ 4] ? fp94451[ 4] : co9288a[ 4],             baa228f[ 3] ? fp94451[ 3] : co9288a[ 3],             baa228f[ 2] ? fp94451[ 2] : co9288a[ 2],             baa228f[ 1] ? fp94451[ 1] : co9288a[ 1],             baa228f[ 0] ? fp94451[ 0] : co9288a[ 0]  };

`else
 assign wy3bff7 = {             baa228f[8] ? fp94451[8] : co9288a[8],             baa228f[7] ? fp94451[7] : co9288a[7],             baa228f[6] ? fp94451[6] : co9288a[6],             baa228f[5] ? fp94451[5] : co9288a[5],             baa228f[4] ? fp94451[4] : co9288a[4],             baa228f[3] ? fp94451[3] : co9288a[3],             baa228f[2] ? fp94451[2] : co9288a[2],             baa228f[1] ? fp94451[1] : co9288a[1],             baa228f[0] ? fp94451[0] : co9288a[0]  };

`endif



`endif





`endif



`endif



generate     for (mt954fb=0; mt954fb<(`DQS_WIDTH); mt954fb=mt954fb+1)       begin: hoeb1f2  yk4c0a3 yk4c0a3 (                     .ux28c5   (gd8a3d3),                     .sclk           (sclk),                     .eclk           (hdaa7dd),                     .ps636f6          (gd8f4ec),                     .jpf9f9a           (by7cff7[mt954fb]),                                          .dqsdel         (mg34c40),                     .qgdbd92   (end3b2d[mt954fb]),                     .osdec91    (sw9d96d[(7*mt954fb+6):(7*mt954fb)]),                                          .blf6489     (uk31008),                     .lsb244f (uv65b46[mt954fb]),                     .mg9227b (xl2da34[mt954fb]),                     .db913d8       (ww6d1a6),                     .ls89ec7       (su68d31),                     .vv4f63b       (uka6201),                     .ddrclkpol      (ddrclkpol[mt954fb]),                     .prmbdet        (prmbdet[mt954fb]),

`ifdef SIM
                     .wy3bff7      (co9288a[mt954fb]),

`else
                     .wy3bff7      (wy3bff7[mt954fb]),

`endif
                     .aaacc86         (aaacc86[mt954fb]),                     .zx55990       (zx55990[mt954fb]),                     .sj90c17         (sj90c17[mt954fb]),                     .xy860bc         (xy860bc[mt954fb]),                     .fcb8615       (fcb8615[mt954fb]),
                     .shc30aa            (shc30aa[mt954fb]));       end    endgenerate

always@* begin gd8a3d3<=pua8071[0];hdaa7dd<=pua8071[1];gd8f4ec<=pua8071[2];by7cff7<={jpf9f9a>>1,pua8071[3]};end3b2d<={qgdbd92>>1,pua8071[4]};sw9d96d<={osdec91>>1,pua8071[5]};dzecb68<=pua8071[6];uv65b46<={lsb244f>>1,pua8071[7]};xl2da34<={mg9227b>>1,pua8071[8]};ww6d1a6<=pua8071[9];su68d31<=pua8071[10];ic46988<=pua8071[11];mg34c40<=pua8071[12];uka6201<=pua8071[13];uk31008<=pua8071[14];end
always@* begin ks1500e[2047]<=eclk;ks1500e[2046]<=ps636f6;ks1500e[2044]<=jpf9f9a[0];ks1500e[2040]<=qgdbd92[0];ks1500e[2033]<=osdec91[0];ks1500e[2019]<=blf6489;ks1500e[1990]<=lsb244f[0];ks1500e[1933]<=mg9227b[0];ks1500e[1819]<=db913d8;ks1500e[1591]<=ls89ec7;ks1500e[1135]<=vv4f63b;ks1500e[1023]<=dqsbufd_rst;ks1500e[889]<=jc52511;ks1500e[444]<=aaa4a2;ks1500e[222]<=dqsdel;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule



`timescale 1 ns / 100 ps
module yk4c0a3 (
          ux28c5,
          sclk,
          eclk,
          ps636f6,
          jpf9f9a,
          dqsdel,
          qgdbd92,
          osdec91,
          blf6489,
          lsb244f,
          mg9227b,
          db913d8,
          ls89ec7,
          vv4f63b,


          ddrclkpol,
          prmbdet,
          wy3bff7,
          aaacc86,
          zx55990,
          sj90c17,
          xy860bc,
          fcb8615,

          shc30aa
          );
input          ux28c5;
input          sclk;
input          eclk;
input          ps636f6;
input          jpf9f9a;
input          dqsdel;
input          qgdbd92;
input [6:0]    osdec91;
input          blf6489;
input          lsb244f;
input          mg9227b;
input          db913d8;
input          ls89ec7;
input          vv4f63b;
output         ddrclkpol;
output         prmbdet;
output         wy3bff7;
output         aaacc86;
output         zx55990;
output         sj90c17;
output         xy860bc;
output         fcb8615;
inout          shc30aa;
wire           zxec465;
wire           qg6232f;
wire           pu11978;
wire           sj90c17;
wire           xy860bc;
wire           hq2f09c;
wire           yk784e2;
wire           pfc2710;
wire           xl13887;
wire           pu9c43f;
wire           ipe21fb;

`ifdef ECP3_SP2

`else

`endif

`ifdef SIM
wire           co10fdc;

`ifdef ECP3_8_0

`endif

`else

`ifdef ECP3_8_0

`endif

`endif

`ifdef SIM
wire           ym87ee0;
wire           ls3f700;
wire           rgfb803;
wire           kddc01a;

`endif

`ifdef SIM

`else

`endif
reg sue00d5;
reg hdaa7dd;
reg gd8f4ec;
reg by7cff7;
reg mg34c40;
reg end3b2d;
reg [6 : 0] sw9d96d;
reg dzecb68;
reg uv65b46;
reg xl2da34;
reg ww6d1a6;
reg su68d31;
reg ic46988;
reg aldc24d;
reg rge126d;
reg db936b;
reg cm49b5e;
reg zk4daf1;
reg ay6d78b;
reg bl6bc59;
reg ip5e2cf;
reg zkf167c;
reg [2047:0] ks1500e;
wire [21:0] pua8071;

`ifdef ECP3_SP2


`else


`endif


`ifdef SIM

`ifdef ECP3_8_0

`endif


`else

`ifdef ECP3_8_0

`endif


`endif

`ifdef SIM

`endif

`ifdef SIM


`else


`endif


localparam rt4038b = 22,hq1c5e = 32'hfdffe0cb;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ECP3_SP2


`else


`endif


`ifdef SIM


`ifdef ECP3_8_0


`endif


`else


`ifdef ECP3_8_0


`endif


`endif


`ifdef SIM


`endif


`ifdef SIM


`else


`endif











assign  pfc2710  = ~xl2da34 & ~uv65b46;

assign  xl13887        = (dzecb68 ) ? 1'b0 :  ww6d1a6;

assign  pu9c43f        = (dzecb68 ) ? 1'b0 :  su68d31;
assign  ipe21fb = dzecb68 ? 1'b0 : uv65b46;





`ifdef ECP3_SP2

defparam ks54b0.ISI_CAL = "BYPASS" ;
ODDRX2DQSA ks54b0 (.SCLK(sclk), .DB0(ipe21fb), .DB1(mg9227b), .DQSW(hq2f09c), .DQCLK0(sj90c17), .DQCLK1(xy860bc), .Q(qg6232f), .DQSTCLK(pu11978)) ;


`else

defparam ks54b0.ISI_CAL = "BYPASS" ;
ODDRX2DQSA ks54b0 (.SCLK(sclk), .DB0(ipe21fb), .DB1(mg9227b), .DQSW(hq2f09c), .DQCLK0(sj90c17), .DQCLK1(xy860bc), .Q(qg6232f), .DQSTCLK(pu11978))   ;

`endif






ODDRTDQSA th50dc4 (.TA(xl13887), .SCLK(sclk), .DB(pu9c43f), .DQSTCLK(pu11978), .DQSW(hq2f09c), .Q(zxec465));






`ifdef SIM



`ifdef ECP3_8_0

defparam ou97666.NRZMODE = "ENABLED" ;

`endif
    DQSBUFD ou97666 (.DQSI(co10fdc), .SCLK(sclk), .READ(jpf9f9a), .DQSDEL(dqsdel),   .ECLK(eclk), .ECLKW(ps636f6), .RST(ux28c5),   .DYNDELPOL(qgdbd92),   .DYNDELAY6(osdec91[6]), .DYNDELAY5(osdec91[5]),   .DYNDELAY4(osdec91[4]), .DYNDELAY3(osdec91[3]), .DYNDELAY2(osdec91[2]),   .DYNDELAY1(osdec91[1]), .DYNDELAY0(osdec91[0]),   .DQSW(hq2f09c), .DDRCLKPOL(ddrclkpol), .PRMBDET(prmbdet),   .DATAVALID(wy3bff7), .DDRLAT(aaacc86), .ECLKDQSR(zx55990), .DQCLK0(sj90c17),   .DQCLK1(xy860bc));

`else



`ifdef ECP3_8_0

defparam ou97666.NRZMODE = "ENABLED" ;

`endif
    DQSBUFD ou97666 (.DQSI(yk784e2), .SCLK(sclk), .READ(jpf9f9a), .DQSDEL(dqsdel),   .ECLK(eclk), .ECLKW(ps636f6), .RST(ux28c5),   .DYNDELPOL(qgdbd92),   .DYNDELAY6(osdec91[6]), .DYNDELAY5(osdec91[5]),   .DYNDELAY4(osdec91[4]), .DYNDELAY3(osdec91[3]), .DYNDELAY2(osdec91[2]),   .DYNDELAY1(osdec91[1]), .DYNDELAY0(osdec91[0]),   .DQSW(hq2f09c), .DDRCLKPOL(ddrclkpol), .PRMBDET(prmbdet),   .DATAVALID(wy3bff7), .DDRLAT(aaacc86), .ECLKDQSR(zx55990), .DQCLK0(sj90c17),   .DQCLK1(xy860bc));

`endif







`ifdef SIM

assign #`WL_DQS_PHASE_DLY rgfb803  = rge126d;
assign kddc01a = dzecb68 ? rgfb803 : rge126d;

assign #`DQS_TRC_DEL ym87ee0  = kddc01a;   
assign #`DQS_TRC_DEL ls3f700 = aldc24d;
assign #`DQS_TRC_DEL co10fdc   = zk4daf1;    

`endif





`ifdef SIM
  BB oha4cdf(.I(ym87ee0), .T(ls3f700), .O(yk784e2), .B(shc30aa))  ;

`else
  BB oha4cdf(.I(qg6232f), .T(zxec465), .O(yk784e2), .B(shc30aa))    ;

`endif


ODDRTDQA lqdf496 (.TA(vv4f63b), .SCLK(sclk), .DQCLK0(sj90c17), .DQCLK1(xy860bc), .Q(fcb8615));
always@* begin sue00d5<=pua8071[0];hdaa7dd<=pua8071[1];gd8f4ec<=pua8071[2];by7cff7<=pua8071[3];mg34c40<=pua8071[4];end3b2d<=pua8071[5];sw9d96d<={osdec91>>1,pua8071[6]};dzecb68<=pua8071[7];uv65b46<=pua8071[8];xl2da34<=pua8071[9];ww6d1a6<=pua8071[10];su68d31<=pua8071[11];ic46988<=pua8071[12];aldc24d<=pua8071[13];rge126d<=pua8071[14];db936b<=pua8071[15];cm49b5e<=pua8071[16];zk4daf1<=pua8071[17];ay6d78b<=pua8071[18];bl6bc59<=pua8071[19];ip5e2cf<=pua8071[20];zkf167c<=pua8071[21];end
always@* begin ks1500e[2047]<=eclk;ks1500e[2046]<=ps636f6;ks1500e[2044]<=jpf9f9a;ks1500e[2040]<=dqsdel;ks1500e[2033]<=qgdbd92;ks1500e[2024]<=ipe21fb;ks1500e[2018]<=osdec91[0];ks1500e[1988]<=blf6489;ks1500e[1929]<=lsb244f;ks1500e[1811]<=mg9227b;ks1500e[1789]<=pfc2710;ks1500e[1574]<=db913d8;ks1500e[1530]<=xl13887;ks1500e[1247]<=pu11978;ks1500e[1101]<=ls89ec7;ks1500e[1023]<=ux28c5;ks1500e[1012]<=pu9c43f;ks1500e[894]<=yk784e2;ks1500e[623]<=qg6232f;ks1500e[447]<=hq2f09c;ks1500e[311]<=zxec465;ks1500e[155]<=vv4f63b;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule






























`timescale 1 ns / 100 ps
module  xl9b163 (
               sclk,
               rst_n,
               pio_read,
               cal_bc4,
               ls1eceb,
               dzf675b
               );
input          sclk;
input          rst_n;
input          pio_read;
input          cal_bc4;
input          ls1eceb;
output         dzf675b;
wire           ayc1554;
reg            aaaaa0;
wire           hb55500;
reg            dzf675b;
reg            wj5403f;
reg  [4:0]     jra01fd;
reg  [4:0]     oufef;
reg            oh7f79;
reg            je3fbcc;
reg            yxfde62;
reg            qgef315;
reg            tu798a8;
reg            encc543;
reg            eadb548;
wire           wy150e1;
wire           hqa8709;
wire           cm4384b;
reg tj1c258;
reg nee12c7;
reg xl963b;
reg ip4b1de;
reg vi58ef5;
reg blc77aa;
reg mg3bd57;
reg uideab8;
reg [4 : 0] uif55c1;
reg [4 : 0] fpaae08;
reg ne57047;
reg jeb823a;
reg wwc11d2;
reg wl8e90;
reg dm47485;
reg do3a42b;
reg tj9bb56;
reg oh90ade;
reg sj856f4;
reg ou2b7a4;
reg en5bd20;
reg [2047:0] ks1500e;
wire [19:0] pua8071;

localparam rt4038b = 20,hq1c5e = 32'hfdfff10b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      je3fbcc         <= 1'b0;      yxfde62        <= 1'b0;      qgef315       <= 1'b0;      tu798a8 <= 1'b0;      encc543     <= 1'b0;   end   else begin      je3fbcc         <= nee12c7;      yxfde62        <= jeb823a;      qgef315       <= wwc11d2;      tu798a8 <= ip4b1de;      encc543     <= sj856f4;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      eadb548 <= 1'b0;   end   else if (nee12c7) begin      eadb548 <= xl963b;   end
end
assign hqa8709 = tj9bb56;










always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      oufef    <= 5'h0;   end   else if ((jeb823a && !wl8e90) || sj856f4 || mg3bd57) begin      oufef    <= 5'h0;   end   else if (!jeb823a && !wwc11d2)          oufef    <= fpaae08;   else      oufef    <= fpaae08 + 1;
end









assign hb55500 = (!jeb823a & ip4b1de) | (wwc11d2 & dm47485);
assign wy150e1 = ~do3a42b & (~(wwc11d2 & dm47485));
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      jra01fd  <= 5'h0;   else if (mg3bd57)      jra01fd  <= {fpaae08[4:1], oh90ade};   else if (((!jeb823a && !wwc11d2) || ne57047 || en5bd20) && uif55c1 != 5'h0 )      jra01fd  <= uif55c1 - 1;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      tj1c258  <= 1'b0;   else if (mg3bd57 && !jeb823a && !wwc11d2)      tj1c258  <= 1'b1;   else      tj1c258  <= 1'b0;
end



always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      oh7f79  <= 1'b0;   else if (uif55c1 == 5'h1)      oh7f79  <= 1'b0;   else if ((!jeb823a && !wwc11d2) && uif55c1 != 5'h0)      oh7f79  <= 1'b1;
end





assign ayc1554  =  (ip4b1de || (wwc11d2 && dm47485 && (fpaae08 != 5'h0)) || (uif55c1 != 5'h0)) ? 1'b1 : 1'b0;
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      dzf675b  <= 1'b0;   else      dzf675b  <= vi58ef5;
end
always@* begin nee12c7<=pua8071[0];xl963b<=pua8071[1];ip4b1de<=pua8071[2];vi58ef5<=pua8071[3];blc77aa<=pua8071[4];mg3bd57<=pua8071[5];uideab8<=pua8071[6];uif55c1<={jra01fd>>1,pua8071[7]};fpaae08<={oufef>>1,pua8071[8]};ne57047<=pua8071[9];jeb823a<=pua8071[10];wwc11d2<=pua8071[11];wl8e90<=pua8071[12];dm47485<=pua8071[13];do3a42b<=pua8071[14];tj9bb56<=pua8071[15];oh90ade<=pua8071[16];sj856f4<=pua8071[17];ou2b7a4<=pua8071[18];en5bd20<=pua8071[19];end
always@* begin ks1500e[2047]<=cal_bc4;ks1500e[2046]<=ls1eceb;ks1500e[2044]<=ayc1554;ks1500e[2040]<=aaaaa0;ks1500e[2032]<=hb55500;ks1500e[2016]<=wj5403f;ks1500e[1985]<=jra01fd[0];ks1500e[1950]<=hqa8709;ks1500e[1923]<=oufef[0];ks1500e[1852]<=cm4384b;ks1500e[1799]<=oh7f79;ks1500e[1656]<=tj1c258;ks1500e[1551]<=je3fbcc;ks1500e[1054]<=yxfde62;ks1500e[1023]<=pio_read;ks1500e[975]<=wy150e1;ks1500e[487]<=eadb548;ks1500e[243]<=encc543;ks1500e[121]<=tu798a8;ks1500e[60]<=qgef315;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule
`timescale 1 ns / 100 ps
module  mt185fc (
                      rst_n,
                      sclk,
                      hdbf975,
                      mirror_on,
                      aye5d77,
                      ddr_cs_n,
                      ddr_ba,
                      ddr_addr,
                      ddr_cke,
                      zmb8369,
                      ddr_we_n,
                      ddr_cas_n,
                      ddr_ras_n,

                      ip4e07c,
                      jp4a34b,
                      en51a5f,
                      ou8d2fc,
                      ne697e0,
                      al4bf03,
                      hb5f81c,
                      xjfc0e7,
                      eae073e,
                      db39f1,
                      bn1cf8e,
                      wje7c76,
                      ou3e3b5,
                      psf1da9,
                      vx8ed4b,
                      rg76a5e,
                      hdb52f2 
                     );

`ifdef ROW_WIDTH_12

`define  ROW_WDTH  13

`else

`define  ROW_WDTH  `ROW_WIDTH

`endif
input                           rst_n;
input                           sclk;
input                           hdbf975;
input                           mirror_on;
input                           aye5d77;
input  [`CS_WIDTH-1:0]          ddr_cs_n;
input  [`BANK_WIDTH   -1:0]     ddr_ba;
input  [`ROW_WDTH-1:0]          ddr_addr;
input                           ddr_cke;
input  [`CS_WIDTH -1 :0]        zmb8369;
input                           ddr_we_n;
input                           ddr_cas_n;
input                           ddr_ras_n;
output                          ip4e07c;
output                          jp4a34b;
output                          en51a5f;
output                          ou8d2fc;
output                          ne697e0;
output                          al4bf03;
output                          hb5f81c;
output  [`BANK_WIDTH -1 :0]     xjfc0e7;
output  [`BANK_WIDTH -1 :0]     eae073e;
output  [`ROW_WDTH -1:0]        db39f1;
output  [`ROW_WDTH -1:0]        bn1cf8e;
output  [`CS_WIDTH-1:0]         wje7c76;
output  [`CS_WIDTH-1:0]         ou3e3b5;
output  [`CKE_WIDTH -1:0]       psf1da9;
output  [`CKE_WIDTH -1:0]       vx8ed4b;
output  [`CS_WIDTH -1 :0]       rg76a5e;
output  [`CS_WIDTH -1 :0]       hdb52f2;
wire                            jp4a34b;
wire                            en51a5f;
wire                            ou8d2fc;
wire                            ne697e0;
wire                            al4bf03;
wire                            hb5f81c;
wire    [`BANK_WIDTH -1 :0]     xjfc0e7;
wire    [`BANK_WIDTH -1 :0]     eae073e;
wire    [`ROW_WDTH -1:0]        db39f1;
wire    [`ROW_WDTH -1:0]        bn1cf8e;
wire    [`CS_WIDTH-1:0]         wje7c76 ;
wire    [`CS_WIDTH-1:0]         ou3e3b5;
wire    [`CKE_WIDTH -1:0]       psf1da9;
wire    [`CKE_WIDTH -1:0]       vx8ed4b;
wire    [`CS_WIDTH -1 :0]       rg76a5e;
wire    [`CS_WIDTH -1 :0]       hdb52f2;
reg    [`CS_WIDTH   -1:0]       jr6d1c   ;
reg    [`BANK_WIDTH   -1:0]     wl368e6;
reg    [`ROW_WDTH-1:0]          uxb4734;
reg                             coa39a4;
reg    [`CS_WIDTH -1 :0]        nt1cd21;
reg    [`CS_WIDTH -1 :0]        pfe690e;
reg                             ks34877;
reg                             gda43b9;
reg                             qi21dcd;
reg                             puee68;
reg                             ui77342;
reg                             gqb9a11;
reg                             fncd089;
reg                             su6844e;
reg                             ne42271;
reg                             fc1138b;
reg                             ba89c5b;
reg                             sh4e2db;
reg    [`CS_WIDTH -1 :0]        zx716dd;
reg    [`CS_WIDTH -1 :0]        tj8b6ee;
reg    [`ROW_WDTH -1:0]         gb5b777;
reg    [`ROW_WDTH-1:0]          icdbbbc;
reg    [`CKE_WIDTH -1:0]        fnddde1;
reg    [`CS_WIDTH-1:0]          byeef0e;
reg                             go77873;
reg                             ukbc398;
reg                             hoe1cc0;
reg                             vke602;
reg                             vi73013;
reg                             ou9809b;
reg    [`CS_WIDTH -1 :0]        zkc04d9;
reg    [`CS_WIDTH -1 :0]        ux26ca;

`ifdef PHY_REG_P2
reg    [`ROW_WDTH -1:0]         lf13655;
reg    [`ROW_WDTH-1:0]          vx9b2ae;
reg    [`CKE_WIDTH -1:0]        ald9576;
reg    [`CKE_WIDTH -1:0]        rgcabb5;
reg    [`CS_WIDTH-1:0]          nr55daa;
reg                             kfaed56;
reg                             by76ab5;
reg                             jrb55aa;
reg                             vxaad56;
reg                             kq56ab7;
reg                             rvb55b9;
reg    [`CS_WIDTH -1 :0]        hdaadce;
reg    [`CS_WIDTH -1 :0]        cm56e77;
reg    [`BANK_WIDTH -1:0]       dob73b9;
reg    [`CS_WIDTH -1:0]         aab9dcb;

`endif
wire   [`BANK_WIDTH -1:0]       gocee59;
wire   [`ROW_WDTH -1:0]         ay772c8;

`ifdef ADDR_MIRROR
wire   [`BANK_WIDTH   -1:0]     cob9641;
wire   [`ROW_WDTH-1:0]          sucb208;

`endif
wire                            ip4e07c;
wire                            nrc8209;

`ifdef CS_WIDTH_4
wire                            gb4104e;
wire                            yz8274;
wire                            qt413a4;
wire                            bn9d24;

`endif

`ifdef CS_WIDTH_2
wire                            gb4104e;
wire                            yz8274;

`endif

`ifdef CS_WIDTH_1
wire                            gb4104e;

`endif
wire   [`CS_WIDTH-1:0]          ou24f3c;
wire                            bn279e0;
wire   [`CS_WIDTH -1 :0]        ep3cf07;
wire   [`CS_WIDTH-1:0]          ofe783d;
wire   [`ROW_WDTH -1:0]         ep3c1ed;
wire                            ice0f6c;
wire     [`CS_WIDTH-1:0]     ep7b60 ;
wire     [`CS_WIDTH -1 :0]   jr3db04 ;
reg      [`CS_WIDTH -1 :0]   czed827  ;

`ifdef ADDR_MIRROR

`else

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_1

`endif

`ifdef PHY_REG_P2

`else 

`endif

`ifdef PHY_REG_P2

`else 

`endif

`ifdef DDR3_2T

`else

`endif

`ifdef PHY_REG_P2

`endif 

`ifdef PHY_REG_P2

`else

`ifdef PHY_REG 

`else

`endif

`endif
reg lq6c13c;
reg kd609e3;
reg tw4f1c;
reg [`CS_WIDTH - 1 : 0] db278e3;
reg [`BANK_WIDTH - 1 : 0] ux3c71f;
reg [`ROW_WDTH - 1 : 0] jpe38fc;
reg rv1c7e7;
reg [`CS_WIDTH - 1 : 0] zxe3f3f;
reg mg1f9ff;
reg ldfcff9;
reg she7fcf;
reg [`CS_WIDTH - 1 : 0] je3fe7d;
reg [`BANK_WIDTH - 1 : 0] wwff3ea;
reg [`ROW_WDTH - 1 : 0] dzf9f51;
reg facfa8f;
reg [`CS_WIDTH - 1 : 0] su7d47a;
reg [`CS_WIDTH - 1 : 0] qgea3d0;
reg uv51e80;
reg oh8f404;
reg sh7a025;
reg vid012d;
reg an8096b;
reg fc4b5d;
reg tw25aeb;
reg ph2d75a;
reg rt6bad7;
reg fa5d6bf;
reg faeb5fb;
reg ld5afda;
reg [`CS_WIDTH - 1 : 0] dzd7ed7;
reg [`CS_WIDTH - 1 : 0] ntbf6bf;
reg [`ROW_WDTH - 1 : 0] hofb5ff;
reg [`ROW_WDTH - 1 : 0] lqdaffb;
reg [`CKE_WIDTH - 1 : 0] dzd7fdb;
reg [`CS_WIDTH - 1 : 0] ntbfedf;
reg cmff6fe;
reg xwfb7f1;
reg icdbf8b;
reg dmdfc59;
reg psfe2cb;
reg xwf165b;
reg [`CS_WIDTH - 1 : 0] db8b2da;
reg [`CS_WIDTH - 1 : 0] go596d7;
reg [`BANK_WIDTH - 1 : 0] mecb6b9;
reg [`ROW_WDTH - 1 : 0] cz5b5c9;
reg dmdae4c;
reg [`CS_WIDTH - 1 : 0] rtd7263;
reg oub931e;
reg [`CS_WIDTH - 1 : 0] mrc98f0;
reg [`CS_WIDTH - 1 : 0] ay4c785;
reg [`ROW_WDTH - 1 : 0] fa63c28;
reg je1e143;
reg [`CS_WIDTH - 1 : 0] gof0a1a;
reg [`CS_WIDTH - 1 : 0] an850d1;
reg [`CS_WIDTH - 1 : 0] db2868c;
reg [2047:0] ks1500e;
wire [54:0] pua8071;

`ifdef ROW_WIDTH_12

`define  ROW_WDTH  13

`else

`define  ROW_WDTH  `ROW_WIDTH

`endif

`ifdef PHY_REG_P2

`endif

`ifdef ADDR_MIRROR

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_1

`endif

`ifdef ADDR_MIRROR

`else

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_1

`endif


`ifdef PHY_REG_P2

`else 

`endif


`ifdef PHY_REG_P2

`else 

`endif

`ifdef DDR3_2T

`else

`endif

`ifdef PHY_REG_P2

`endif 

`ifdef PHY_REG_P2

`else

`ifdef PHY_REG 

`else

`endif

`endif

localparam rt4038b = 55,hq1c5e = 32'hfdffd48b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ROW_WIDTH_12


`define  ROW_WDTH  13


`else


`define  ROW_WDTH  `ROW_WIDTH


`endif


`ifdef PHY_REG_P2


`endif


`ifdef ADDR_MIRROR


`endif


`ifdef CS_WIDTH_4


`endif


`ifdef CS_WIDTH_2


`endif


`ifdef CS_WIDTH_1


`endif


`ifdef ADDR_MIRROR


`else


`endif


`ifdef CS_WIDTH_4


`endif


`ifdef CS_WIDTH_2


`endif


`ifdef CS_WIDTH_1


`endif


`ifdef PHY_REG_P2


`else 


`endif


`ifdef PHY_REG_P2


`else 


`endif


`ifdef DDR3_2T


`else


`endif


`ifdef PHY_REG_P2


`endif 


`ifdef PHY_REG_P2


`else


`ifdef PHY_REG 


`else


`endif


`endif





`ifdef ROW_WIDTH_12



`define  ROW_WDTH  13



`else



`define  ROW_WDTH  `ROW_WIDTH



`endif




`ifdef PHY_REG_P2



`endif




`ifdef ADDR_MIRROR



`endif



`ifdef CS_WIDTH_4



`endif



`ifdef CS_WIDTH_2



`endif



`ifdef CS_WIDTH_1



`endif




`ifdef ADDR_MIRROR
   assign sucb208 = {jpe38fc[`ROW_WDTH-1:9], jpe38fc[7], jpe38fc[8],jpe38fc[5],                             jpe38fc[6],jpe38fc[3], jpe38fc[4],jpe38fc[2:0]};   assign cob9641   = {ux3c71f[2], ux3c71f[0], ux3c71f[1]};   assign gocee59        = (kd609e3) ? cob9641   : ux3c71f;   assign ay772c8      = (kd609e3) ? sucb208 : jpe38fc;

`else
   assign gocee59        = ux3c71f;   assign ay772c8      = jpe38fc;

`endif



always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        jr6d1c  <= {`CS_WIDTH{1'b0}};        wl368e6  <= {`BANK_WIDTH{1'b0}};        uxb4734  <= {`ROW_WDTH{1'b0}};        coa39a4   <= 1'b0;        nt1cd21  <= {`CS_WIDTH{1'b0}};        pfe690e <= {`CS_WIDTH{1'b0}};        ks34877 <= 1'b0;        end       else begin        jr6d1c  <=   db278e3;        wl368e6  <=   mecb6b9;        uxb4734  <=   cz5b5c9;        coa39a4   <=   rv1c7e7;        nt1cd21  <=   zxe3f3f;        pfe690e <=   su7d47a;        ks34877 <=   dmdae4c;       end
end
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        gda43b9   <= 1'b0;        qi21dcd  <= 1'b0;        puee68  <= 1'b0;        end       else begin        gda43b9  <=   mg1f9ff;        qi21dcd <=   ldfcff9;        puee68 <=   she7fcf;       end
end
assign ip4e07c = oh8f404 & ~mg1f9ff  & ~ldfcff9 & she7fcf ;
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        ui77342   <= 1'b0;        end       else begin        ui77342   <= ip4e07c;       end
end
assign  nrc8209 = ldfcff9 & she7fcf & mg1f9ff;


`ifdef CS_WIDTH_4

assign  gb4104e  = (~ dmdae4c & lq6c13c & (~ip4e07c | tw4f1c)) | (an8096b & lq6c13c & ~tw4f1c & je3fe7d[0]);
assign  yz8274  = (~ dmdae4c & lq6c13c & (~ip4e07c | tw4f1c)) | (an8096b & lq6c13c & ~tw4f1c & je3fe7d[1]);
assign  qt413a4  = (~ dmdae4c & lq6c13c & (~ip4e07c | tw4f1c)) | (an8096b & lq6c13c & ~tw4f1c & je3fe7d[2]);
assign  bn9d24  = (~ dmdae4c & lq6c13c & (~ip4e07c | tw4f1c)) | (an8096b & lq6c13c & ~tw4f1c & je3fe7d[3]);
assign ou24f3c = {bn9d24, qt413a4, yz8274, gb4104e};

`endif




`ifdef CS_WIDTH_2

assign  gb4104e  = (~ dmdae4c & lq6c13c & (~ip4e07c | tw4f1c)) | (an8096b & lq6c13c & ~tw4f1c & je3fe7d[0]);
assign  yz8274  = (~ dmdae4c & lq6c13c & (~ip4e07c | tw4f1c)) | (an8096b & lq6c13c & ~tw4f1c & je3fe7d[1]);
assign ou24f3c = {yz8274, gb4104e};

`endif




`ifdef CS_WIDTH_1

assign  gb4104e  = (~ dmdae4c & lq6c13c & (~ip4e07c | tw4f1c)) | (an8096b & lq6c13c & ~tw4f1c & je3fe7d[0]);
assign ou24f3c = gb4104e;

`endif



always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        czed827   <= {`CS_WIDTH{1'b0}};        end       else begin        czed827   <= rtd7263;       end
end


mt90cd2  ba86694(              .rst_n           (rst_n),              .sclk            (sclk),

`ifdef PHY_REG_P2
              .ofe783d     (aab9dcb),              .ou24f3c   (db2868c),

`else 
              .ofe783d     (ay4c785),              .ou24f3c   (rtd7263),

`endif
              .ep7b60  (ep7b60),              .jr3db04 (jr3db04)             ) ;
uiea1bc  bl50de0(              .rst_n           (rst_n),              .sclk            (sclk),

`ifdef PHY_REG_P2
              .ofe783d     (aab9dcb),              .ou24f3c   (db2868c),

`else 
              .ofe783d     (ay4c785),              .ou24f3c   (rtd7263),

`endif
              .ep7b60  (gof0a1a),              .jr3db04 (an850d1),              .wje7c76       (wje7c76)             ) ;
assign  bn279e0 = ~ dmdae4c & lq6c13c & ip4e07c & ~tw4f1c;
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n)        gqb9a11  <= 1'b0;     else if (tw4f1c || (fc4b5d && zxe3f3f))        gqb9a11  <= 1'b1;     else        gqb9a11  <= 1'b0;
end
assign ep3cf07   = (tw4f1c || fc4b5d)  ? su7d47a : zxe3f3f ;



`ifdef DDR3_2T

always @(lq6c13c or tw4f1c or ip4e07c or an8096b or ldfcff9 or she7fcf or mg1f9ff or         mrc98f0 or zxe3f3f or su7d47a or oh8f404 or sh7a025 or vid012d) begin   casex ({lq6c13c, tw4f1c, ip4e07c, an8096b})         4'b00xx: begin                 fncd089     = ldfcff9;              su6844e     = 1'b1;              ne42271     = she7fcf;              fc1138b     = 1'b1;              ba89c5b      = mg1f9ff;              sh4e2db      = 1'b1;              zx716dd      = mrc98f0;              tj8b6ee      = zxe3f3f;              end      4'b01xx: begin                  fncd089     = 1'b1;              su6844e     = ldfcff9;              ne42271     = 1'b1;              fc1138b     = she7fcf;              ba89c5b      = 1'b1;              sh4e2db      = mg1f9ff;              zx716dd      = mrc98f0;              tj8b6ee      = zxe3f3f;              end
      4'b11xx: begin                  fncd089     = ldfcff9;              su6844e     = ldfcff9;              ne42271     = she7fcf;              fc1138b     = she7fcf;              ba89c5b      = mg1f9ff;              sh4e2db      = mg1f9ff;              zx716dd      = mrc98f0;              tj8b6ee      = zxe3f3f;              end      4'b1000: begin                  fncd089     = ldfcff9;              su6844e     = ldfcff9;              ne42271     = she7fcf;              fc1138b     = she7fcf;              ba89c5b      = mg1f9ff;              sh4e2db      = mg1f9ff;              zx716dd      = su7d47a;              tj8b6ee      = su7d47a;              end      4'b1010 : begin                  fncd089 = 1'b1;              su6844e = ldfcff9;              ne42271 = 1'b1;              fc1138b = she7fcf;              ba89c5b  = 1'b1;              sh4e2db  = mg1f9ff;              zx716dd  = su7d47a;              tj8b6ee  = su7d47a;              end      4'b1001 : begin                  fncd089 = sh7a025;              su6844e = 1'b1;              ne42271 = vid012d;              fc1138b = 1'b1;              ba89c5b  = oh8f404;              sh4e2db  = 1'b1;              zx716dd  = su7d47a;              tj8b6ee  = su7d47a;              end
      default: begin              fncd089     = ldfcff9;              su6844e     = ldfcff9;              ne42271     = she7fcf;              fc1138b     = she7fcf;              ba89c5b      = mg1f9ff;              sh4e2db      = mg1f9ff;              zx716dd      = zxe3f3f;              tj8b6ee      = zxe3f3f;              end    endcase
end


`else

always @(tw4f1c or ldfcff9 or she7fcf or mg1f9ff or         mrc98f0 or zxe3f3f ) begin   casex ({tw4f1c})         1'b0: begin                 fncd089     = ldfcff9;              su6844e     = 1'b1;              ne42271     = she7fcf;              fc1138b     = 1'b1;              ba89c5b      = mg1f9ff;              sh4e2db      = 1'b1;              zx716dd      = mrc98f0;              tj8b6ee      = zxe3f3f;              end      1'b1: begin                  fncd089     = 1'b1;              su6844e     = ldfcff9;              ne42271     = 1'b1;              fc1138b     = she7fcf;              ba89c5b      = 1'b1;              sh4e2db      = mg1f9ff;              zx716dd      = mrc98f0;              tj8b6ee      = zxe3f3f;              end      default: begin              fncd089     = ldfcff9;              su6844e     = ldfcff9;              ne42271     = she7fcf;              fc1138b     = she7fcf;              ba89c5b      = mg1f9ff;              sh4e2db      = mg1f9ff;              zx716dd      = zxe3f3f;              tj8b6ee      = zxe3f3f;              end    endcase
end

`endif



assign ofe783d   = (tw4f1c)  ? je3fe7d : db278e3 ;
assign ep3c1ed  = (tw4f1c)  ? ((lq6c13c) ? cz5b5c9 : dzf9f51) : cz5b5c9 ;
assign ice0f6c   = (tw4f1c)  ? facfa8f  : rv1c7e7 ;

always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        gb5b777  <= {`ROW_WDTH{1'b0}};        icdbbbc   <= {`ROW_WDTH{1'b0}};        fnddde1  <= {`CKE_WIDTH{1'b0}};        byeef0e <= {`CS_WIDTH{1'b0}};        go77873  <= 1'b0;        ukbc398  <= 1'b0;        hoe1cc0 <= 1'b0;        vke602 <= 1'b0;        vi73013 <= 1'b0;        ou9809b <= 1'b0;        zkc04d9  <= {`CS_WIDTH{1'b0}};        ux26ca  <= {`CS_WIDTH{1'b0}};     end     else begin        gb5b777  <= fa63c28;        icdbbbc   <= cz5b5c9 ;        fnddde1  <= {`CKE_WIDTH{je1e143}};        byeef0e <= db278e3 | {`CS_WIDTH{oub931e}};        go77873  <= faeb5fb;        ukbc398  <= ld5afda;        hoe1cc0 <= rt6bad7;        vke602 <= fa5d6bf;        vi73013 <= tw25aeb;        ou9809b <= ph2d75a;        zkc04d9  <= dzd7ed7;        ux26ca  <= ntbf6bf;     end
end




`ifdef PHY_REG_P2

always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        lf13655  <= {`ROW_WDTH{1'b0}};        vx9b2ae   <= {`ROW_WDTH{1'b0}};        ald9576  <= {`CKE_WIDTH{1'b0}};        rgcabb5   <= {`CKE_WIDTH{1'b0}};        nr55daa <= {`CS_WIDTH{1'b0}};        aab9dcb   <= {`CS_WIDTH{1'b0}};        kfaed56  <= 1'b0;        by76ab5  <= 1'b0;        jrb55aa <= 1'b0;        vxaad56 <= 1'b0;        kq56ab7 <= 1'b0;        rvb55b9 <= 1'b0;        hdaadce  <= {`CS_WIDTH{1'b0}};        cm56e77  <= {`CS_WIDTH{1'b0}};        dob73b9     <= {`BANK_WIDTH{1'b0}};     end     else begin        lf13655  <= hofb5ff;        vx9b2ae   <= lqdaffb ;        ald9576  <= dzd7fdb | db2868c;        rgcabb5   <= {`CKE_WIDTH{facfa8f}};        nr55daa <= ntbfedf;        aab9dcb   <= ay4c785;        kfaed56  <= cmff6fe;        by76ab5  <= xwfb7f1;        jrb55aa <= icdbf8b;        vxaad56 <= dmdfc59;        kq56ab7 <= psfe2cb;        rvb55b9 <= xwf165b;        hdaadce  <= db8b2da;        cm56e77  <= go596d7;        dob73b9     <= wwff3ea;     end
end

`endif 





`ifdef PHY_REG_P2

assign   db39f1 = lf13655;
assign   bn1cf8e = vx9b2ae;
assign   psf1da9  = ald9576;
assign   vx8ed4b  = rgcabb5;
assign   ou3e3b5   = nr55daa;
assign   al4bf03   = kfaed56;
assign   hb5f81c   = by76ab5;
assign   ou8d2fc  = jrb55aa;
assign   ne697e0  = vxaad56;
assign   jp4a34b  = kq56ab7;
assign   en51a5f  = rvb55b9;
assign   rg76a5e  = hdaadce;
assign   hdb52f2  = cm56e77;
assign   xjfc0e7   = dob73b9;
assign   eae073e   = dob73b9;

`else




`ifdef PHY_REG 

assign   db39f1 = hofb5ff;
assign   bn1cf8e = lqdaffb;
assign   psf1da9  = dzd7fdb | db2868c;
assign   vx8ed4b  = {`CKE_WIDTH{facfa8f}};
assign   ou3e3b5   = ntbfedf;
assign   al4bf03   = cmff6fe;
assign   hb5f81c   = xwfb7f1;
assign   ou8d2fc  = icdbf8b;
assign   ne697e0  = dmdfc59;
assign   jp4a34b  = psfe2cb;
assign   en51a5f  = xwf165b;
assign   rg76a5e  = db8b2da;
assign   hdb52f2  = go596d7;
assign   xjfc0e7   = wwff3ea;
assign   eae073e   = wwff3ea;


`else


assign   jp4a34b  = tw25aeb;
assign   en51a5f  = ph2d75a;
assign   ou8d2fc  = rt6bad7;
assign   ne697e0  = fa5d6bf;
assign   al4bf03   = faeb5fb;   
assign   hb5f81c   = ld5afda;   
assign   xjfc0e7   = mecb6b9;
assign   eae073e   = mecb6b9;
assign   db39f1 = fa63c28;
assign   bn1cf8e = cz5b5c9;
assign   ou3e3b5   = db278e3 | {`CS_WIDTH{oub931e}};
assign   psf1da9  = je1e143 | rtd7263;
assign   vx8ed4b  = rv1c7e7;
assign   rg76a5e  = dzd7ed7;
assign   hdb52f2  = ntbf6bf;

`endif



`endif


always@* begin lq6c13c<=pua8071[0];kd609e3<=pua8071[1];tw4f1c<=pua8071[2];db278e3<={ddr_cs_n>>1,pua8071[3]};ux3c71f<={ddr_ba>>1,pua8071[4]};jpe38fc<={ddr_addr>>1,pua8071[5]};rv1c7e7<=pua8071[6];zxe3f3f<={zmb8369>>1,pua8071[7]};mg1f9ff<=pua8071[8];ldfcff9<=pua8071[9];she7fcf<=pua8071[10];je3fe7d<={jr6d1c>>1,pua8071[11]};wwff3ea<={wl368e6>>1,pua8071[12]};dzf9f51<={uxb4734>>1,pua8071[13]};facfa8f<=pua8071[14];su7d47a<={nt1cd21>>1,pua8071[15]};qgea3d0<={pfe690e>>1,pua8071[16]};uv51e80<=pua8071[17];oh8f404<=pua8071[18];sh7a025<=pua8071[19];vid012d<=pua8071[20];an8096b<=pua8071[21];fc4b5d<=pua8071[22];tw25aeb<=pua8071[23];ph2d75a<=pua8071[24];rt6bad7<=pua8071[25];fa5d6bf<=pua8071[26];faeb5fb<=pua8071[27];ld5afda<=pua8071[28];dzd7ed7<={zx716dd>>1,pua8071[29]};ntbf6bf<={tj8b6ee>>1,pua8071[30]};hofb5ff<={gb5b777>>1,pua8071[31]};lqdaffb<={icdbbbc>>1,pua8071[32]};dzd7fdb<={fnddde1>>1,pua8071[33]};ntbfedf<={byeef0e>>1,pua8071[34]};cmff6fe<=pua8071[35];xwfb7f1<=pua8071[36];icdbf8b<=pua8071[37];dmdfc59<=pua8071[38];psfe2cb<=pua8071[39];xwf165b<=pua8071[40];db8b2da<={zkc04d9>>1,pua8071[41]};go596d7<={ux26ca>>1,pua8071[42]};mecb6b9<={gocee59>>1,pua8071[43]};cz5b5c9<={ay772c8>>1,pua8071[44]};dmdae4c<=pua8071[45];rtd7263<={ou24f3c>>1,pua8071[46]};oub931e<=pua8071[47];mrc98f0<={ep3cf07>>1,pua8071[48]};ay4c785<={ofe783d>>1,pua8071[49]};fa63c28<={ep3c1ed>>1,pua8071[50]};je1e143<=pua8071[51];gof0a1a<={ep7b60>>1,pua8071[52]};an850d1<={jr3db04>>1,pua8071[53]};db2868c<={czed827>>1,pua8071[54]};end
always@* begin ks1500e[2047]<=mirror_on;ks1500e[2046]<=aye5d77;ks1500e[2044]<=ddr_cs_n[0];ks1500e[2040]<=ddr_ba[0];ks1500e[2032]<=ddr_addr[0];ks1500e[2018]<=ux26ca[0];ks1500e[2017]<=ddr_cke;ks1500e[1989]<=gocee59[0];ks1500e[1987]<=zmb8369[0];ks1500e[1931]<=ay772c8[0];ks1500e[1927]<=ddr_we_n;ks1500e[1865]<=pfe690e[0];ks1500e[1859]<=fnddde1[0];ks1500e[1844]<=jr3db04[0];ks1500e[1815]<=nrc8209;ks1500e[1806]<=ddr_cas_n;ks1500e[1682]<=ks34877;ks1500e[1671]<=byeef0e[0];ks1500e[1640]<=czed827[0];ks1500e[1582]<=ou24f3c[0];ks1500e[1565]<=ddr_ras_n;ks1500e[1488]<=gb5b777[0];ks1500e[1485]<=ice0f6c;ks1500e[1326]<=fc1138b;ks1500e[1317]<=gda43b9;ks1500e[1295]<=go77873;ks1500e[1210]<=sh4e2db;ks1500e[1189]<=fncd089;ks1500e[1172]<=puee68;ks1500e[1116]<=bn279e0;ks1500e[1087]<=hoe1cc0;ks1500e[1082]<=jr6d1c[0];ks1500e[1023]<=hdbf975;ks1500e[1009]<=zkc04d9[0];ks1500e[932]<=nt1cd21[0];ks1500e[929]<=icdbbbc[0];ks1500e[922]<=ep7b60[0];ks1500e[744]<=tj8b6ee[0];ks1500e[742]<=ep3c1ed[0];ks1500e[663]<=ne42271;ks1500e[605]<=ba89c5b;ks1500e[594]<=gqb9a11;ks1500e[586]<=qi21dcd;ks1500e[543]<=ukbc398;ks1500e[504]<=ou9809b;ks1500e[466]<=coa39a4;ks1500e[372]<=zx716dd[0];ks1500e[371]<=ofe783d[0];ks1500e[331]<=su6844e;ks1500e[297]<=ui77342;ks1500e[252]<=vi73013;ks1500e[233]<=uxb4734[0];ks1500e[185]<=ep3cf07[0];ks1500e[126]<=vke602;ks1500e[116]<=wl368e6[0];end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule
`timescale 1 ns / 100 ps
module mt90cd2 (
              rst_n,
              sclk,
              ofe783d,
              ou24f3c,

              ep7b60,
              jr3db04
             );
input                       rst_n;
input                       sclk;
input   [`CS_WIDTH-1:0]     ofe783d;
input   [`CS_WIDTH-1:0]     ou24f3c;
output  [`CS_WIDTH-1:0]     ep7b60;
output  [`CS_WIDTH -1 :0]   jr3db04;
reg     [`CS_WIDTH-1:0]     ep7b60   ;
reg     [`CS_WIDTH -1 :0]   jr3db04  ;
reg [`CS_WIDTH - 1 : 0] ay4c785;
reg [`CS_WIDTH - 1 : 0] rtd7263;
reg [2047:0] ks1500e;
wire [1:0] pua8071;

localparam rt4038b = 2,hq1c5e = 32'hfdffd42b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;

always @(posedge sclk  or negedge rst_n) begin     if (!rst_n) begin        ep7b60 <= {`CS_WIDTH{1'b0}};     end     else begin        ep7b60 <= ay4c785;     end
end
always @(posedge sclk  or negedge rst_n) begin     if (!rst_n) begin        jr3db04   <= {`CS_WIDTH{1'b0}};        end       else begin        jr3db04   <= rtd7263;       end
end
always@* begin ay4c785<={ofe783d>>1,pua8071[0]};rtd7263<={ou24f3c>>1,pua8071[1]};end
always@* begin ks1500e[2047]<=ou24f3c[0];ks1500e[1023]<=ofe783d[0];end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule
`timescale 1 ns / 100 ps
module uiea1bc (
              rst_n,
              sclk,
              ofe783d,
              ou24f3c,
              ep7b60,
              jr3db04,

              wje7c76
             );
input                       rst_n;
input                       sclk;
input   [`CS_WIDTH-1:0]     ofe783d;
input   [`CS_WIDTH-1:0]     ou24f3c;
input   [`CS_WIDTH-1:0]     ep7b60;
input   [`CS_WIDTH -1 :0]   jr3db04;
output  [`CS_WIDTH-1:0]     wje7c76;
wire    [`CS_WIDTH-1:0]     wje7c76  ;

`ifdef PHY_REG

`else

`endif
reg qg46c2e;
reg [`CS_WIDTH - 1 : 0] ay4c785;
reg [`CS_WIDTH - 1 : 0] rtd7263;
reg [`CS_WIDTH - 1 : 0] gof0a1a;
reg [`CS_WIDTH - 1 : 0] an850d1;
reg [2047:0] ks1500e;
wire [4:0] pua8071;

`ifdef PHY_REG

`else

`endif

localparam rt4038b = 5,hq1c5e = 32'hfdffe0cb;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef PHY_REG


`else


`endif


`ifdef PHY_REG

assign   wje7c76   = gof0a1a | an850d1 ;

`else

assign   wje7c76   = ay4c785 | rtd7263;

`endif


always@* begin qg46c2e<=pua8071[0];ay4c785<={ofe783d>>1,pua8071[1]};rtd7263<={ou24f3c>>1,pua8071[2]};gof0a1a<={ep7b60>>1,pua8071[3]};an850d1<={jr3db04>>1,pua8071[4]};end
always@* begin ks1500e[2047]<=ofe783d[0];ks1500e[2046]<=ou24f3c[0];ks1500e[2044]<=ep7b60[0];ks1500e[2040]<=jr3db04[0];ks1500e[1023]<=rst_n;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule






























`timescale 1 ns / 100 ps
module ui774c8 (
   clk ,
   rst_n ,
   init_start ,  
   ldc83e3 , 
   qt41f1e ,
   fn7b806 ,
   vi7c7a8 ,
   rte3d42 ,
   ba1ea17 ,
   qi98423 ,
   jea85d8 ,
   the666b ,
   oh3335e ,
   ls99af5 ,
   zxcd7aa ,
   zx6bd56 ,
   sh5eab7 ,
   eaf55bd ,
   hdaade8 ,
   xwc566d ,
   fpbfbb7 ,
   fne9198,
   suff38e,
   ic4663b ,
   lq6621f ,
   init_done
   );
input    clk;
input    rst_n;
input    init_start;
input    ldc83e3;
input    qt41f1e ;
input    fn7b806 ;
input    vi7c7a8 ;
input    rte3d42 ;
output   ba1ea17 ;
output   qi98423 ;
output   jea85d8 ;
output   the666b ;
output   oh3335e ;
output   ls99af5 ;
output   zxcd7aa ;
output   zx6bd56 ;
output   sh5eab7 ;
output   eaf55bd ;
output   hdaade8 ;
output   xwc566d ;
output   fpbfbb7 ;
output   ic4663b ;
output   lq6621f ;
output   init_done ;
output   fne9198 ;
output   suff38e;

`define IDLE_I        0

`define WAIT          1

`define NOP_I         2

`define MRS0          3

`define MRS1          4

`define MRS2          5

`define MRS3          6

`define ZQ            7

`define TXPR_I        8

`define TZQINIT_I     9

`define TMOD_I        10

`define N_M2          11

`define M2M           12

`define N_M0          13

`define M0M           14

`define N_M1          15

`define M1M           16

`define N_M3          17

`define M3M           18
reg  [18:0]          ui774c8;
reg  [18:0]          hqb2cd6;
reg                  ba1ea17 ;
reg                  gqb3592;
reg                  qi98423;
reg                  gqbcd00;
reg                  jea85d8;
reg                  ec92363;
reg                  the666b;
reg                  ou8d8c6;
reg                  oh3335e;
reg                  fa6318b;
reg                  ls99af5;
reg                  kdc62d4;
reg                  zxcd7aa;
reg                  xl8b528;
reg                  zx6bd56;
reg                  qgd4a3f;
reg                  sh5eab7;
reg                  rv28fc7;
reg                  eaf55bd;
reg                  je3f1f2;
reg                  hdaade8;
reg                  zxc7c9d;
reg                  xwc566d;
reg                  ie3400f;
reg                  xy93b8d;
reg                  ou9dc6b;
reg                  viee358;
reg                  jp71ac2;
reg                  wy8d617;
reg                  bl6b0b8;
reg                  fpbfbb7, rtc2e33;
reg                  fne9198, vkb8cf4;
reg                  suff38e, ri2f9bc;
reg                  ic4663b;
reg                  psf4767 ;
reg                  init_done;
reg                  ep1d9d1;
reg                  lq6621f;
reg                  go67466;
reg                  ng3a330;
reg                  god1983;
wire                 fc8cc18;

`ifdef CS_WIDTH_4

`else

`ifdef CS_WIDTH_2

`else

`endif

`endif

`ifdef CS_WIDTH_4

`else

`ifdef CS_WIDTH_2

`else

`endif

`endif

`ifdef CS_WIDTH_4

`else

`ifdef CS_WIDTH_2

`else

`endif

`endif

`ifdef CS_WIDTH_4

`else

`ifdef CS_WIDTH_2

`else

`endif

`endif
reg gbc3768;
reg tw3061a;
reg vk830d2;
reg sjbbb91;
reg gbc349d;
reg aa1a4ed;
reg [18 : 0] pfd2768;
reg [18 : 0] zm93b46;
reg ec9da33;
reg kd4e2a5;
reg cm68cc5;
reg kq46628;
reg ir33141;
reg ou98a0d;
reg vic5068;
reg ph28342;
reg qt41a17;
reg epd0bd;
reg kq685ec;
reg nr7152d;
reg kf17b0a;
reg pubd855;
reg zxec2ab;
reg th6155f;
reg qiaaff;
reg fn557f8;
reg cbabfc7;
reg rt5fe3d;
reg ose598b;
reg czf8f79;
reg zxc7bcd;
reg vx3de6e;
reg suef377;
reg jc79bb8;
reg dzcddc3;
reg [2047:0] ks1500e;
wire [34:0] pua8071;

`define IDLE_I        0

`define WAIT          1

`define NOP_I         2

`define MRS0          3

`define MRS1          4

`define MRS2          5

`define MRS3          6

`define ZQ            7

`define TXPR_I        8

`define TZQINIT_I     9

`define TMOD_I        10

`define N_M2          11

`define M2M           12

`define N_M0          13

`define M0M           14

`define N_M1          15

`define M1M           16

`define N_M3          17

`define M3M           18

`ifdef CS_WIDTH_4

`else

`ifdef CS_WIDTH_2

`else

`endif

`endif

`ifdef CS_WIDTH_4

`else

`ifdef CS_WIDTH_2

`else

`endif

`endif

`ifdef CS_WIDTH_4

`else

`ifdef CS_WIDTH_2

`else

`endif

`endif

`ifdef CS_WIDTH_4

`else

`ifdef CS_WIDTH_2

`else

`endif

`endif

localparam rt4038b = 35,hq1c5e = 32'hfdfff40b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`define IDLE_I        0


`define WAIT          1


`define NOP_I         2


`define MRS0          3


`define MRS1          4


`define MRS2          5


`define MRS3          6


`define ZQ            7


`define TXPR_I        8


`define TZQINIT_I     9


`define TMOD_I        10


`define N_M2          11


`define M2M           12


`define N_M0          13


`define M0M           14


`define N_M1          15


`define M1M           16


`define N_M3          17


`define M3M           18


`ifdef CS_WIDTH_4


`else


`ifdef CS_WIDTH_2


`else


`endif


`endif


`ifdef CS_WIDTH_4


`else


`ifdef CS_WIDTH_2


`else


`endif


`endif


`ifdef CS_WIDTH_4


`else


`ifdef CS_WIDTH_2


`else


`endif


`endif


`ifdef CS_WIDTH_4


`else


`ifdef CS_WIDTH_2


`else


`endif


`endif











`define IDLE_I        0



`define WAIT          1



`define NOP_I         2



`define MRS0          3



`define MRS1          4



`define MRS2          5



`define MRS3          6



`define ZQ            7



`define TXPR_I        8



`define TZQINIT_I     9



`define TMOD_I        10



`define N_M2          11



`define M2M           12



`define N_M0          13



`define M0M           14



`define N_M1          15



`define M1M           16



`define N_M3          17



`define M3M           18





assign               fc8cc18 = aa1a4ed || init_done || vx3de6e;




always @ (negedge rst_n or posedge clk) begin   if (!rst_n) lq6621f <=  'b0;   else if (gbc3768 && !dzcddc3) lq6621f <=  'b1;   else if (dzcddc3)  lq6621f <=  'b0;
end
always @ (negedge rst_n or posedge clk) begin   if (!rst_n) go67466 <=  'b0;   else go67466 <=  init_done;
end



always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin      ui774c8   <=  19'b1;      ba1ea17         <=  1'b0;      qi98423       <=  1'b0;      jea85d8       <=  1'b0;      the666b       <=  1'b0;      oh3335e       <=  1'b0;      ls99af5       <=  1'b0;      zxcd7aa       <=  1'b0;      zx6bd56       <=  1'b0;      sh5eab7       <=  1'b0;      eaf55bd       <=  1'b0;      hdaade8       <=  1'b0;      xwc566d        <=  1'b0;      xy93b8d   <=  1'b0;      viee358   <=  1'b0;      wy8d617   <=  1'b0;      fpbfbb7         <=  1'b0;      fne9198       <=  1'b0;      suff38e       <=  1'b0;      ic4663b    <=  1'b0;      init_done  <=  1'b0;      ng3a330 <=  1'b0;
   end   else begin      ui774c8 <= zm93b46;      ba1ea17         <=  ec9da33;      qi98423       <=  kd4e2a5;      jea85d8       <=  cm68cc5;      the666b       <=  kq46628;      oh3335e       <=  ir33141;      ls99af5       <=  ou98a0d;      zxcd7aa       <=  vic5068;      zx6bd56       <=  ph28342;      sh5eab7       <=  qt41a17;      eaf55bd       <=  epd0bd;      hdaade8       <=  kq685ec;      xwc566d        <=  nr7152d;      xy93b8d   <=  pubd855;      viee358   <=  th6155f;      wy8d617   <=  fn557f8;      fpbfbb7         <=  cbabfc7;      fne9198       <=  rt5fe3d;      suff38e       <=  ose598b;      ic4663b    <=  czf8f79;      init_done  <=  zxc7bcd;      ng3a330 <=  jc79bb8;
   end
end




always @ (pfd2768 or tw3061a or vk830d2 or          sjbbb91 or kf17b0a or qiaaff or          zxec2ab or gbc349d or aa1a4ed or          lq6621f or xwc566d or suff38e or zxec2ab or qiaaff          or kf17b0a or ba1ea17 or fpbfbb7 or ic4663b or jea85d8 or fne9198 or suef377) begin
hqb2cd6 = 19'b0;
gqbcd00 = 1'b0;
ep1d9d1 = 1'b0;
ou8d8c6 = 1'b0;
fa6318b = 1'b0;
kdc62d4 = 1'b0;
xl8b528 = 1'b0;
qgd4a3f = 1'b0;
rv28fc7 = 1'b0;
je3f1f2 = 1'b0;
zxc7c9d = 1'b0;
ie3400f = xwc566d;
ri2f9bc = suff38e;
jp71ac2 = zxec2ab;
bl6b0b8 = qiaaff;
ou9dc6b = kf17b0a;
gqb3592 = ba1ea17;
rtc2e33 = fpbfbb7;
psf4767 = ic4663b;
ec92363 = jea85d8;
vkb8cf4 = fne9198;
god1983 = suef377;
case (1)        pfd2768[`IDLE_I] : begin      gqbcd00 = 1'b1;      gqb3592 = 1'b0;
      ec92363 = 1'b0;
      ou8d8c6 = 1'b0;      fa6318b = 1'b0;      kdc62d4 = 1'b0;      xl8b528 = 1'b0;      qgd4a3f = 1'b0;      rv28fc7 = 1'b0;      je3f1f2 = 1'b0;      zxc7c9d = 1'b0;      ie3400f  = 1'b0;      ou9dc6b = 1'b0;      jp71ac2 = 1'b0;      bl6b0b8 = 1'b0;      rtc2e33 = 1'b0;      vkb8cf4 = 1'b0;      ri2f9bc = 1'b0;      psf4767 = 1'b0;      ep1d9d1 = 1'b0;
      if (lq6621f ) begin if (jc79bb8) begin            hqb2cd6[`TXPR_I] = 1'b1;            gqb3592 = 1'b0;            ec92363 = 1'b1;            ie3400f = 1'b1;         end else begin            hqb2cd6[`WAIT] = 1'b1;            gqb3592 = 1'b1;            gqbcd00 = 1'b0; end      end      else         hqb2cd6[`IDLE_I] = 1'b1;   end
                   pfd2768[`WAIT] : begin      if (tw3061a) begin         hqb2cd6[`TXPR_I] = 1'b1;         gqb3592 = 1'b0;         ec92363 = 1'b1;         ie3400f = 1'b1;         god1983 = 1'b1;      end      else hqb2cd6[`WAIT] = 1'b1;   end                   pfd2768[`TXPR_I] : begin      if (vk830d2) begin         hqb2cd6[`MRS2] = 1'b1;         ec92363 = 1'b0;         kdc62d4 = 1'b1;         ou9dc6b = 1'b1;         ie3400f = 1'b0;      end      else hqb2cd6[`TXPR_I] = 1'b1;   end               pfd2768[`MRS2] : begin

`ifdef CS_WIDTH_4
     hqb2cd6[`N_M2] = 1'b1;

`else



`ifdef CS_WIDTH_2
     hqb2cd6[`N_M2] = 1'b1;


`else
      hqb2cd6[`NOP_I] = 1'b1;      ie3400f = 1'b1;      ri2f9bc = 1'b1;


`endif



`endif
      kdc62d4 = 1'b0;    end  pfd2768[`N_M2] : begin   hqb2cd6[`M2M] = 1'b1;     je3f1f2 = 1'b1;  end pfd2768[`M2M] : begin     hqb2cd6[`NOP_I] = 1'b1;      ie3400f = 1'b1;      ri2f9bc = 1'b1;      je3f1f2 = 1'b0; end                   pfd2768[`NOP_I] : begin      if (sjbbb91) begin         ie3400f = 1'b0;         if (kf17b0a) begin            hqb2cd6[`MRS3] = 1'b1;            xl8b528 = 1'b1;            ou9dc6b = 1'b0;            bl6b0b8 = 1'b1;            ri2f9bc = 1'b0;         end         else if (qiaaff) begin            hqb2cd6[`MRS1] = 1'b1;            fa6318b = 1'b1;            bl6b0b8 = 1'b0;            jp71ac2 = 1'b1;            ri2f9bc = 1'b0;         end
         else if (zxec2ab) begin            hqb2cd6[`MRS0] = 1'b1;            ou8d8c6 = 1'b1;            ie3400f = 1'b0;            jp71ac2 = 1'b0;            ri2f9bc = 1'b0;         end      end      else hqb2cd6[`NOP_I] = 1'b1;
   end            





 pfd2768[`MRS3] : begin

`ifdef CS_WIDTH_4
     hqb2cd6[`N_M3] = 1'b1;

`else



`ifdef CS_WIDTH_2
     hqb2cd6[`N_M3] = 1'b1;


`else
      hqb2cd6[`NOP_I] = 1'b1;      ie3400f = 1'b1;      ri2f9bc = 1'b1;


`endif



`endif
      xl8b528 = 1'b0;    end  pfd2768[`N_M3] : begin   hqb2cd6[`M3M] = 1'b1;     zxc7c9d = 1'b1;  end pfd2768[`M3M] : begin     hqb2cd6[`NOP_I] = 1'b1;      ie3400f = 1'b1;      ri2f9bc = 1'b1;      zxc7c9d = 1'b0; end
            





   pfd2768[`MRS1] : begin

`ifdef CS_WIDTH_4
     hqb2cd6[`N_M1] = 1'b1;

`else



`ifdef CS_WIDTH_2
     hqb2cd6[`N_M1] = 1'b1;


`else
      hqb2cd6[`NOP_I] = 1'b1;      ie3400f = 1'b1;      ri2f9bc = 1'b1;


`endif



`endif
      fa6318b = 1'b0;    end  pfd2768[`N_M1] : begin   hqb2cd6[`M1M] = 1'b1;     rv28fc7 = 1'b1;  end pfd2768[`M1M] : begin     hqb2cd6[`NOP_I] = 1'b1;      ie3400f = 1'b1;      ri2f9bc = 1'b1;      rv28fc7 = 1'b0; end
             





   pfd2768[`MRS0] : begin

`ifdef CS_WIDTH_4
     hqb2cd6[`N_M0] = 1'b1;

`else



`ifdef CS_WIDTH_2
     hqb2cd6[`N_M0] = 1'b1;


`else
      hqb2cd6[`TMOD_I] = 1'b1;      vkb8cf4 = 1'b1;      ie3400f = 1'b1;


`endif



`endif
      ou8d8c6 = 1'b0;    end  pfd2768[`N_M0] : begin   hqb2cd6[`M0M] = 1'b1;     qgd4a3f = 1'b1;  end pfd2768[`M0M] : begin     hqb2cd6[`TMOD_I] = 1'b1;      ie3400f = 1'b1;      vkb8cf4 = 1'b1;      qgd4a3f = 1'b0; end
                  pfd2768[`TMOD_I] : begin      if (gbc349d) begin         hqb2cd6[`ZQ] = 1'b1;         vkb8cf4 = 1'b0;         rtc2e33 = 1'b1;         ie3400f = 1'b0;      end      else hqb2cd6[`TMOD_I] = 1'b1;   end               pfd2768[`ZQ] : begin         hqb2cd6[`TZQINIT_I] = 1'b1;         rtc2e33 = 1'b0;         psf4767 = 1'b1;   end                       pfd2768[`TZQINIT_I] : begin      if (aa1a4ed) begin         hqb2cd6[`IDLE_I] = 1'b1;         psf4767 = 1'b0;         ep1d9d1 = 1'b1;         gqbcd00 = 1'b1;      end      else begin            hqb2cd6[`TZQINIT_I] = 1'b1;      end   end   default : begin      hqb2cd6[`IDLE_I] = 1'b1;   end
endcase
end
always@* begin gbc3768<=pua8071[0];tw3061a<=pua8071[1];vk830d2<=pua8071[2];sjbbb91<=pua8071[3];gbc349d<=pua8071[4];aa1a4ed<=pua8071[5];pfd2768<={ui774c8>>1,pua8071[6]};zm93b46<={hqb2cd6>>1,pua8071[7]};ec9da33<=pua8071[8];kd4e2a5<=pua8071[9];cm68cc5<=pua8071[10];kq46628<=pua8071[11];ir33141<=pua8071[12];ou98a0d<=pua8071[13];vic5068<=pua8071[14];ph28342<=pua8071[15];qt41a17<=pua8071[16];epd0bd<=pua8071[17];kq685ec<=pua8071[18];nr7152d<=pua8071[19];kf17b0a<=pua8071[20];pubd855<=pua8071[21];zxec2ab<=pua8071[22];th6155f<=pua8071[23];qiaaff<=pua8071[24];fn557f8<=pua8071[25];cbabfc7<=pua8071[26];rt5fe3d<=pua8071[27];ose598b<=pua8071[28];czf8f79<=pua8071[29];zxc7bcd<=pua8071[30];vx3de6e<=pua8071[31];suef377<=pua8071[32];jc79bb8<=pua8071[33];dzcddc3<=pua8071[34];end
always@* begin ks1500e[2047]<=ldc83e3;ks1500e[2046]<=qt41f1e;ks1500e[2044]<=fn7b806;ks1500e[2040]<=vi7c7a8;ks1500e[2032]<=rte3d42;ks1500e[2016]<=ui774c8[0];ks1500e[1984]<=hqb2cd6[0];ks1500e[1941]<=rtc2e33;ks1500e[1920]<=gqb3592;ks1500e[1835]<=vkb8cf4;ks1500e[1793]<=gqbcd00;ks1500e[1679]<=ie3400f;ks1500e[1623]<=ri2f9bc;ks1500e[1539]<=ec92363;ks1500e[1526]<=fc8cc18;ks1500e[1405]<=ng3a330;ks1500e[1310]<=xy93b8d;ks1500e[1199]<=psf4767;ks1500e[1145]<=viee358;ks1500e[1030]<=ou8d8c6;ks1500e[1023]<=init_start;ks1500e[970]<=bl6b0b8;ks1500e[839]<=zxc7c9d;ks1500e[763]<=god1983;ks1500e[702]<=go67466;ks1500e[572]<=ou9dc6b;ks1500e[485]<=wy8d617;ks1500e[419]<=je3f1f2;ks1500e[351]<=ep1d9d1;ks1500e[242]<=jp71ac2;ks1500e[209]<=rv28fc7;ks1500e[104]<=qgd4a3f;ks1500e[52]<=xl8b528;ks1500e[26]<=kdc62d4;ks1500e[13]<=fa6318b;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule































`timescale 1 ns / 100 ps
module jce196d (
   clk,
   rst_n,
   ba1ea17,
   jea85d8,
   param_txpr,
   fne9198,
   param_tmod,
   suff38e,
   param_tmrd,
   ic4663b,
   param_tzqinit ,
   ldc83e3 , 
   qt41f1e ,
   fn7b806 ,
   vi7c7a8 ,
   rte3d42 ,
   the666b,
   oh3335e,
   ls99af5,
   zxcd7aa

);
input                      clk;
input                      rst_n;
input                      ba1ea17;
input                      jea85d8;
input                      fne9198;
input                      suff38e;
input                      ic4663b;
input                      the666b;
input                      oh3335e;
input                      ls99af5;
input                      zxcd7aa;
input [`TXPR_WIDTH-1:0]    param_txpr;
input [`TMOD_WIDTH-1:0]    param_tmod;
input [`TMRD_WIDTH-1:0]    param_tmrd;
input [`TZQINIT_WIDTH-1:0] param_tzqinit;
output                     ldc83e3 ;
output                     qt41f1e ;
output                     fn7b806 ;
output                     vi7c7a8 ;
output                     rte3d42 ;
reg [3:0]                  rg6c783;
reg [7:0]                  fa63c1b;
reg [5:0]                  je1e0db;
reg [`TXPR_WIDTH-1:0]      gof06da;
reg [`TMOD_WIDTH-1:0]      vk836d0;
reg [`TMRD_WIDTH-1:0]      mee0511;
reg [`TZQINIT_WIDTH-1:0]   sudb41a;
wire                       byda0d0;
wire                       vid0682;
wire                       ldc83e3 ;
reg                        qt41f1e ;
reg                        vi7c7a8 ;
wire                       fn7b806;
reg                        rte3d42;

`ifdef SIM

`else

`endif
reg zz9b0ce;
reg hbd8676;
reg [`TXPR_WIDTH - 1 : 0] wjc33b7;
reg bn19dbd;
reg [`TMOD_WIDTH - 1 : 0] uicedee;
reg su7d53d;
reg [`TMRD_WIDTH - 1 : 0] ribddd8;
reg vkbdc12;
reg [`TZQINIT_WIDTH - 1 : 0] tuee093;
reg ofd6f6a;
reg vkb7b55;
reg lsbdaaa;
reg shed553;
reg [3 : 0] gd9a862;
reg [7 : 0] med4315;
reg [5 : 0] gda18a9;
reg [`TXPR_WIDTH - 1 : 0] phc54c;
reg [`TMOD_WIDTH - 1 : 0] ui62a66;
reg [`TMRD_WIDTH - 1 : 0] zmadcd9;
reg [`TZQINIT_WIDTH - 1 : 0] wya9989;
reg os4cc48;
reg rg66241;
reg [2047:0] ks1500e;
wire [21:0] pua8071;

`ifdef SIM

`else

`endif

localparam rt4038b = 22,hq1c5e = 32'hfdffea0b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef SIM


`else


`endif











`ifdef SIM
   assign      byda0d0 = (gd9a862 == 4'h3);   assign      vid0682 =(med4315 == 8'h03);   assign      ldc83e3 = (gda18a9 == 6'h02);


`else
   assign      byda0d0 = &gd9a862;   assign      vid0682 = &med4315;   assign      ldc83e3 = (gda18a9 == 6'h19);

`endif

assign      fn7b806 = (zmadcd9 == (ribddd8 - 1'b1));





always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      rg6c783 <=  'b0;   else if (os4cc48)      rg6c783 <=  'b0;   else if (zz9b0ce)      rg6c783 <=  gd9a862 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      fa63c1b <=  'b0;   else if (rg66241)      fa63c1b <=  'b0;   else if (os4cc48)      fa63c1b <=  med4315 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      je1e0db <=  'b0;   else if (ldc83e3 )      je1e0db <=  'b0;   else if (rg66241)      je1e0db <=  gda18a9 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      gof06da <=  'b0;   else if (qt41f1e )      gof06da <=  'b0;   else if (hbd8676)      gof06da <=  phc54c + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      qt41f1e <=  1'b0;   else if (phc54c == (wjc33b7 -2))      qt41f1e <=  1'b1;   else      qt41f1e <=  1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      vk836d0 <=  'b0;   else if (vi7c7a8 )      vk836d0 <=  'b0;   else if (bn19dbd || ofd6f6a)      vk836d0 <=  ui62a66 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      vi7c7a8 <=  1'b0;   else if (ui62a66 == (uicedee -2))      vi7c7a8 <=  1'b1;   else      vi7c7a8 <=  1'b0;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      mee0511 <=  'b0;   else if (fn7b806 )      mee0511 <=  'b0;   else if (su7d53d || lsbdaaa || shed553 || vkb7b55)      mee0511 <=  zmadcd9 + 1;
end




always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      sudb41a <=  'b0;   else if (rte3d42 )      sudb41a <=  'b0;   else if (vkbdc12)      sudb41a <=  wya9989 + 1;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n)      rte3d42 <=  1'b0;   else if (wya9989 == (tuee093 - 2))      rte3d42 <=  1'b1;   else      rte3d42 <=  1'b0;
end


always@* begin zz9b0ce<=pua8071[0];hbd8676<=pua8071[1];wjc33b7<={param_txpr>>1,pua8071[2]};bn19dbd<=pua8071[3];uicedee<={param_tmod>>1,pua8071[4]};su7d53d<=pua8071[5];ribddd8<={param_tmrd>>1,pua8071[6]};vkbdc12<=pua8071[7];tuee093<={param_tzqinit>>1,pua8071[8]};ofd6f6a<=pua8071[9];vkb7b55<=pua8071[10];lsbdaaa<=pua8071[11];shed553<=pua8071[12];gd9a862<={rg6c783>>1,pua8071[13]};med4315<={fa63c1b>>1,pua8071[14]};gda18a9<={je1e0db>>1,pua8071[15]};phc54c<={gof06da>>1,pua8071[16]};ui62a66<={vk836d0>>1,pua8071[17]};zmadcd9<={mee0511>>1,pua8071[18]};wya9989<={sudb41a>>1,pua8071[19]};os4cc48<=pua8071[20];rg66241<=pua8071[21];end
always@* begin ks1500e[2047]<=jea85d8;ks1500e[2046]<=param_txpr[0];ks1500e[2044]<=fne9198;ks1500e[2040]<=param_tmod[0];ks1500e[2032]<=suff38e;ks1500e[2016]<=param_tmrd[0];ks1500e[1984]<=ic4663b;ks1500e[1921]<=param_tzqinit[0];ks1500e[1795]<=the666b;ks1500e[1630]<=mee0511[0];ks1500e[1542]<=oh3335e;ks1500e[1212]<=sudb41a[0];ks1500e[1036]<=ls99af5;ks1500e[1023]<=ba1ea17;ks1500e[815]<=vk836d0[0];ks1500e[755]<=vid0682;ks1500e[407]<=gof06da[0];ks1500e[377]<=byda0d0;ks1500e[203]<=je1e0db[0];ks1500e[101]<=fa63c1b[0];ks1500e[50]<=rg6c783[0];ks1500e[25]<=zxcd7aa;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule





























`timescale 1 ns / 100 ps
module cz7fd84 (
   
   clk,
   rst_n,
   param_txpr,
   param_tmod,
   param_tmrd,
   param_tzqinit ,
   init_start ,
   
   
   lq6621f,
   qi98423, 
   the666b,
   oh3335e,
   ls99af5,
   zxcd7aa,
   zx6bd56,
   sh5eab7,
   eaf55bd,
   hdaade8,

   xwc566d,
   fpbfbb7,
   init_done
);
input       clk;
input       rst_n;
input [`TXPR_WIDTH-1:0] param_txpr;
input [`TMOD_WIDTH-1:0] param_tmod;
input [`TMRD_WIDTH-1:0]  param_tmrd;
input [`TZQINIT_WIDTH-1:0] param_tzqinit;
input       init_start;
output      init_done;
output      lq6621f;
output      qi98423;
output      the666b;
output      oh3335e;
output      ls99af5;
output      zxcd7aa;
output      zx6bd56;
output      sh5eab7;
output      eaf55bd;
output      hdaade8;
output      xwc566d;
output      fpbfbb7;
wire       clk;
wire       rst_n;
wire       ba1ea17;
wire       jea85d8;
wire       fne9198;
wire       suff38e;
wire       ic4663b;
wire       ldc83e3;
wire       qt41f1e;
wire       fn7b806;
wire       vi7c7a8;
wire       rte3d42;
wire       init_start;
wire [`TXPR_WIDTH-1:0] param_txpr;
wire [`TMOD_WIDTH-1:0] param_tmod;
wire [`TMRD_WIDTH-1:0]  param_tmrd;
wire [`TZQINIT_WIDTH-1:0] param_tzqinit;
wire       lq6621f;
wire       qi98423;
wire       the666b;
wire       oh3335e;
wire       ls99af5;
wire       zxcd7aa;
wire       xwc566d;
wire       fpbfbb7;
reg qg46c2e;
reg gbc3768;
reg zz9b0ce;
reg hbd8676;
reg bn19dbd;
reg su7d53d;
reg vkbdc12;
reg tw3061a;
reg vk830d2;
reg sjbbb91;
reg gbc349d;
reg aa1a4ed;
reg [2047:0] ks1500e;
wire [11:0] pua8071;



localparam rt4038b = 12,hq1c5e = 32'hfdffe44b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;











ui774c8 lqf4cc8(   .clk              (clk) ,   .rst_n            (qg46c2e) ,   .init_start       (gbc3768) ,   .ldc83e3   (tw3061a) ,   .qt41f1e        (vk830d2) ,   .fn7b806        (sjbbb91) ,   .vi7c7a8        (gbc349d) ,   .rte3d42     (aa1a4ed) ,   .ba1ea17               (ba1ea17) ,   .qi98423             (qi98423) ,   .jea85d8             (jea85d8) ,   .the666b             (the666b) ,   .oh3335e             (oh3335e) ,   .ls99af5             (ls99af5) ,   .zxcd7aa             (zxcd7aa) ,   .zx6bd56             (zx6bd56) ,   .sh5eab7             (sh5eab7) ,   .eaf55bd             (eaf55bd) ,   .hdaade8             (hdaade8) ,   .xwc566d              (xwc566d) ,   .fpbfbb7               (fpbfbb7) ,   .fne9198             (fne9198),   .suff38e             (suff38e),   .ic4663b          (ic4663b) ,   .lq6621f          (lq6621f) ,   .init_done        (init_done)   );




jce196d nt91825(   .clk              (clk),   .rst_n            (qg46c2e),   .ba1ea17               (zz9b0ce),   .the666b             (the666b) ,   .oh3335e             (oh3335e) ,   .ls99af5             (ls99af5) ,   .zxcd7aa             (zxcd7aa) ,   .jea85d8             (hbd8676),   .param_txpr       (param_txpr),   .fne9198             (bn19dbd),   .param_tmod       (param_tmod),   .suff38e             (su7d53d),   .param_tmrd       (param_tmrd),   .ic4663b          (vkbdc12),   .param_tzqinit    (param_tzqinit) ,   .ldc83e3   (ldc83e3) ,   .qt41f1e        (qt41f1e) ,   .fn7b806        (fn7b806) ,   .vi7c7a8        (vi7c7a8) ,   .rte3d42     (rte3d42)
);
always@* begin qg46c2e<=pua8071[0];gbc3768<=pua8071[1];zz9b0ce<=pua8071[2];hbd8676<=pua8071[3];bn19dbd<=pua8071[4];su7d53d<=pua8071[5];vkbdc12<=pua8071[6];tw3061a<=pua8071[7];vk830d2<=pua8071[8];sjbbb91<=pua8071[9];gbc349d<=pua8071[10];aa1a4ed<=pua8071[11];end
always@* begin ks1500e[2047]<=init_start;ks1500e[2046]<=ba1ea17;ks1500e[2044]<=jea85d8;ks1500e[2040]<=fne9198;ks1500e[2033]<=suff38e;ks1500e[2019]<=ic4663b;ks1500e[1991]<=ldc83e3;ks1500e[1934]<=qt41f1e;ks1500e[1821]<=fn7b806;ks1500e[1595]<=vi7c7a8;ks1500e[1142]<=rte3d42;ks1500e[1023]<=rst_n;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule

































`timescale 1 ns / 100 ps
module hb5a5ff (
    
    sclk,			   
    rst_n,			   
    bnbffb9,
    gb6583d,
    oh2c1ec,
    wyacaa4,
    ng2a041,
    eace0a9,
    qt70549,
    wy82a4c,
    uk15260,
    ux230f9,
    clocking_good,
    wl_phase_dly_cnt,

    
    wl_done,
    wl_err,
    wl_act,
    blf6489,
    oh2cc2e,
    rt4f946,
    ux85d13,
    lq7ca36,
    mgb6966,
    pu83cc6,
    sjb4b30,
    vvf3192,
    ou98c97,
    qge51b3,
    wl_rst_datapath
    );
input                        sclk;
input                        rst_n;
input                        bnbffb9;
input  [`AL_WIDTH-1:0]       gb6583d;
input  [`CWL_WIDTH-1:0]      oh2c1ec;
input                        wyacaa4;
input  [`CS_WIDTH -1:0]      ng2a041;
input                        eace0a9;
input   [ 2: 0]              qt70549;
input   [ 1: 0]              wy82a4c;
input                        uk15260;
input   [10: 0]              ux230f9;
input                        clocking_good;
input  [7:0]                 wl_phase_dly_cnt;
output                       wl_done;
output                       wl_err;
output                       wl_act;
output                       blf6489;
output                       oh2cc2e;
output                       rt4f946;
output  [15: 0]              ux85d13;
output  [`CS_WIDTH-1:0]      lq7ca36;
output                       mgb6966;
output                       pu83cc6;
output  [(`DQS_WIDTH)-1:0]   sjb4b30;
output  [(`DQS_WIDTH)-1:0]   vvf3192;
output  [7*(`DQS_WIDTH)-1:0] ou98c97;
output  [`CS_WIDTH-1 :0]     qge51b3;
output                       wl_rst_datapath;

`define   TDQS         1'b0

`define   POS_CNT      1'b0

`define   NEG_CNT      1'b1

`define   START_DLY    8'h0

`define   START_POL    1'b0

`define   PHASE_COMP   6'd8 // phase difference between write level dqs and normal write dqs: 8 * 37ps = 0.3ns

`define    tWLDQSEN_sclk       (`TWLDQSEN - `TMOD) // (13-6) =  7 (for 200MHz Sclk)

`define    tWLMRD_sclk         (`TWLMRD - `TMOD)   // (20-6) = 14 (for 200MHz Sclk)

`define    tWLO_sclk           (`TWLO/5)+6  //  tWLOmax = 9ns (so wait for ((9/5)+1) = 2 sclk)

`define    ODTLoff_tAOFmax_sclk  7  // ODTLoff = (AL+CWL-2) tck, tAOFmax = 0.7 tck

`define    MAX_DQS_DLY_CNT       8'd88 //    0.14+(82 x 0.025) = 2.2ns 

`define    MIN_DQS_DLY_CNT       8'h80 //    msb=1 for neg value. cnt=0 

`define    WL_DQS_PHASE_DLY_CNT1    (`WL_DQS_PHASE_DLY_CNT)
parameter  oscec60            = 4'd0;
parameter  ne76300  = 4'd1;
parameter  epb1803       = 4'd2;
parameter  je8c01d  = 4'd3;
parameter  al600ea    = 4'd4;
parameter  uk755     = 4'd5;
parameter  hd3aa8   = 4'd6;
parameter  gd1d546  = 4'd7;
parameter  meeaa35        = 4'd8;
parameter  th551a9    = 4'd9;
parameter  jea8d4f          = 4'd10;
parameter  os46a7a      = 4'd11;
parameter  je353d0          = 4'd12;
parameter  swa9e82       = 4'd13;
parameter  ld4f410          = 4'd14;
parameter  uv7a087           = 3'd0;
parameter  lqd043d          = 3'd1;
parameter  wy821eb       = 3'd2;
parameter  ym10f59      = 3'd3;
parameter  sw87ac8         = 3'd4;
parameter  rv3d640      = 3'd5;
parameter  jceb206           = 3'd0;
parameter  os59032         = 3'd1;
parameter  blc8191         = 3'd2;
parameter  pf40c8e          = 3'd3;
parameter  xl6477         = 3'd4;
parameter  jr323bf     = 3'd5;

`ifdef CS_WIDTH_1
parameter zz91dff = 1;
parameter db8effe = 0;
parameter cm77ff6 = 0;
parameter rvbffb0 = 0;

`endif

`ifdef CS_WIDTH_2
parameter zz91dff = 1;
parameter db8effe = 1;
parameter cm77ff6 = 0;
parameter rvbffb0 = 0;

`endif

`ifdef CS_WIDTH_4
parameter zz91dff = 1;
parameter db8effe = 1;
parameter cm77ff6 = 1;
parameter rvbffb0 = 1;

`endif
reg  [3:0]                   phbf685;
reg                          wl_act   ;
reg                          blf6489;
reg                          hod0bda;
reg                          oh85ed2;
reg  [`CS_WIDTH-1 :0]        ng2f695;
reg                          xj7b4aa;
reg  [7:0]                   jcda557;
reg  [7:0]                   jpd2aba;
reg  [(`DQS_WIDTH)-1:0]      ir955d7;
reg                          pu83cc6;
reg                          wl_done;
reg                          wl_err  ;
reg                          vvd7bd6;
reg                          zmbdeb7;
reg                          ykef5bb;
reg  [(`CS_WIDTH)-1:0]       gb7add8;
reg  [(`DQS_WIDTH)-1:0]      ald6ec4;
reg  [(`CS_WIDTH)-1:0]       ngb7625;
reg  [1:0]                   epbb12b;
reg                          pfd895d;
reg  [2:0]                   cmc4aee;
reg                          vk25771;
reg                          gq2bb8b;
reg  [2:0]                   vi5dc59;
reg                          zkee2ca;
reg                          pf71652;
reg                          rv8b296;
reg                          os594b7;
reg                          zkca5b9;
reg                          by52dcb;
reg  [1:0]                   vk96e5b;
reg                          zmb72db;
reg  [2:0]                   ukb96db;
reg                          gocb6d8;
reg                          gb5b6c1;
reg  [2:0]                   icdb60c;
reg                          ykdb060;
reg  [7:0]                   zxd8300;
reg  [7:0]                   icc1807;
reg                          tjc039;
reg                          mgb6966;
reg                          kse75;
reg                          ir73a9;
reg                          sj39d4d;
reg                          uicea6d;
reg                          oh2cc2e;
reg                          rt4f946;
reg  [`TWLMRD_WIDTH-1:0]     vi4da20;
reg  [`CS_WIDTH-1 :0]        qge51b3;
reg  [(`DQS_WIDTH)-1:0]      vvf3192;
reg  [7*(`DQS_WIDTH)-1:0]    ou98c97;
wire                         wl_rst_datapath;
wire [(`CS_WIDTH)-1:0]       tj3223;
wire [15: 0]                 ux85d13;
wire [(`WL_DQS_WIDTH)-1:0]   rtc88ff;
wire [7*(`WL_DQS_WIDTH)-1:0] qt447ff;
wire [`CS_WIDTH-1 :0]        lq7ca36;
wire [(`DQS_WIDTH)-1:0]      sjb4b30;
wire                         uifff29;
wire                         goff948;
wire                         blfca40;
wire                         ose5207;
wire                         ep29039;
wire [3:0]                   fa481cd;
wire [2:0]                   vv40e6a;
wire                         sj7357;
wire [`CS_WIDTH -1:0]        ux39abd;
wire [15: 0]                 nrcd5ed;
wire [15: 0]                 gb6af6e;
reg                          vi57b75;
reg                          zmbdbab;
reg                          aledd5b;
reg                          xj6eadc;
reg                          cz756e7;
reg                          qvab73c;
reg  [7:0]                   uv5b9e4;

`ifdef CS_WIDTH_1

`else

`endif

`ifdef RDIMM

`else

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_2

`ifdef USER_SLOT_SIZE_1

`else

`endif

`endif

`ifdef CS_WIDTH_1

`endif
wire     wjdcf25;
genvar ipe792c;

`ifndef CS_WIDTH_1
genvar mg9dd8f;

`ifndef CS_WIDTH_2
genvar tue4b2d;
genvar ng2596a;

`endif //ifndef CS_WIDTH_2

`endif //ifndef CS_WIDTH_1

`ifdef CS_WIDTH_1

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif
reg sj2cb52;
reg [`AL_WIDTH - 1 : 0] kd65a94;
reg [`CWL_WIDTH - 1 : 0] vx2d4a4;
reg mr6a527;
reg [`CS_WIDTH - 1 : 0] fad555b;
reg ph949e3;
reg [2 : 0] ana4f1e;
reg [1 : 0] tj278f4;
reg sj3c7a7;
reg [10 : 0] vkb694;
reg ri1e9e7;
reg [7 : 0] ba40bf;
reg [3 : 0] fca79db;
reg kf3cedb;
reg kde76dd;
reg [`CS_WIDTH - 1 : 0] sw3b6ec;
reg uidb761;
reg [7 : 0] qgdbb08;
reg [7 : 0] rtdd841;
reg [(`DQS_WIDTH) - 1 : 0] vvec20e;
reg nr61077;
reg wl83bf;
reg al41dfc;
reg [(`CS_WIDTH) - 1 : 0] fcefe5;
reg [(`DQS_WIDTH) - 1 : 0] su77f2a;
reg [(`CS_WIDTH) - 1 : 0] phbf950;
reg [1 : 0] vvfca86;
reg sue5437;
reg [2 : 0] je2a1b9;
reg rt50dca;
reg pu86e56;
reg [2 : 0] tj372b2;
reg ymb9597;
reg necacb8;
reg ea565c2;
reg pub2e10;
reg ou97082;
reg rib8410;
reg [1 : 0] ldc2082;
reg ou10417;
reg [2 : 0] uk820b9;
reg ie105c9;
reg ym82e49;
reg [2 : 0] mt17248;
reg aab9244;
reg [7 : 0] enc9220;
reg [7 : 0] kq49104;
reg ho48820;
reg of44103;
reg je2081c;
reg ls40e2;
reg ls20712;
reg [`TWLMRD_WIDTH - 1 : 0] hd3893;
reg [(`CS_WIDTH) - 1 : 0] hd1c49e;
reg [(`WL_DQS_WIDTH) - 1 : 0] wje24f7;
reg [7 * (`WL_DQS_WIDTH) - 1 : 0] mt127bc;
reg ba93de4;
reg xl9ef23;
reg uvf791f;
reg cobc8fc;
reg xwe47e1;
reg [3 : 0] yz23f0b;
reg [2 : 0] ec1f85d;
reg zxfc2e9;
reg [`CS_WIDTH - 1 : 0] vie174e;
reg [15 : 0] hqba73;
reg [15 : 0] jc5d39a;
reg nre9cd3;
reg wj4e69e;
reg dm734f5;
reg cb9a7ab;
reg end3d5c;
reg vx9eae5;
reg [7 : 0] cmf572f;
reg qvab978;
reg [2047:0] ks1500e;
wire [74:0] pua8071;

`define   TDQS         1'b0

`define   POS_CNT      1'b0

`define   NEG_CNT      1'b1

`define   START_DLY    8'h0

`define   START_POL    1'b0

`define   PHASE_COMP   6'd8 // phase difference between write level dqs and normal write dqs: 8 * 37ps = 0.3ns

`define    tWLDQSEN_sclk       (`TWLDQSEN - `TMOD) // (13-6) =  7 (for 200MHz Sclk)

`define    tWLMRD_sclk         (`TWLMRD - `TMOD)   // (20-6) = 14 (for 200MHz Sclk)

`define    tWLO_sclk           (`TWLO/5)+6  //  tWLOmax = 9ns (so wait for ((9/5)+1) = 2 sclk)

`define    ODTLoff_tAOFmax_sclk  7  // ODTLoff = (AL+CWL-2) tck, tAOFmax = 0.7 tck

`define    MAX_DQS_DLY_CNT       8'd88 //    0.14+(82 x 0.025) = 2.2ns 

`define    MIN_DQS_DLY_CNT       8'h80 //    msb=1 for neg value. cnt=0 

`define    WL_DQS_PHASE_DLY_CNT1    (`WL_DQS_PHASE_DLY_CNT)

`ifdef CS_WIDTH_1

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_1

`else

`endif

`ifdef RDIMM

`else

`endif

`ifdef CS_WIDTH_4

`endif

`ifdef CS_WIDTH_2

`ifdef USER_SLOT_SIZE_1

`else

`endif

`endif

`ifdef CS_WIDTH_1

`endif


`ifndef CS_WIDTH_1


`ifndef CS_WIDTH_2



`endif //ifndef CS_WIDTH_2

`endif //ifndef CS_WIDTH_1

`ifdef CS_WIDTH_1

`endif

`ifdef CS_WIDTH_2

`endif

`ifdef CS_WIDTH_4

`endif

localparam rt4038b = 75,hq1c5e = 32'hfdffe42b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`define   TDQS         1'b0


`define   POS_CNT      1'b0


`define   NEG_CNT      1'b1


`define   START_DLY    8'h0


`define   START_POL    1'b0


`define   PHASE_COMP   6'd8 // phase difference between write level dqs and normal write dqs: 8 * 37ps = 0.3ns


`define    tWLDQSEN_sclk       (`TWLDQSEN - `TMOD) // (13-6) =  7 (for 200MHz Sclk)


`define    tWLMRD_sclk         (`TWLMRD - `TMOD)   // (20-6) = 14 (for 200MHz Sclk)


`define    tWLO_sclk           (`TWLO/5)+6  //  tWLOmax = 9ns (so wait for ((9/5)+1) = 2 sclk)


`define    ODTLoff_tAOFmax_sclk  7  // ODTLoff = (AL+CWL-2) tck, tAOFmax = 0.7 tck


`define    MAX_DQS_DLY_CNT       8'd88 //    0.14+(82 x 0.025) = 2.2ns 


`define    MIN_DQS_DLY_CNT       8'h80 //    msb=1 for neg value. cnt=0 


`define    WL_DQS_PHASE_DLY_CNT1    (`WL_DQS_PHASE_DLY_CNT)


`ifdef CS_WIDTH_1


`endif


`ifdef CS_WIDTH_2


`endif


`ifdef CS_WIDTH_4


`endif


`ifdef CS_WIDTH_1


`else


`endif


`ifdef RDIMM


`else


`endif


`ifdef CS_WIDTH_4


`endif


`ifdef CS_WIDTH_2


`ifdef USER_SLOT_SIZE_1


`else


`endif


`endif


`ifdef CS_WIDTH_1


`endif


`ifndef CS_WIDTH_1


`ifndef CS_WIDTH_2


`endif //ifndef CS_WIDTH_2


`endif //ifndef CS_WIDTH_1


`ifdef CS_WIDTH_1


`endif


`ifdef CS_WIDTH_2


`endif


`ifdef CS_WIDTH_4


`endif




































`define   TDQS         1'b0



`define   POS_CNT      1'b0



`define   NEG_CNT      1'b1



`define   START_DLY    8'h0



`define   START_POL    1'b0



`define   PHASE_COMP   6'd8 // phase difference between write level dqs and normal write dqs: 8 * 37ps = 0.3ns
                            







`define    tWLDQSEN_sclk       (`TWLDQSEN - `TMOD) // (13-6) =  7 (for 200MHz Sclk)



`define    tWLMRD_sclk         (`TWLMRD - `TMOD)   // (20-6) = 14 (for 200MHz Sclk)



`define    tWLO_sclk           (`TWLO/5)+6  //  tWLOmax = 9ns (so wait for ((9/5)+1) = 2 sclk)
                                                                                        

`define    ODTLoff_tAOFmax_sclk  7  // ODTLoff = (AL+CWL-2) tck, tAOFmax = 0.7 tck
                                                                                                                                                


`define    MAX_DQS_DLY_CNT       8'd88 //    0.14+(82 x 0.025) = 2.2ns 



`define    MIN_DQS_DLY_CNT       8'h80 //    msb=1 for neg value. cnt=0 





`define    WL_DQS_PHASE_DLY_CNT1    (`WL_DQS_PHASE_DLY_CNT)






`ifdef CS_WIDTH_1



`endif



`ifdef CS_WIDTH_2



`endif



`ifdef CS_WIDTH_4



`endif













always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      uv5b9e4   <= 8'h0;   end   else begin      uv5b9e4   <= ba40bf;   end
end




`ifdef CS_WIDTH_1

assign      sj7357 = 1'b1;

`else

assign      sj7357 = {{(`CS_WIDTH-1){1'b0}},1'b1};

`endif





always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      phbf685        <= oscec60;      wl_act          <= 1'b0;      blf6489     <= 1'b0;      hod0bda        <= 1'b0;      oh85ed2         <= 1'b0;      ng2f695         <= {`CS_WIDTH{1'b0}};      xj7b4aa     <= 1'b1;      jcda557    <= `START_DLY;      jpd2aba    <= `WL_DQS_PHASE_DLY_CNT1;            ir955d7      <= {`DQS_WIDTH{1'b0}};      pu83cc6    <= 1'b0;      wl_done         <= 1'b0;      wl_err          <= 1'b0;      vvd7bd6     <= 1'b0;      zmbdeb7    <= 1'b0;      ykef5bb     <= 1'b0;      gb7add8       <= {`CS_WIDTH{1'b0}};      ald6ec4     <= {{(`DQS_WIDTH-1){1'b0}},1'b1};      ngb7625      <= zxfc2e9;      epbb12b          <= 2'b00;      pfd895d   <= 1'b0;      cmc4aee        <= 3'b000;      vk25771 <= 1'b0;      gq2bb8b        <= 1'b0;   end   else begin      case (fca79db)  
         oscec60   :          begin                             ykef5bb     <= 1'b0;                           ng2f695         <= {`CS_WIDTH{1'b0}};                           blf6489     <= 1'b0;                           ir955d7      <= {`DQS_WIDTH{1'b0}};                           gb7add8       <= {`CS_WIDTH{1'b0}};                           ald6ec4     <= {{(`DQS_WIDTH-1){1'b0}},1'b1};                           ngb7625      <= zxfc2e9;                           jcda557    <= `START_DLY;                                                      jpd2aba    <= cmf572f;                           pfd895d   <= 1'b0;                       epbb12b          <= 2'b00;                           cmc4aee        <= 3'b000;               vk25771 <= 1'b0;                           gq2bb8b        <= 1'b0;                       if (sj2cb52 && !wl_done) begin                          wl_act    <= 1'b1;                          phbf685  <= ne76300;                       end                           else                              phbf685     <= oscec60;                           end                  ne76300  : begin                             if ((sw3b6ec == `CS_WIDTH) || (|(vvec20e))) begin                              ngb7625      <= zxfc2e9;                  vk25771 <= 1'b1;                              xj7b4aa     <= 1'b0;                              pfd895d   <= 1'b0;                              hod0bda        <= 1'b0;                              oh85ed2         <= 1'b0;                              cmc4aee        <= 3'b000;                              phbf685        <= je8c01d;                           end                           else begin                              pfd895d <= 1'b0;                              hod0bda      <= 1'b1;                              oh85ed2       <= 1'b0;                              cmc4aee      <= ec1f85d;                              vvd7bd6   <= 1'b1;                              phbf685      <= epb1803;                           end                           end         epb1803 :       begin                             vvd7bd6     <= 1'b0;                           if (mr6a527) begin                              ng2f695      <= sw3b6ec + 1;                              ngb7625   <= phbf950 + phbf950;                              phbf685     <= ne76300;                           end                           else                              phbf685     <= epb1803;                           end         je8c01d :  begin                 vk25771 <= 1'b0;                           if (ym82e49) begin                              blf6489  <= 1'b1;                              gq2bb8b     <= 1'b1;                              phbf685     <= al600ea;                           end                   else                              phbf685     <= je8c01d;                   end         al600ea :    begin                             xj7b4aa     <= 1'b0;                           gq2bb8b        <= 1'b0;               if (ls20712) begin                              ir955d7   <= vvec20e + 1;                              phbf685     <= uk755;               end                           else if (ls40e2)                              phbf685     <= jea8d4f;                   else                              phbf685     <= al600ea;                   end         uk755 :     begin                             if (vvec20e == `DQS_WIDTH) begin                              xj7b4aa  <= 1'b0;                              ir955d7   <= {`DQS_WIDTH{1'b0}};                              ald6ec4  <= {{(`DQS_WIDTH-1){1'b0}},1'b1};                              ykef5bb  <= 1'b1;                                    pu83cc6 <= 1'b0;                              phbf685     <= hd3aa8;                           end                           else begin                              ald6ec4   <= su77f2a + su77f2a;                              pu83cc6  <= ~pu83cc6;


`ifdef RDIMM
                              jcda557  <= `START_DLY;                              jpd2aba    <= cmf572f;


`else
                              jcda557  <= enc9220;                              jpd2aba  <= kq49104;


`endif
                              xj7b4aa   <= 1'b1;                              gq2bb8b      <= 1'b1;                              phbf685      <= al600ea;                           end                           end                  hd3aa8 :   begin                              ykef5bb   <= 1'b0;                           if (xwe47e1) begin                                pfd895d  <= 1'b0;                              hod0bda       <= 1'b0;                              oh85ed2        <= 1'b0;                              cmc4aee       <= ec1f85d;                              vvd7bd6    <= 1'b1;                              phbf685       <= gd1d546;               end                           else                              phbf685     <= hd3aa8;                           end              gd1d546 :  begin                              vvd7bd6  <= 1'b0;                           if (!mr6a527)                              phbf685     <= gd1d546;                           else  begin                              hod0bda     <= 1'b1;                              vvd7bd6  <= 1'b1;                              phbf685     <= meeaa35;                           end                           end                  meeaa35  :       begin                              vvd7bd6      <= 1'b0;               if (mr6a527) begin                              pfd895d <= 1'b1;                          epbb12b        <= vkb694[10:9];                              zmbdeb7  <= 1'b1;                              blf6489   <= 1'b0;                              phbf685      <= th551a9;                           end                           else                              phbf685      <= meeaa35;                           end              th551a9 :    begin                             zmbdeb7  <= 1'b0;                           if (!mr6a527)                              phbf685   <= th551a9;                           else begin                              pfd895d <= 1'b0;                            epbb12b        <= 2'b00;
                              hod0bda      <= 1'b0;                              oh85ed2       <= 1'b0;                              if (fcefe5 == `CS_WIDTH - 1) begin                                 gb7add8     <= {`CS_WIDTH{1'b0}};                                 ngb7625    <= zxfc2e9;                                                                                                                                    cmc4aee      <= ana4f1e;                                 vvd7bd6   <= 1'b1;                                 phbf685      <= os46a7a;                              end                              else begin                                 gb7add8     <= fcefe5 + 1;                                    jcda557  <= `START_DLY;                                                                  jpd2aba  <= cmf572f;                                 ngb7625    <= phbf950 + phbf950;                                 cmc4aee      <= 3'b000;                     vk25771 <= 1'b1;                                 phbf685      <= je8c01d;                              end                           end                           end          jea8d4f :          begin                                wl_act          <= 1'b0;                           blf6489     <= 1'b0;                           wl_err          <= 1'b1;                           wl_done         <= 1'b1;                           phbf685        <= oscec60;                           end          os46a7a :      begin                             vvd7bd6   <= 1'b0;                           if (!mr6a527)                              phbf685  <= os46a7a;                           else begin                              if (fcefe5 == `CS_WIDTH)                                 phbf685   <= je353d0;                              else begin                                 gb7add8  <= fcefe5 + 1;                                 ngb7625 <= phbf950 + phbf950;                                 vvd7bd6 <= 1'b1;                                 phbf685   <= os46a7a;                              end                           end                           end         je353d0 :          begin                                if (!ri1e9e7)                                 phbf685     <= swa9e82;                              else                                 phbf685     <= je353d0;                           end         swa9e82 :       begin                             if (ri1e9e7)                              phbf685     <= ld4f410;                           else                              phbf685     <= swa9e82;                           end
         ld4f410 :          begin                                wl_act          <= 1'b0;
                              blf6489     <= 1'b0;                              wl_err          <= 1'b0;                              wl_done         <= 1'b1;                              phbf685        <= oscec60;                           end         default :         begin                           phbf685        <= oscec60;                           end         endcase   end
end



always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      vi5dc59        <= uv7a087;      zkee2ca        <= 1'b0;      pf71652         <= 1'b0;      rv8b296     <= 1'b0;      os594b7    <= 1'b0;      zkca5b9     <= 1'b1;      by52dcb      <= 1'b0;      vk96e5b          <= 2'b00;      zmb72db   <= 1'b0;      ukb96db        <= 3'b000;      gocb6d8     <= 1'b0;      gb5b6c1  <= 1'b0;   end   else begin      case (tj372b2)  
         uv7a087   :         begin                             by52dcb      <= 1'b0;                                                      zkca5b9     <= 1'b0;                           zmb72db   <= 1'b0;                       vk96e5b          <= 2'b00;                           ukb96db        <= 3'b000;                           gb5b6c1   <= 1'b0;                           rv8b296     <= 1'b0;               if (rt50dca)                              vi5dc59     <= lqd043d;                           else                              vi5dc59     <= uv7a087;                           end                           lqd043d  :         begin                              zmb72db   <= 1'b1;                       vk96e5b          <= 2'b00;                             gocb6d8     <= 1'b1;                           vi5dc59        <= wy821eb;                           end         wy821eb :       begin                              gocb6d8        <= 1'b0;                           if (mr6a527) begin                              zmb72db  <= 1'b0;                              zkee2ca       <= 1'b0;                              pf71652        <= 1'b1;                                                            ukb96db       <= ec1f85d;                              rv8b296    <= 1'b1;                              zkca5b9    <= 1'b1;                              vi5dc59       <= ym10f59;                           end                           else                              vi5dc59       <= wy821eb;                           end         ym10f59 :      begin                             rv8b296       <= 1'b0;                           if (mr6a527) begin                              zmb72db  <= 1'b0;                              zkee2ca       <= 1'b0;                              pf71652        <= 1'b0;                              ukb96db       <= 3'b000;                              os594b7 <= 1'b1;                                      zkca5b9   <= 1'b0;                              vi5dc59      <= sw87ac8;                           end                           else                              vi5dc59      <= ym10f59;                           end                  sw87ac8 :         begin                             if (ba93de4) begin                              by52dcb   <= 1'b1;                              zkca5b9 <= 1'b1;                              vi5dc59    <= rv3d640;                           end                           else                              vi5dc59     <= sw87ac8;                           end              rv3d640 :      begin                             by52dcb   <= 1'b0;                           zkca5b9  <= 1'b0;                           if (cobc8fc) begin                                 gb5b6c1 <= 1'b1;                              vi5dc59      <= uv7a087;                           end                           else begin                              vi5dc59     <= rv3d640;                           end                           end         default :         begin                           vi5dc59        <= uv7a087;                           end         endcase   end
end



always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      icdb60c       <= jceb206;      ykdb060    <= 1'b0;      zxd8300  <= `START_DLY;      icc1807  <= `WL_DQS_PHASE_DLY_CNT1;            tjc039      <= 1'b0;      mgb6966     <= 1'b0;      kse75  <= 1'b0;      ir73a9         <= `POS_CNT;      sj39d4d          <= 1'b0;      uicea6d          <= 1'b0;   end   else begin      case (mt17248)           jceb206  :          begin                             tjc039      <= 1'b0;                           mgb6966     <= 1'b0;                           kse75  <= 1'b0;                           ir73a9         <= `POS_CNT;                           sj39d4d          <= 1'b0;                           uicea6d          <= 1'b0;                           ykdb060    <= 1'b0;                       if (pu86e56) begin                              zxd8300  <= qgdbb08;                              icc1807  <= rtdd841;                              tjc039   <= 1'b1;                              ykdb060 <= 1'b1;                          icdb60c    <= os59032;                       end                           else                              icdb60c    <= jceb206;                           end         os59032 :         begin                             tjc039   <= 1'b0;                           if (mgb6966) begin                              mgb6966  <= 1'b0;                              ykdb060 <= 1'b0;                              icdb60c     <= blc8191;                           end                           else begin                              mgb6966  <= 1'b1;                                      icdb60c     <= os59032;                           end                           end                  blc8191 :         begin                              if (uvf791f) begin                              ykdb060  <= 1'b1;                              icdb60c     <= pf40c8e;                           end                           else                              icdb60c     <= blc8191;                           end         pf40c8e  :         begin                              if (of44103 == 1'b0) begin                              if (ph949e3 == 1'b1)                                 ir73a9 <= `NEG_CNT;                                                               else                                 ir73a9 <= `POS_CNT;                              kse75 <= 1'b1;                              icdb60c       <= xl6477;                           end                           else  begin                              if (je2081c == `POS_CNT && ph949e3 == 1'b1)                                 icdb60c  <= jr323bf;                              else begin                                 if (je2081c == `NEG_CNT && ph949e3 == 1'b0)                                    ir73a9 <= `POS_CNT;                                 icdb60c  <= xl6477;                              end                           end                           end              xl6477 :         begin                              if (je2081c == `POS_CNT) begin                              if (nre9cd3) begin                                 zxd8300  <= 8'h00;                                        end                              else                                 zxd8300  <= enc9220 + 1;                              if ( end3d5c ) begin                                 icc1807  <= 8'h00;                              end                              else                                 icc1807  <= kq49104 + 1;                           end                           else begin


                              if (wj4e69e) begin                                 ir73a9 <= `POS_CNT;                              end                              else                                 zxd8300  <= enc9220 - 1;


                              if (!vx9eae5)                                 icc1807  <= kq49104 - 1;                           end                           if ( dm734f5 || cb9a7ab) begin                              sj39d4d        <= 1'b1;                              icdb60c     <= jceb206;                           end                           else begin                              tjc039    <= 1'b1;                                    icdb60c     <= os59032;                           end                           end
              jr323bf :     begin                             kse75  <= 1'b0;                           uicea6d          <= 1'b1;                           icdb60c       <= jceb206;                           end         default :         begin                           icdb60c       <= jceb206;                           end         endcase   end
end

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      vi57b75    <= 1'b0;   end   else if (enc9220 == 8'h9c)      vi57b75    <= 1'b1;   else      vi57b75    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      zmbdbab    <= 1'b0;   end   else if (enc9220 == 8'h1 || enc9220 == 8'h0)      zmbdbab    <= 1'b1;   else      zmbdbab    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      aledd5b    <= 1'b0;   end   else if (enc9220 == `MAX_DQS_DLY_CNT - 1)      aledd5b    <= 1'b1;   else      aledd5b    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      xj6eadc    <= 1'b0;   end   else if (enc9220 == `MIN_DQS_DLY_CNT + 1)      xj6eadc    <= 1'b1;   else      xj6eadc    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      cz756e7    <= 1'b0;   end   else if (kq49104 == 8'h9c)      cz756e7    <= 1'b1;   else      cz756e7    <= 1'b0;
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      qvab73c    <= 1'b0;   end   else if (kq49104 == 8'h1 || kq49104 == 8'h0)      qvab73c    <= 1'b1;   else      qvab73c    <= 1'b0;
end

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n)      qge51b3   <= {`CS_WIDTH{1'b0}};   else if (rib8410)      qge51b3   <= hd1c49e;   else if (al41dfc)      qge51b3   <= {`CS_WIDTH{1'b0}};
end
always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      oh2cc2e    <= 1'b0;      rt4f946   <= 1'b0;   end   else begin      oh2cc2e    <= nr61077  | ea565c2;      rt4f946   <= ie105c9 | wl83bf;   end
end
   assign  vv40e6a = (sw3b6ec[0] || fcefe5[0]) ? `WL_RNK1_RTT_NOM : `WL_RNK0_RTT_NOM; assign  wl_rst_datapath = (fca79db == je353d0) ? 1'b1 : 1'b0; assign  ux85d13  = (sue5437 || ou10417) ? jc5d39a : hqba73; assign  nrcd5ed = {3'b000,(kf3cedb | ymb9597) ,`TDQS,1'b0,(je2a1b9[2] | uk820b9[2]), 1'b0,                (kde76dd | necacb8) ,(je2a1b9[1] | uk820b9[1]),tj278f4[1],kd65a94,	(je2a1b9[0] | uk820b9[0]),tj278f4[0],sj3c7a7}; assign gb6af6e  = {3'b000,(vvfca86 | ldc2082),1'b0,vkb694[7:0]};




`ifdef CS_WIDTH_4



assign tj3223 = phbf950;


`endif




`ifdef CS_WIDTH_2



`ifdef USER_SLOT_SIZE_1
  assign tj3223 = {(phbf950[0] | phbf950[1]), 1'b0};


`else
  assign tj3223 = {(phbf950[0] | phbf950[1]), (phbf950[0] | phbf950[1])};


`endif



`endif




`ifdef CS_WIDTH_1
 assign tj3223 = phbf950;

`endif





always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      vi4da20    <= 4'h0;   end   else if (!pub2e10 || uidb761 || aab9244 || ou97082)      vi4da20    <= 4'h0;   else      vi4da20    <= hd3893 + 1;
end
assign  uifff29      = (hd3893 == `TMOD)                 ? 1'b1 : 1'b0;
assign  goff948  = (hd3893 == `tWLDQSEN_sclk)        ? 1'b1 : 1'b0;
assign  blfca40      = (hd3893 == `tWLO_sclk)            ? 1'b1 : 1'b0;
assign  ose5207    = (hd3893 == `tWLMRD_sclk)          ? 1'b1 : 1'b0;
assign  ep29039 = (hd3893 == `ODTLoff_tAOFmax_sclk) ? 1'b1 : 1'b0;

assign  sjb4b30    = su77f2a;
assign  lq7ca36     = ~phbf950;






assign  wjdcf25 =  (fca79db == jr323bf) ? 1'b1 : 1'b0;
          generate        begin        if(zz91dff == 1) begin           for (ipe792c=0; ipe792c<`DQS_WIDTH; ipe792c=ipe792c+1)           begin: bl6ea82           ip75417 ip75417(               .sclk              (sclk),               .rst_n             (rst_n),               .tjc039        (ho48820),               .wjdcf25    (qvab978),               .sj29fda            (phbf950[0]),               .qt7f6a6           (su77f2a[ipe792c]),               .cmd4d5b    (enc9220),               .fc356c1    (kq49104),               .en5b054     (rtc88ff[ipe792c]),               .qia938        (qt447ff[(7*ipe792c+6):(7*ipe792c)])               );           end         end     end     endgenerate


`ifndef CS_WIDTH_1
          generate        begin        if(db8effe == 1) begin           for (mg9dd8f=0; mg9dd8f<`DQS_WIDTH; mg9dd8f=mg9dd8f+1)           begin: an366c5           ip75417 ip75417(               .sclk              (sclk),               .rst_n             (rst_n),               .tjc039        (ho48820),               .wjdcf25    (qvab978),               .sj29fda            (phbf950[1]),               .qt7f6a6           (su77f2a[mg9dd8f]),               .cmd4d5b    (enc9220),               .fc356c1    (kq49104),               .en5b054     (rtc88ff[mg9dd8f+`DQS_WIDTH]),               .qia938        (qt447ff[((7*(mg9dd8f+`DQS_WIDTH))+6):(7*(mg9dd8f+`DQS_WIDTH))])               );           end         end     end     endgenerate


`ifndef CS_WIDTH_2
          generate        begin        if(cm77ff6 == 1) begin           for (tue4b2d=0; tue4b2d<`DQS_WIDTH; tue4b2d=tue4b2d+1)           begin: mrc677a           ip75417 ip75417(               .sclk              (sclk),               .rst_n             (rst_n),               .tjc039        (ho48820),               .wjdcf25    (qvab978),               .sj29fda            (phbf950[2]),               .qt7f6a6           (su77f2a[tue4b2d]),               .cmd4d5b    (enc9220),               .fc356c1    (kq49104),               .en5b054     (rtc88ff[tue4b2d+2*`DQS_WIDTH]),               .qia938        (qt447ff[((7*(tue4b2d+2*`DQS_WIDTH))+6):(7*(tue4b2d+2*`DQS_WIDTH))])               );           end         end     end     endgenerate          generate        begin        if(rvbffb0 == 1) begin           for (ng2596a=0; ng2596a<`DQS_WIDTH; ng2596a=ng2596a+1)           begin: yx4168b           ip75417 ip75417(               .sclk              (sclk),               .rst_n             (rst_n),               .tjc039        (ho48820),               .wjdcf25    (qvab978),               .sj29fda            (phbf950[3]),               .qt7f6a6           (su77f2a[ng2596a]),               .cmd4d5b    (enc9220),               .fc356c1    (kq49104),               .en5b054     (rtc88ff[ng2596a+3*`DQS_WIDTH]),               .qia938        (qt447ff[((7*(ng2596a+3*`DQS_WIDTH))+6):(7*(ng2596a+3*`DQS_WIDTH))])               );           end         end     end     endgenerate


`endif //ifndef CS_WIDTH_2



`endif //ifndef CS_WIDTH_1






assign ux39abd = (wl_act) ? lq7ca36 : fad555b;


`ifdef CS_WIDTH_1

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      vvf3192    <= {`DQS_WIDTH{1'b0}};      ou98c97       <= {(7*`DQS_WIDTH){1'b0}};   end   else begin      vvf3192    <= wje24f7;      ou98c97       <= mt127bc;   end
end

`endif




`ifdef CS_WIDTH_2

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      vvf3192    <= {`DQS_WIDTH{1'b0}};      ou98c97       <= {(7*`DQS_WIDTH){1'b0}};   end   else begin   case (vie174e)
      2'b10 : begin              vvf3192    <= wje24f7[`DQS_WIDTH-1 : 0];              ou98c97       <= mt127bc[(7*`DQS_WIDTH)-1 : 0];              end      2'b01 : begin              vvf3192    <= wje24f7[(2*`DQS_WIDTH)-1 : `DQS_WIDTH ];              ou98c97       <= mt127bc[(7*(2*`DQS_WIDTH))-1 : (7*`DQS_WIDTH)];              end      default : begin              vvf3192    <= wje24f7[`DQS_WIDTH-1 : 0];              ou98c97       <= mt127bc[(7*`DQS_WIDTH)-1 : 0];              end      endcase   end
end

`endif




`ifdef CS_WIDTH_4

always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      vvf3192    <= {`DQS_WIDTH{1'b0}};      ou98c97       <= {(7*`DQS_WIDTH){1'b0}};   end   else begin   case (vie174e)
      4'b1110 : begin              vvf3192    <= wje24f7[`DQS_WIDTH-1 : 0];              ou98c97       <= mt127bc[(7*`DQS_WIDTH)-1 : 0];              end      4'b1101 : begin              vvf3192    <= wje24f7[(2*`DQS_WIDTH)-1 : `DQS_WIDTH ];              ou98c97       <= mt127bc[(7*(2*`DQS_WIDTH))-1 : (7*`DQS_WIDTH)];              end      4'b1011 : begin              vvf3192    <= wje24f7[(3*`DQS_WIDTH)-1 : (2*`DQS_WIDTH) ];              ou98c97       <= mt127bc[(7*(3*`DQS_WIDTH))-1 : (7*(2*`DQS_WIDTH))];              end      4'b0111 : begin              vvf3192    <= wje24f7[(4*`DQS_WIDTH)-1 : (3*`DQS_WIDTH) ];              ou98c97       <= mt127bc[(7*(4*`DQS_WIDTH))-1 : (7*(3*`DQS_WIDTH))];              end      default : begin              vvf3192    <= wje24f7[`DQS_WIDTH-1 : 0];              ou98c97       <= mt127bc[(7*`DQS_WIDTH)-1 : 0];              end      endcase   end
end

`endif



always@* begin sj2cb52<=pua8071[0];kd65a94<={gb6583d>>1,pua8071[1]};vx2d4a4<={oh2c1ec>>1,pua8071[2]};mr6a527<=pua8071[3];fad555b<={ng2a041>>1,pua8071[4]};ph949e3<=pua8071[5];ana4f1e<={qt70549>>1,pua8071[6]};tj278f4<={wy82a4c>>1,pua8071[7]};sj3c7a7<=pua8071[8];vkb694<={ux230f9>>1,pua8071[9]};ri1e9e7<=pua8071[10];ba40bf<={wl_phase_dly_cnt>>1,pua8071[11]};fca79db<={phbf685>>1,pua8071[12]};kf3cedb<=pua8071[13];kde76dd<=pua8071[14];sw3b6ec<={ng2f695>>1,pua8071[15]};uidb761<=pua8071[16];qgdbb08<={jcda557>>1,pua8071[17]};rtdd841<={jpd2aba>>1,pua8071[18]};vvec20e<={ir955d7>>1,pua8071[19]};nr61077<=pua8071[20];wl83bf<=pua8071[21];al41dfc<=pua8071[22];fcefe5<={gb7add8>>1,pua8071[23]};su77f2a<={ald6ec4>>1,pua8071[24]};phbf950<={ngb7625>>1,pua8071[25]};vvfca86<={epbb12b>>1,pua8071[26]};sue5437<=pua8071[27];je2a1b9<={cmc4aee>>1,pua8071[28]};rt50dca<=pua8071[29];pu86e56<=pua8071[30];tj372b2<={vi5dc59>>1,pua8071[31]};ymb9597<=pua8071[32];necacb8<=pua8071[33];ea565c2<=pua8071[34];pub2e10<=pua8071[35];ou97082<=pua8071[36];rib8410<=pua8071[37];ldc2082<={vk96e5b>>1,pua8071[38]};ou10417<=pua8071[39];uk820b9<={ukb96db>>1,pua8071[40]};ie105c9<=pua8071[41];ym82e49<=pua8071[42];mt17248<={icdb60c>>1,pua8071[43]};aab9244<=pua8071[44];enc9220<={zxd8300>>1,pua8071[45]};kq49104<={icc1807>>1,pua8071[46]};ho48820<=pua8071[47];of44103<=pua8071[48];je2081c<=pua8071[49];ls40e2<=pua8071[50];ls20712<=pua8071[51];hd3893<={vi4da20>>1,pua8071[52]};hd1c49e<={tj3223>>1,pua8071[53]};wje24f7<={rtc88ff>>1,pua8071[54]};mt127bc<={qt447ff>>1,pua8071[55]};ba93de4<=pua8071[56];xl9ef23<=pua8071[57];uvf791f<=pua8071[58];cobc8fc<=pua8071[59];xwe47e1<=pua8071[60];yz23f0b<={fa481cd>>1,pua8071[61]};ec1f85d<={vv40e6a>>1,pua8071[62]};zxfc2e9<=pua8071[63];vie174e<={ux39abd>>1,pua8071[64]};hqba73<={nrcd5ed>>1,pua8071[65]};jc5d39a<={gb6af6e>>1,pua8071[66]};nre9cd3<=pua8071[67];wj4e69e<=pua8071[68];dm734f5<=pua8071[69];cb9a7ab<=pua8071[70];end3d5c<=pua8071[71];vx9eae5<=pua8071[72];cmf572f<={uv5b9e4>>1,pua8071[73]};qvab978<=pua8071[74];end
always@* begin ks1500e[2047]<=gb6583d[0];ks1500e[2046]<=oh2c1ec[0];ks1500e[2044]<=wyacaa4;ks1500e[2041]<=ng2a041[0];ks1500e[2039]<=epbb12b[0];ks1500e[2035]<=eace0a9;ks1500e[2030]<=pfd895d;ks1500e[2022]<=qt70549[0];ks1500e[2012]<=cmc4aee[0];ks1500e[1996]<=wy82a4c[0];ks1500e[1977]<=vk25771;ks1500e[1976]<=icc1807[0];ks1500e[1951]<=vvd7bd6;ks1500e[1945]<=uk15260;ks1500e[1906]<=gq2bb8b;ks1500e[1904]<=tjc039;ks1500e[1868]<=blfca40;ks1500e[1855]<=zmbdeb7;ks1500e[1842]<=ux230f9[0];ks1500e[1828]<=rv8b296;ks1500e[1806]<=uicea6d;ks1500e[1764]<=vi5dc59[0];ks1500e[1761]<=kse75;ks1500e[1689]<=ose5207;ks1500e[1663]<=ykef5bb;ks1500e[1637]<=clocking_good;ks1500e[1630]<=oh85ed2;ks1500e[1608]<=os594b7;ks1500e[1601]<=nrcd5ed[0];ks1500e[1565]<=vi4da20[0];ks1500e[1511]<=jpd2aba[0];ks1500e[1481]<=zkee2ca;ks1500e[1475]<=ir73a9;ks1500e[1330]<=ep29039;ks1500e[1278]<=gb7add8[0];ks1500e[1227]<=wl_phase_dly_cnt[0];ks1500e[1224]<=vv40e6a[0];ks1500e[1212]<=ng2f695[0];ks1500e[1169]<=zkca5b9;ks1500e[1167]<=zmb72db;ks1500e[1155]<=gb6af6e[0];ks1500e[1147]<=gb5b6c1;ks1500e[1082]<=tj3223[0];ks1500e[1051]<=aledd5b;ks1500e[1023]<=bnbffb9;ks1500e[1019]<=ngb7625[0];ks1500e[988]<=zxd8300[0];ks1500e[975]<=ir955d7[0];ks1500e[934]<=goff948;ks1500e[914]<=pf71652;ks1500e[903]<=sj39d4d;ks1500e[877]<=wjdcf25;ks1500e[815]<=hod0bda;ks1500e[800]<=ux39abd[0];ks1500e[755]<=jcda557[0];ks1500e[612]<=fa481cd[0];ks1500e[583]<=vk96e5b[0];ks1500e[573]<=gocb6d8;ks1500e[525]<=zmbdbab;ks1500e[509]<=ald6ec4[0];ks1500e[494]<=ykdb060;ks1500e[467]<=uifff29;ks1500e[438]<=uv5b9e4[0];ks1500e[407]<=phbf685[0];ks1500e[400]<=sj7357;ks1500e[377]<=xj7b4aa;ks1500e[291]<=by52dcb;ks1500e[286]<=ukb96db[0];ks1500e[262]<=vi57b75;ks1500e[247]<=icdb60c[0];ks1500e[233]<=qt447ff[0];ks1500e[219]<=qvab73c;ks1500e[116]<=rtc88ff[0];ks1500e[109]<=cz756e7;ks1500e[54]<=xj6eadc;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule








`timescale 1 ns / 100 ps
module ip75417 (
               sclk,
               rst_n,
               tjc039,
               wjdcf25,
               sj29fda,
               qt7f6a6,
               cmd4d5b,
               fc356c1,
               en5b054,
               qia938
               );
input         sclk;
input         rst_n;
input         tjc039;
input         wjdcf25;
input         sj29fda;
input         qt7f6a6;
input  [7:0]  cmd4d5b;
input  [7:0]  fc356c1;
output        en5b054;
output [6:0]  qia938;
reg           en5b054;
reg    [6:0]  qia938;
reg ho48820;
reg qvab978;
reg fa4829d;
reg uv414ea;
reg [7 : 0] eca754;
reg [7 : 0] os53aa1;
reg [2047:0] ks1500e;
wire [5:0] pua8071;

localparam rt4038b = 6,hq1c5e = 32'hfdffe0cb;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


always @ (posedge sclk or negedge rst_n) begin   if (!rst_n) begin      en5b054 <= 1'b0;      qia938    <= 7'h0;   end   else if (qvab978 && fa4829d & uv414ea ) begin      en5b054   <= os53aa1[7];      qia938      <= os53aa1[6:0];   end   else if (ho48820 && fa4829d & uv414ea ) begin      en5b054   <= eca754[7];      qia938      <= eca754[6:0];   end
end






always@* begin ho48820<=pua8071[0];qvab978<=pua8071[1];fa4829d<=pua8071[2];uv414ea<=pua8071[3];eca754<={cmd4d5b>>1,pua8071[4]};os53aa1<={fc356c1>>1,pua8071[5]};end
always@* begin ks1500e[2047]<=wjdcf25;ks1500e[2046]<=sj29fda;ks1500e[2044]<=qt7f6a6;ks1500e[2040]<=cmd4d5b[0];ks1500e[2033]<=fc356c1[0];ks1500e[1023]<=tjc039;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule






























`timescale 1 ns / 100 ps
module of4ee61 (

   clk,
   rst_n,
   fpbfbb7,
   lq6621f,
   addr_init_0,
   addr_init_1,
   addr_init_2,
   addr_init_3,
   the666b,
   oh3335e,
   ls99af5,
   zxcd7aa,
   zx6bd56,
   sh5eab7,
   eaf55bd,
   hdaade8,
   yxc60d6,
   kfbe06d,

   wl_act,
   ux85d13,
   oh2cc2e,
   dm66174,
   pu30ba2, 
   blf6489,


   fa47a08,
   rv3d042,
   kde8216,
   cz410b5,
   sj85ac,
   tu42d64,
   zz16b22,
   wyacaa4,
   mirror_on
   );
input                          clk;
input                          rst_n;
input                          fpbfbb7;
input                          the666b;
input                          oh3335e;
input                          ls99af5;
input                          zxcd7aa;
input                          zx6bd56;
input                          sh5eab7;
input                          eaf55bd;
input                          hdaade8;
input                          lq6621f;
input [15:0]                   addr_init_0;
input [15:0]                   addr_init_1;
input [15:0]                   addr_init_2;
input [15:0]                   addr_init_3;
input                          yxc60d6;
input                          kfbe06d;
input                          wl_act;
input                          oh2cc2e;
input                          dm66174;
input [`CS_WIDTH-1:0]          pu30ba2;
input [15:0]                   ux85d13;
input                          blf6489;
output [`CS_WIDTH-1 :0]        fa47a08;
output                         rv3d042;
output                         kde8216;
output                         cz410b5;
output [`BANK_WIDTH-1:0]       sj85ac;

`ifdef ROW_WIDTH_12
output [`ROW_WIDTH:0]          tu42d64 ;

`else
output [`ROW_WIDTH-1:0]        tu42d64 ;

`endif
output                         zz16b22;
output                         wyacaa4;
output                         mirror_on;
parameter  nrddcd2 =   7'h40   ;
parameter  neee696 =   7'h20   ;
parameter  vi734b2 =   7'h10   ;
parameter  qv9a593 =   7'h08   ;
parameter  nrd2c9c =  7'h04   ;
parameter  ng964e7 =  7'h02   ;
parameter  jeb273a =   7'h01   ;
reg [`CS_WIDTH-1 :0]    gb70644,  vk83224 ;
reg                     tj19123, pfc891f  ;
reg                     al448ff, ec247fd ;
reg                     cb23fe9,  ks1ff4d ;
reg [`BANK_WIDTH-1:0]   suffa69,    shfd348 ;

`ifdef ROW_WIDTH_12
reg [`ROW_WIDTH:0]      the9a44, rg4d226 ;

`else
reg [`ROW_WIDTH-1:0]    the9a44, rg4d226 ;

`endif
wire [`CS_WIDTH-1 :0]   fa47a08 ;
wire                    rv3d042  ;
wire                    kde8216 ;
wire                    cz410b5 ;
wire [`BANK_WIDTH-1:0]  sj85ac ;

`ifdef ROW_WIDTH_12
wire [`ROW_WIDTH:0]     tu42d64 ;

`else
wire [`ROW_WIDTH-1:0]   tu42d64 ;

`endif
wire                    ui675f6;
reg                    zz16b22;
reg                    wyacaa4;
reg                    psc02d5, ri16aa;
reg                    hqb552, pf5aa93;
wire                   mirror_on;
wire   [6:0]           mgbcf85;
wire                   ep9f793;
wire                   tufbc9c;
wire                   ykde4e2;
wire                   yxf2710;

`ifdef RDIMM

`else

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else

`ifdef CS_WIDTH_4

`else

`endif

`endif
reg oh8f2e6;
reg qg5cd50;
reg [15 : 0] ntaa03a;
reg [15 : 0] xj501d6;
reg [15 : 0] qv80eb7;
reg [15 : 0] ep75bd;
reg ofd6f6a;
reg vkb7b55;
reg lsbdaaa;
reg shed553;
reg of6aa9d;
reg jp554ed;
reg jraa76f;
reg os53b7e;
reg shedf88;
reg rgeedc0;
reg mtd03d;
reg [15 : 0] mg8897a;
reg ww681ec;
reg vv40f61;
reg [`CS_WIDTH - 1 : 0] do2f46a;
reg dzecb68;
reg [`CS_WIDTH - 1 : 0] wjd34b8;
reg [`CS_WIDTH - 1 : 0] ep9a5c4;
reg vvd2e24;
reg ym97127;
reg twb8938;
reg cmc49c3;
reg uk24e19;
reg xl270c8;
reg [`BANK_WIDTH - 1 : 0] vx38646;
reg [`BANK_WIDTH - 1 : 0] qtc3236;
reg fp191b5;
reg hqbbd2;
reg jc5de92;
reg goef492;
reg sh7a490;
reg [6 : 0] tjafe27;
reg mt90b80;
reg cb85c04;
reg uk2e025;
reg al70128;
reg [2047:0] ks1500e;
wire [41:0] pua8071;

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef ROW_WIDTH_12

`else

`endif

`ifdef RDIMM

`else

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else 

`endif

`ifdef CS_WIDTH_2

`else 

`ifdef CS_WIDTH_4

`else

`endif

`endif

`ifdef CS_WIDTH_2

`else

`ifdef CS_WIDTH_4

`else

`endif

`endif

localparam rt4038b = 42,hq1c5e = 32'hfdffe44b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef ROW_WIDTH_12


`else


`endif


`ifdef RDIMM


`else


`endif


`ifdef CS_WIDTH_2


`else 


`endif


`ifdef CS_WIDTH_2


`else 


`ifdef CS_WIDTH_4


`else


`endif


`endif


`ifdef CS_WIDTH_2


`else 


`endif


`ifdef CS_WIDTH_2


`else 


`ifdef CS_WIDTH_4


`else


`endif


`endif


`ifdef CS_WIDTH_2


`else 


`endif


`ifdef CS_WIDTH_2


`else 


`ifdef CS_WIDTH_4


`else


`endif


`endif


`ifdef CS_WIDTH_2


`else 


`endif


`ifdef CS_WIDTH_2


`else 


`ifdef CS_WIDTH_4


`else


`endif


`endif


`ifdef CS_WIDTH_2


`else


`ifdef CS_WIDTH_4


`else


`endif


`endif




`ifdef ROW_WIDTH_12



`else



`endif



`ifdef ROW_WIDTH_12



`else



`endif




`ifdef ROW_WIDTH_12



`else



`endif


assign fa47a08 = (qg5cd50 || mtd03d) ? wjd34b8 : 1'b1;
assign rv3d042 =vvd2e24;
assign kde8216 =twb8938;
assign cz410b5  =uk24e19 ;
assign sj85ac    =(qg5cd50 || mtd03d)? vx38646 : 3'b0;
assign tu42d64  =(qg5cd50 || mtd03d)? the9a44 : {`ROW_WIDTH{1'b0}};
assign                 mirror_on = hqbbd2 || goef492;
assign                 ep9f793 = ofd6f6a || of6aa9d;
assign                 tufbc9c = vkb7b55 || jp554ed;
assign                 ykde4e2 = lsbdaaa || jraa76f;
assign                 yxf2710 = shed553 || os53b7e;
assign   mgbcf85 = {mt90b80 ,cb85c04 ,uk2e025 ,al70128 ,((ww681ec || vv40f61) && mtd03d),(qg5cd50 && shedf88 ), oh8f2e6};


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       zz16b22    <=  1'b0;   else if (shedf88)       zz16b22    <=  1'b1;   else if (!rgeedc0)       zz16b22    <=  1'b0;
end


always @ (negedge rst_n or posedge clk) begin   if (!rst_n)       wyacaa4    <=  1'b0;   else if ( mtd03d && (ww681ec || vv40f61))       wyacaa4    <=  1'b1;   else if ( !(ww681ec || vv40f61))       wyacaa4    <=  1'b0;
end

always @ (negedge rst_n or posedge clk) begin   if (!rst_n) begin       gb70644    <=  'b1;       tj19123   <=  'b1;       al448ff   <=  'b1;       cb23fe9    <=  'b1;       suffa69      <=  'b0;       the9a44    <=  'b0;       psc02d5    <=  'b0;    end    else begin       gb70644    <=  ep9a5c4  ;       tj19123   <=  ym97127 ;       al448ff   <=  cmc49c3 ;       cb23fe9    <=  xl270c8 ;       suffa69      <=  qtc3236   ;       the9a44    <=  rg4d226 ;       psc02d5     <=  jc5de92;    end
end



`ifdef RDIMM

assign ui675f6 = 1'b1;

`else

assign ui675f6 = 1'b0;

`endif


always @ (tjafe27 or mt90b80 or cb85c04 or uk2e025 or al70128 or ww681ec or qg5cd50           or shedf88  or do2f46a or mg8897a or vx38646 or the9a44           or ntaa03a or xj501d6 or qv80eb7 or ep75bd or of6aa9d or jp554ed or jraa76f or os53b7e           or dzecb68) begin      vk83224  = {`CS_WIDTH{1'b1}};      pfc891f = 'h1;      ec247fd = 'h1;      ks1ff4d  = 'h1;      shfd348  =  'h0;      rg4d226  =  'h0;      ri16aa = 'h0;      case (tjafe27)        nrddcd2 : begin         pfc891f =  'h0;         ec247fd =  'h0;         ks1ff4d  =  'h0;         rg4d226  =  ntaa03a;         shfd348    =  3'b0 ;         if (of6aa9d) begin          ri16aa = 1'b1;

`ifdef CS_WIDTH_2
         vk83224  = 2'b01;


`else 
         vk83224  = 4'b0101;


`endif
         end         else begin          ri16aa = 1'b0;

`ifdef CS_WIDTH_2
         vk83224  = 2'b10;


`else 



`ifdef CS_WIDTH_4
         vk83224  = 4'b1010;


`else
         vk83224  = 1'b0;


`endif



`endif
         end       end       neee696 : begin         pfc891f =  'h0;         ec247fd =  'h0;         ks1ff4d  =  'h0;         rg4d226  =  xj501d6;         shfd348    =  3'b001 ;         if (jp554ed) begin          ri16aa = 1'b1;

`ifdef CS_WIDTH_2
         vk83224  = 2'b01;


`else 
         vk83224  = 4'b0101;


`endif
         end         else begin          ri16aa = 1'b0;

`ifdef CS_WIDTH_2
         vk83224  = 2'b10;


`else 



`ifdef CS_WIDTH_4
         vk83224  = 4'b1010;


`else
         vk83224  = 1'b0;


`endif



`endif
         end       end       vi734b2 : begin         pfc891f =  'h0;         ec247fd =  'h0;         ks1ff4d  =  'h0;         rg4d226  =  qv80eb7;         shfd348    =  3'b010 ;         if (jraa76f) begin          ri16aa = 1'b1;

`ifdef CS_WIDTH_2
         vk83224  = 2'b01;


`else 
         vk83224  = 4'b0101;


`endif
         end         else begin          ri16aa = 1'b0;

`ifdef CS_WIDTH_2
         vk83224  = 2'b10;


`else 



`ifdef CS_WIDTH_4
         vk83224  = 4'b1010;


`else
         vk83224  = 1'b0;


`endif



`endif
         end       end
       qv9a593 : begin         pfc891f =  'h0;         ec247fd =  'h0;         ks1ff4d  =  'h0;         rg4d226  =  ep75bd;         shfd348    =  3'b011 ;         if (os53b7e) begin          ri16aa = 1'b1;

`ifdef CS_WIDTH_2
         vk83224  = 2'b01;


`else 
         vk83224  = 4'b0101;


`endif
         end         else begin          ri16aa = 1'b0;

`ifdef CS_WIDTH_2
         vk83224  = 2'b10;


`else 



`ifdef CS_WIDTH_4
         vk83224  = 4'b1010;


`else
         vk83224  = 1'b0;


`endif



`endif
         end
       end
       nrd2c9c : begin           pfc891f =  'h0;           ec247fd =  'h0;           ks1ff4d  =  'h0;           rg4d226  =  mg8897a;           if (ww681ec)             shfd348    =  3'b001 ;           else             shfd348    =  3'b010 ;



`ifdef CS_WIDTH_2
          if (!do2f46a[1])             ri16aa = 1'b1;          else             ri16aa = 1'b0;


`else



`ifdef CS_WIDTH_4
             if (!do2f46a[1] || !do2f46a[3])                ri16aa = 1'b1;             else                ri16aa = 1'b0;


`else
                ri16aa = 1'b0;


`endif



`endif
           vk83224  =  do2f46a;       end       ng964e7 : begin         if (dzecb68)   vk83224  =  do2f46a;         else               vk83224  = {`CS_WIDTH{fp191b5}} ;         pfc891f =  'h1;         ec247fd =  'h1;         ks1ff4d  =  'h1;         shfd348    =   vx38646;         rg4d226  =   the9a44;       end       jeb273a : begin         vk83224  = {`CS_WIDTH{1'b0}};         pfc891f =  'h1;         ec247fd =  'h1;         ks1ff4d  =  'h0;         rg4d226  = 'h400 ;       end       default: begin        if (dzecb68)    vk83224  =  do2f46a;         else               vk83224  = {`CS_WIDTH{1'b1}} ;         pfc891f =  'h1;         ec247fd =  'h1;         ks1ff4d  =  'h1;         shfd348    =  vx38646 ;         rg4d226  =  the9a44;       end      endcase
end
always@* begin oh8f2e6<=pua8071[0];qg5cd50<=pua8071[1];ntaa03a<={addr_init_0>>1,pua8071[2]};xj501d6<={addr_init_1>>1,pua8071[3]};qv80eb7<={addr_init_2>>1,pua8071[4]};ep75bd<={addr_init_3>>1,pua8071[5]};ofd6f6a<=pua8071[6];vkb7b55<=pua8071[7];lsbdaaa<=pua8071[8];shed553<=pua8071[9];of6aa9d<=pua8071[10];jp554ed<=pua8071[11];jraa76f<=pua8071[12];os53b7e<=pua8071[13];shedf88<=pua8071[14];rgeedc0<=pua8071[15];mtd03d<=pua8071[16];mg8897a<={ux85d13>>1,pua8071[17]};ww681ec<=pua8071[18];vv40f61<=pua8071[19];do2f46a<={pu30ba2>>1,pua8071[20]};dzecb68<=pua8071[21];wjd34b8<={gb70644>>1,pua8071[22]};ep9a5c4<={vk83224>>1,pua8071[23]};vvd2e24<=pua8071[24];ym97127<=pua8071[25];twb8938<=pua8071[26];cmc49c3<=pua8071[27];uk24e19<=pua8071[28];xl270c8<=pua8071[29];vx38646<={suffa69>>1,pua8071[30]};qtc3236<={shfd348>>1,pua8071[31]};fp191b5<=pua8071[32];hqbbd2<=pua8071[33];jc5de92<=pua8071[34];goef492<=pua8071[35];sh7a490<=pua8071[36];tjafe27<={mgbcf85>>1,pua8071[37]};mt90b80<=pua8071[38];cb85c04<=pua8071[39];uk2e025<=pua8071[40];al70128<=pua8071[41];end
always@* begin ks1500e[2047]<=lq6621f;ks1500e[2046]<=addr_init_0[0];ks1500e[2044]<=addr_init_1[0];ks1500e[2040]<=addr_init_2[0];ks1500e[2033]<=addr_init_3[0];ks1500e[2019]<=the666b;ks1500e[1991]<=oh3335e;ks1500e[1934]<=ls99af5;ks1500e[1898]<=kfbe06d;ks1500e[1821]<=zxcd7aa;ks1500e[1749]<=wl_act;ks1500e[1707]<=dm66174;ks1500e[1666]<=cb23fe9;ks1500e[1630]<=yxf2710;ks1500e[1595]<=zx6bd56;ks1500e[1450]<=ux85d13[0];ks1500e[1440]<=al448ff;ks1500e[1384]<=tj19123;ks1500e[1370]<=gb70644[0];ks1500e[1366]<=pu30ba2[0];ks1500e[1284]<=ks1ff4d;ks1500e[1142]<=sh5eab7;ks1500e[1125]<=mgbcf85[0];ks1500e[1041]<=shfd348[0];ks1500e[1023]<=fpbfbb7;ks1500e[949]<=yxc60d6;ks1500e[853]<=oh2cc2e;ks1500e[833]<=ec247fd;ks1500e[815]<=ykde4e2;ks1500e[720]<=pfc891f;ks1500e[692]<=vk83224[0];ks1500e[685]<=blf6489;ks1500e[562]<=pf5aa93;ks1500e[520]<=suffa69[0];ks1500e[474]<=hdaade8;ks1500e[407]<=tufbc9c;ks1500e[281]<=hqb552;ks1500e[237]<=eaf55bd;ks1500e[203]<=ep9f793;ks1500e[140]<=ri16aa;ks1500e[70]<=psc02d5;ks1500e[35]<=ui675f6;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule






`timescale 1 ps / 1 ps
module ddr3_sdram_mem_io_top (
   
   rst_n,				
   sclk,				
   eclk,				
   sclk2x,				
   clocking_good,
   dqsbufd_rst,				
   wl_rst_datapath,
   dqsdel,                              		
   uddcntln,

   
   dfi_address, 
   dfi_bank,   
   dfi_cs_n,  
   dfi_ras_n, 
   dfi_cas_n, 
   dfi_we_n,  
   dfi_cke,  
   dfi_odt,		                

   dfi_wrdata,			
   dfi_wrdata_en,		
   dfi_wrdata_mask,

   dfi_rddata,                      
   dfi_rddata_valid,                            

   dfi_init_start,
   dfi_init_complete,

   
   read_pulse_tap,	                        
   mac_bc4,	                        

   mem_rst_n,

   wl_act,
   wl_err,
   phy_init_act,
   
`ifdef CLK_SYNC_TRACE
   prmbdet,				
   dqs_read,
   ddrclkpol,
`endif

`ifdef WL_DYNDLY
   wl_dyndly,
`endif
   
   
   
   
`ifdef ENB_MEM_RST
   em_ddr_reset_n,
`endif
   em_ddr_addr,
   em_ddr_ba,    				
   em_ddr_ras_n, 			
   em_ddr_cas_n, 			
   em_ddr_we_n,  				
   em_ddr_cs_n,  
   em_ddr_cke,   				
		
   em_ddr_clk,				
   em_ddr_odt,		                
   em_ddr_dm,
   em_ddr_data,				
   em_ddr_dqs				
);

`ifdef ROW_WIDTH_12

`define  ROW_WDTH  13

`else

`define  ROW_WDTH  `ROW_WIDTH

`endif
input                            rst_n;
input                            sclk;
input                            eclk;
input                            sclk2x;
input                            clocking_good;
input                            dqsbufd_rst;
output                           wl_rst_datapath;
input                            dqsdel;
output                           uddcntln;
input   [`ROW_WDTH-1:0]          dfi_address;
input   [`BANK_WIDTH-1:0]        dfi_bank;
input   [`CS_WIDTH-1:0]          dfi_cs_n;
input                            dfi_ras_n;
input                            dfi_cas_n;
input                            dfi_we_n;
input                            dfi_cke;
input   [`CS_WIDTH -1 :0]        dfi_odt;
input	[`DSIZE-1:0]             dfi_wrdata;
input         dfi_wrdata_en;
input	[`USER_DM -1:0]          dfi_wrdata_mask;
output  [`DSIZE       -1:0]      dfi_rddata;
output                           dfi_rddata_valid;
input                            dfi_init_start;
output                           dfi_init_complete;
input   [3*(`DQS_WIDTH)-1:0]     read_pulse_tap;
input                            mac_bc4;
input                            mem_rst_n;

`ifdef ENB_MEM_RST
output                           em_ddr_reset_n;

`endif
output                           wl_act;
output                           wl_err;
output                           phy_init_act;

`ifdef CLK_SYNC_TRACE
output  [(`DQS_WIDTH) -1:0]      prmbdet;
output  [`DQS_WIDTH-1:0]         dqs_read;
output  [(`DQS_WIDTH)-1:0]       ddrclkpol;

`endif

`ifdef WL_DYNDLY
output  [7*(`DQS_WIDTH)-1:0]     wl_dyndly;

`endif
output  [`ROW_WDTH-1:0]          em_ddr_addr;
output  [`BANK_WIDTH-1:0]        em_ddr_ba;
output                           em_ddr_ras_n;
output                           em_ddr_cas_n;
output                           em_ddr_we_n;
output  [`CS_WIDTH_BB-1:0]       em_ddr_cs_n;
output  [`CKE_WIDTH -1:0]        em_ddr_cke;
output	[`CLKO_WIDTH  -1:0]      em_ddr_clk;
output  [`CS_WIDTH    -1:0]      em_ddr_odt;
output	[`DQS_WIDTH -1:0]        em_ddr_dm;
inout	[`DATA_WIDTH -1:0]       em_ddr_data;
inout	[`DQS_WIDTH  -1:0]       em_ddr_dqs;
reg                              uddcntln ;
reg     [4:0]                    ec98a04;
wire    [(`DQS_WIDTH)-1:0]       prmbdet;
wire    [`DSIZE      -1:0]       dfi_rddata;
reg                              dfi_rddata_valid;
wire    [(`DQS_WIDTH)-1:0]       co97eeb;
reg     [(`DQS_WIDTH)-1:0]       fpbf759;

`ifdef DLY_DQS_DQ
reg     [(`DQS_WIDTH)-1:0]       vifbacf  ;
reg     [(`DQS_WIDTH)-1:0]       rtdd67a  ;
wire    [(`DQS_WIDTH)-1:0]       xweb3d7  ;
wire    [(`DQS_WIDTH)-1:0]       ww59eba;

`else
wire    [(`DQS_WIDTH)-1:0]       xweb3d7  ;

`endif
wire                             of7ae83 ;

`ifdef ENB_MEM_RST
wire                             em_ddr_reset_n ;

`endif
wire    [`BANK_WIDTH   -1:0]     em_ddr_ba;
wire    [`ROW_WDTH-1:0]          em_ddr_addr;
wire                             em_ddr_ras_n;
wire                             em_ddr_we_n;
wire                             em_ddr_cas_n;
wire    [`CS_WIDTH_BB -1:0]      em_ddr_cs_n;
wire    [`CKE_WIDTH  -1:0]       em_ddr_cke;
wire    [`CLKO_WIDTH -1:0]       em_ddr_clk;

`ifdef DIFF
wire    [`CLKO_WIDTH -1:0]       kdd6feb;

`endif
wire    [`CS_WIDTH   -1:0]       em_ddr_odt;
wire	[`DQS_WIDTH -1:0]        em_ddr_dm;
reg                              eace0a9;
wire    [`BANK_WIDTH   -1:0]     faebab4;
wire    [`ROW_WDTH-1:0]          ne5d5a3;
wire                             qgead1b;
wire                             ww568d9;
wire                             irb46c9;
wire    [`CS_WIDTH   -1:0]       ksa364c;
wire    [`CKE_WIDTH  -1:0]       tw1b260;
wire    [(`DQS_WIDTH)-1:0]       sj90c17;
wire    [(`DQS_WIDTH)-1:0]       xy860bc;
wire    [(`DQS_WIDTH)-1:0]       fcb8615;
wire    [(`DQS_WIDTH)-1:0]       aaacc86;
wire    [(`DQS_WIDTH)-1:0]       ddrclkpol;
wire    [`DQS_WIDTH  -1:0]       zx55990;
wire    [`CLKO_WIDTH -1:0]       doad160;
wire    [`CS_WIDTH   -1:0]       ww68b03;
wire   [`BANK_WIDTH   -1:0]    rt45818;
wire   [`ROW_WDTH-1:0]         mt2c0c7;
wire                            sh6063d;
wire                            lf31ed;
wire                            qv18f6f;
wire    [`CS_WIDTH_BB-1:0]      nrc7b7c;
wire    [`CS_WIDTH   -1:0]      db3dbe6;
wire    [`CKE_WIDTH  -1:0]      gbedf37;
wire                            aye5d77;
wire   [`DATA_WIDTH-1 :0]       sj178d0 ;
wire   [`DQS_WIDTH -1 :0]       jpe6f2b;
reg    [`DATA_WIDTH-1 :0]       rv3795f ;
wire                            ecbcafe;
wire   [`DQS_WIDTH-1:0]         dqs_read;

`ifdef PHY_REG_P2
reg                             mg2bf89 ;

`else
wire                            mg2bf89 ;

`endif
reg                             nefe24f;
reg                             hof127b;
reg                             do893da;
reg                             cm49ed2  ;
reg                             bl4f691  ;
reg                             th7b48f  ;
reg                             yxfde62;
reg                             qgef315;
reg                             lf91fd6;
reg                             ux8feb6;
reg                             kd7f5b4;
reg                             icfada5;
reg                             qtd6d28;
wire                            hdbf975;
wire                            nrc8209;
wire   [`CS_WIDTH -1 :0]        ou24f3c;
reg                             jr28a2f;
reg                             rt4517e;
reg                             jr28bf6;
reg                             rt45fb6;
reg                             ls2fdb7;
reg                             ld7edbb;
reg                             pff6dde;
reg    [`DSIZE-1:0]             oub6ef6;
reg    [`USER_DM -1:0]          hqb77b0;
reg                             irbbd83;
reg    [`DQS_WIDTH-1:0]         osdec1c;
reg                             blf60e1;
reg                             ntb070f;

`ifdef PHY_REG_P2
reg    [`DSIZE-1:0]             zm8387e;
reg    [`USER_DM -1:0]          vx1c3f2;
reg                             dme1f97;
reg    [`DQS_WIDTH-1:0]         oufcba;
reg                             pf7e5d0;
reg                             yxf2e87;

`endif
reg    [`DSIZE-1:0]             ie9743c;
reg                             xlba1e0   ;
reg    [`USER_DM -1:0]          fn710da;
reg    [`DQS_WIDTH-1:0]         co8783a;
reg                             sj3c1d0   ;
reg                             qge0e84   ;
reg                             qv7420;
reg                             do3a105;
wire                            fad082b;

`ifdef DLY_DQS_DQ
reg   [`DSIZE      -1:0]        zz8415a  ;
reg   [`DSIZE      -1:0]        tw20ad6  ;
wire  [`DSIZE      -1:0]        mg56b2 ;
wire  [`DSIZE      -1:0]        sw2b590  ;

`else
wire  [`DSIZE      -1:0]        sw2b590  ;

`endif
reg   [`DSIZE      -1:0]        czd6407 ;
reg   [`DSIZE      -1:0]        zmb203c ;
reg   [(`DQS_WIDTH)-1:0]       wl901e3  ;
wire                            ir80f1d;
reg                             sj78ed;
reg                             qv3c76c;
wire  [`DSIZE      -1:0]        dze3b64;
wire                            ux1db27;
reg                             shed93c;
reg                             jc6c9e4;
wire                            mirror_on;
wire                            ip4e07c;
wire                            jp4a34b;
wire                            en51a5f;
wire                            ou8d2fc;
wire                            ne697e0;
wire                            al4bf03;
wire                            hb5f81c;
wire    [`BANK_WIDTH -1 :0]     xjfc0e7;
wire    [`BANK_WIDTH -1 :0]     eae073e;
wire    [`ROW_WDTH -1:0]        db39f1;
wire    [`ROW_WDTH -1:0]        bn1cf8e;
wire    [`CS_WIDTH-1:0]         wje7c76  ;
wire    [`CS_WIDTH-1:0]         je93e4e ;
wire    [`CS_WIDTH-1:0]         ir9f273 ;
wire    [`CS_WIDTH-1:0]         blf939c ;
wire    [`CS_WIDTH-1:0]         ou3e3b5;
wire    [`CS_WIDTH-1:0]         cz4e735;
wire    [`CKE_WIDTH -1:0]       psf1da9;
wire    [`CKE_WIDTH -1:0]       vx8ed4b;
wire    [`CS_WIDTH -1 :0]       rg76a5e;
wire    [`CS_WIDTH -1 :0]       hdb52f2;
reg     [3*(`DQS_WIDTH)-1:0]    hqad4bb ;
wire                            en6a5db;

`ifdef DDR3_2T

`else

`endif
wire [(`DQS_WIDTH)-1:0]        sjb4b30;

`ifdef NO_WRITE_LEVEL
reg  [(`DQS_WIDTH)-1:0]        vvf3192 ;
reg  [7*(`DQS_WIDTH)-1:0]      ohbb718 ;
reg                            osdb8c5;

`else
wire                           pu83cc6;
wire [(`DQS_WIDTH)-1:0]        vvf3192;
wire [7*(`DQS_WIDTH)-1:0]      ohbb718 ;
wire                            osdb8c5;

`endif
reg  [`DQS_WIDTH-1:0]  oh29ba2;
reg                    dm4dd14;
wire                   jp6e8a3;
wire                   rv3d042;
wire                   kde8216;
wire                   cz410b5;
wire                   fa47a08;
wire [`BANK_WIDTH-1:0] sj85ac;
wire [`ROW_WIDTH-1:0]  tu42d64 ;
wire                   zz16b22;
wire [`CS_WIDTH-1:0]   rv9b25f;
wire [`ROW_WDTH-1:0]   uvd92fe;
wire [`BANK_WIDTH-1:0] wjc97f5;
wire [`CKE_WIDTH -1:0] al4bfac;
wire                   hb5fd64;
wire                   vifeb27;
wire                   osf593a;
wire [`CS_WIDTH-1:0]   ksac9d1;
wire [`CS_WIDTH-1 :0]  zx64e88;
wire [`DQS_WIDTH-1:0]  lf27446;
wire                   ba3a236;
wire                   osd11b3;
wire                   init_start;
wire                   wl_act;
wire                   wl_done;
wire                   dfi_init_complete;
reg                    zm99229;
reg                    kfbe06d  ;
reg                    phy_init_act  ;
wire                   pf452e3;
wire                   sj2971e;
wire                   of4b8f5;
reg                    me5c7ac;
reg                    lde3d61;
reg                    fc1eb0f;
reg                    eaf587b;
reg                    ieac3d9;
reg                    nr61ec9;
reg                    qif64e;
reg                    jp7b271;
reg                    czd938f;
reg                    ipc9c7d;
reg                    wj4e3ed;
reg                    fn71f6d;
wire                   sj8fb6f;
reg                    su7db7c;
reg                    wjedbe1;
reg                    os6df0c;
reg                    en6f860;
reg                    fa7c305;
reg                    rge182a;
reg                    hqa8709;
wire                   cal_bc4;
wire                   aa54b4;
reg [`DQS_WIDTH-1:0]   ba2a5a0;
reg                    dm52d02;
reg                    ls96813;
wire                  lq6621f;
reg                   lfa04dc;
reg                   gd26e7;
reg                   db1373d;

`define TSTAB1  `TSTAB/6

`define USR_RST_CLK_CNT  8'd20   // 20 x 5ns = 100 ns
reg                   jr9b9ee;
reg                   mrdcf77;
reg    [7:0]          gbe7bbc;

`ifdef ENB_MEM_RST

`endif

`ifdef RDIMM
reg  [7:0]  tj3dde5;
reg  [2:0]  dmeef2f;
reg         ww7797b;
wire        swbcbd8;

`ifdef REGRESSION 

`else

`endif

`else
wire   ww7797b;

`endif

`ifdef DESEL

`else

`endif

`define  P_MRS   4'h0

`define  P_READ  4'h5

`define  P_WRITE 4'h4
reg [3:0] vk2f608;
reg [1:0] jp7b042;
reg [2:0] dzd8217;
reg       pio_read;
reg       kf85f8;
reg       ho42fc4;
wire  gd17e22;
reg   lfbf115;
reg   shf88af;
reg   uic457d;
reg   hd22be8;
reg   ym15f47;
reg   vxafa38;
reg   kq7d1c7;
wire [3:0]    gbe8e38;
wire          rg471c4;
wire          ddr_wr_lat_odd;
wire          jpc711f;
wire          bn388ff;
reg           osc47ff;
reg           kf23ff8;
wire          wy1ffc5;
wire          kqffe29;
reg           eaff148;
reg           off8a41;
reg           psc520d;
reg           sj2906a;
reg           ne48355;
reg           gb41aaa;
reg  [3:0]    cbd555;
reg  [3:0]    wj6aaac;
reg  [3:0]    vv55565;
reg  [3:0]    bnaab2f;
wire [31:0]   jp5597f;
wire [31:0]   coacbfe;
wire [31:0]   mr65ff0;
wire [31:0]   je2ff84;

`define DQSDLL_LAT_CNT 5'd15

`ifdef CS_WIDTH_2

`else

`endif

`ifdef RDIMM1
reg     uv7fc23;

`else
wire    uv7fc23;

`endif

`ifdef DDR3_2T

`else

`endif

`ifdef PHY_REG_P2

`else

`endif
reg   kqf08e3;
wire  hd84719;

`ifdef DATA_SIZE_72

`ifdef x4

`ifdef RDIMM

`else

`endif

`else // x8

`endif // x4 

`endif

`ifdef DATA_SIZE_64  

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_56

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_48

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_40

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_32

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_24

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_16

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_8

`ifdef x4

`else

`endif

`endif

`ifdef PHY_REG_P2

`endif
wire                  blf6489 ;
wire                  wl_rst_datapath;
wire [`CS_WIDTH-1:0]  lq7ca36;
wire                  wl_err;
wire                  oh2cc2e;
wire                  rt4f946;
wire                  mgb6966;
wire [`CS_WIDTH-1:0]  qge51b3;
wire                  the666b;
wire                  oh3335e;
wire                  ls99af5;
wire                  zxcd7aa;
wire                  zx6bd56;
wire                  sh5eab7;
wire                  eaf55bd;
wire                  hdaade8;
wire                  yxc60d6;
wire                  fpbfbb7;
wire                  wyacaa4;
wire [15:0]           ux85d13;

`ifdef WL_DYNDLY
reg  [7*(`DQS_WIDTH)-1:0]      wl_dyndly ;

`endif

`ifdef NO_WRITE_LEVEL

`else
reg   [2:0]             aaa3ac8;
reg   [2:0]             wl1d641;

`endif

`ifdef DLY_DQS_DQ

`else

`endif

`ifdef DLY_DQS_DQ

`else

`endif

`ifdef DLY_DQS_DQ
reg          lqeb20d;
wire         ea5906a;
wire [31:0]  zxc8351;

`endif

`ifdef ECP3_8_0

`else

`endif
genvar ipe792c;

`ifdef PHY_REG_P2

`else

`ifdef PHY_REG

`else

`endif

`endif
wire   qvd475   ;
wire   en6a3ac  ;

`ifdef x4
genvar cz51d64;

`else
genvar cz51d64;

`endif

`ifdef x4

`endif

`ifdef DATA_SIZE_8

`else

`ifdef x4

`else

`endif

`ifdef DATA_SIZE_16

`else

`ifdef x4

`else

`endif

`ifdef DATA_SIZE_24

`else

`ifdef x4

`else

`endif

`ifdef DATA_SIZE_32

`else

`ifdef x4

`else

`endif

`ifdef DATA_SIZE_40

`else

`ifdef x4

`else

`endif

`ifdef DATA_SIZE_48

`else

`ifdef x4

`else

`endif

`ifdef DATA_SIZE_56

`else

`ifdef x4

`else

`endif

`ifdef DATA_SIZE_64

`else

`ifdef x4

`else

`endif

`endif  // 72bit

`endif  // 64bit

`endif  // 56bit

`endif  // 48bit

`endif  // 40bit

`endif  // 32bit

`endif  // 24bit

`endif  // 16bit

`ifdef ECP3_SP2

`endif

`ifdef CLK_SWAP

`else

`endif

`ifdef DIFF

`endif
wire  of75926;

`ifdef RDIMM

`else

`endif

`ifdef RDIMM

`else

`endif

`ifdef DDR3_2T
reg   ui77342;

`else   // 1T mode

`ifdef RDIMM

`else

`endif

`endif  // DDR3_2T 

`ifdef RDIMM

`else

`endif

`ifdef DESEL
reg         zx649a8;
reg         ie24d46;
reg         ep26a30;
reg         ba35185;

`else

`endif

`ifdef RDIMM

`ifdef CS_WIDTH_1

`else

`endif

`else

`endif
reg hdaa7dd;
reg ri1e9e7;
reg gd8a3d3;
reg mg34c40;
reg [`ROW_WDTH - 1 : 0] fc2a45c;
reg [`BANK_WIDTH - 1 : 0] jc522e2;
reg [`CS_WIDTH - 1 : 0] fp91712;
reg db8b897;
reg cm5c4be;
reg ipe25f1;
reg ep12f8c;
reg [`CS_WIDTH - 1 : 0] sw97c65;
reg [`DSIZE - 1 : 0] cbbe329;
reg xwf194d;
reg [`USER_DM - 1 : 0] fc8ca6b;
reg yx6535b;
reg [3 * (`DQS_WIDTH) - 1 : 0] gd29add;
reg rg4d6ec;
reg nr6b762;
reg [4 : 0] jcf1cb7;
reg [(`DQS_WIDTH) - 1 : 0] nrdd8b5;
reg [(`DQS_WIDTH) - 1 : 0] pfec5ae;
reg os62d77;
reg ph949e3;
reg [`BANK_WIDTH - 1 : 0] dbb5dcf;
reg [`ROW_WDTH - 1 : 0] cbaee7f;
reg os773fd;
reg ksb9fe9;
reg jccff49;
reg [`CS_WIDTH - 1 : 0] al7fa4a;
reg [`CKE_WIDTH - 1 : 0] enfd254;
reg [(`DQS_WIDTH) - 1 : 0] rgee316;
reg [(`DQS_WIDTH) - 1 : 0] dz718b2;
reg [(`DQS_WIDTH) - 1 : 0] th4a938;
reg [(`DQS_WIDTH) - 1 : 0] yz9f771;
reg [`DQS_WIDTH - 1 : 0] yk53eee;
reg [`CLKO_WIDTH - 1 : 0] tj271a4;
reg [`CS_WIDTH - 1 : 0] ph38d26;
reg [`BANK_WIDTH - 1 : 0] yxc6937;
reg [`ROW_WDTH - 1 : 0] ks349bc;
reg gda4de1;
reg oh26f0c;
reg fp37865;
reg [`CS_WIDTH_BB - 1 : 0] mgbc32e;
reg [`CS_WIDTH - 1 : 0] vie1970;
reg [`CKE_WIDTH - 1 : 0] fpcb82;
reg tw4f1c;
reg [`DATA_WIDTH - 1 : 0] aa2e0bc;
reg [`DQS_WIDTH - 1 : 0] wj705e0;
reg [`DATA_WIDTH - 1 : 0] sw82f04;
reg qv17820;
reg ksbc105;
reg eae0828;
reg xy4140;
reg do20a02;
reg ou5012;
reg lf28090;
reg wwc11d2;
reg wl8e90;
reg yz121f5;
reg ux90fac;
reg mg87d64;
reg sw3eb20;
reg qgf5900;
reg lq6c13c;
reg dmdae4c;
reg [`CS_WIDTH - 1 : 0] rtd7263;
reg wy23b;
reg vk11d8;
reg oh8ec2;
reg rg47615;
reg ks3b0ab;
reg ldd8559;
reg dzc2acf;
reg [`DSIZE - 1 : 0] ym1567e;
reg [`USER_DM - 1 : 0] yzab3f1;
reg ea59f8c;
reg [`DQS_WIDTH - 1 : 0] tucfc60;
reg dz7e302;
reg faf1817;
reg [`DSIZE - 1 : 0] ri8c0bb;
reg mr605da;
reg [`USER_DM - 1 : 0] oh36257;
reg [`DQS_WIDTH - 1 : 0] kf176ac;
reg mtbb564;
reg zkdab25;
reg jcd592b;
reg coac95a;
reg nr64ad0;
reg [`DSIZE - 1 : 0] ri25686;
reg [`DSIZE - 1 : 0] aa2b433;
reg [(`DQS_WIDTH) - 1 : 0] xj5a198;
reg psd0cc6;
reg zm86632;
reg yz33193;
reg [`DSIZE - 1 : 0] mg98c9d;
reg gbc64e8;
reg db32745;
reg ba93a2f;
reg kd609e3;
reg mr605f4;
reg rt45ecc;
reg ls2f667;
reg hb7b33a;
reg mrd99d7;
reg gbccebc;
reg ea675e5;
reg [`BANK_WIDTH - 1 : 0] xy3af28;
reg [`BANK_WIDTH - 1 : 0] hbd7942;
reg [`ROW_WDTH - 1 : 0] qibca17;
reg [`ROW_WDTH - 1 : 0] eae50b9;
reg [`CS_WIDTH - 1 : 0] db285c9;
reg [`CS_WIDTH - 1 : 0] xw42e4f;
reg [`CS_WIDTH - 1 : 0] ep1727a;
reg [`CS_WIDTH - 1 : 0] oub93d4;
reg [`CS_WIDTH - 1 : 0] mrc9ea0;
reg [`CS_WIDTH - 1 : 0] dz4f505;
reg [`CKE_WIDTH - 1 : 0] ip7a82f;
reg [`CKE_WIDTH - 1 : 0] osd417c;
reg [`CS_WIDTH - 1 : 0] xla0be1;
reg [`CS_WIDTH - 1 : 0] sw5f0e;
reg [3 * (`DQS_WIDTH) - 1 : 0] tw2f871;
reg vi7c38b;
reg [(`DQS_WIDTH) - 1 : 0] hod545e;
reg [`DQS_WIDTH - 1 : 0] hqe2d2;
reg pf71693;
reg rv8b49e;
reg rt5a4f7;
reg vvd27be;
reg vk93df6;
reg bn9efb3;
reg [`BANK_WIDTH - 1 : 0] alf7d9f;
reg [`ROW_WIDTH - 1 : 0] anbecfc;
reg fnf67e4;
reg [`CS_WIDTH - 1 : 0] qib3f27;
reg [`ROW_WDTH - 1 : 0] yz9f938;
reg [`BANK_WIDTH - 1 : 0] dzfc9c5;
reg [`CKE_WIDTH - 1 : 0] fae4e2f;
reg hd2717a;
reg xl38bd6;
reg jcc5eb7;
reg [`CS_WIDTH - 1 : 0] zm2f5bb;
reg [`CS_WIDTH - 1 : 0] of7adda;
reg [`DQS_WIDTH - 1 : 0] mrd6ed4;
reg fcb76a5;
reg sjbb52b;
reg gbc3768;
reg sj7b0f;
reg bna5758;
reg rgeedc0;
reg ps5d639;
reg hoeb1cb;
reg zk58e5a;
reg hbc72d2;
reg kf39697;
reg eacb4bc;
reg rt5a5e1;
reg vvd2f0e;
reg ym97877;
reg wybc3b9;
reg xwe1dc8;
reg twee42;
reg ay77212;
reg cob9091;
reg vvc8488;
reg rg42446;
reg mt12233;
reg db9119c;
reg ks88ce7;
reg kq46739;
reg ir339c9;
reg ls9ce4c;
reg sj856f4;
reg xl963b;
reg uvc98a4;
reg [`DQS_WIDTH - 1 : 0] me4c525;
reg ww62928;
reg pu14941;
reg qg5cd50;
reg ri25054;
reg db282a3;
reg yx4151f;
reg ksa8fc;
reg ip547e0;
reg [7 : 0] yma3f05;
reg [3 : 0] ec1f829;
reg [1 : 0] zxfc149;
reg [2 : 0] uie0a4e;
reg nee12c7;
reg gd29380;
reg ui49c05;
reg of4e029;
reg sh7014d;
reg oh80a6c;
reg mg5365;
reg ux29b28;
reg zk4d944;
reg by6ca23;
reg en6511a;
reg [3 : 0] db288d5;
reg uv446ae;
reg gd23574;
reg mg1aba4;
reg jcd5d21;
reg epae90a;
reg hb74855;
reg ira42af;
reg gq2157d;
reg qiabe9;
reg fn55f48;
reg zzafa46;
reg qg7d237;
reg dze91b8;
reg xw48dc7;
reg [3 : 0] kq46e3b;
reg [3 : 0] fp371d8;
reg [3 : 0] rib8ec7;
reg [3 : 0] pfc763b;
reg [31 : 0] uk3b1df;
reg [31 : 0] nrd8ef9;
reg [31 : 0] pfc77ce;
reg [31 : 0] uk3be77;
reg hodf3b8;
reg thf9dc2;
reg dzecb68;
reg [`CS_WIDTH - 1 : 0] wwff90b;
reg ww681ec;
reg rgdff21;
reg en41a07;
reg [`CS_WIDTH - 1 : 0] zxfc858;
reg ofd6f6a;
reg vkb7b55;
reg lsbdaaa;
reg shed553;
reg of6aa9d;
reg jp554ed;
reg jraa76f;
reg os53b7e;
reg shedf88;
reg oh8f2e6;
reg mr6a527;
reg [15 : 0] mg8897a;
reg vi63c12;
reg hq1e093;
reg qgf049a;
reg [2047:0] ks1500e;
wire [244:0] pua8071;

`ifdef ROW_WIDTH_12

`define  ROW_WDTH  13

`else

`define  ROW_WDTH  `ROW_WIDTH

`endif

`ifdef ENB_MEM_RST

`endif

`ifdef CLK_SYNC_TRACE

`endif

`ifdef WL_DYNDLY

`endif

`ifdef DLY_DQS_DQ

`else

`endif

`ifdef ENB_MEM_RST

`endif

`ifdef DIFF

`endif

`ifdef PHY_REG_P2

`else

`endif

`ifdef PHY_REG_P2

`endif

`ifdef DLY_DQS_DQ

`else

`endif

`ifdef DDR3_2T

`else

`endif

`ifdef NO_WRITE_LEVEL

`else

`endif

`define TSTAB1  `TSTAB/6

`define USR_RST_CLK_CNT  8'd20   // 20 x 5ns = 100 ns

`ifdef ENB_MEM_RST

`endif

`ifdef RDIMM

`ifdef REGRESSION 

`else

`endif

`else

`endif

`ifdef DESEL

`else

`endif

`define  P_MRS   4'h0

`define  P_READ  4'h5

`define  P_WRITE 4'h4

`define DQSDLL_LAT_CNT 5'd15

`ifdef CS_WIDTH_2

`else

`endif

`ifdef RDIMM1

`else

`endif

`ifdef DDR3_2T

`else

`endif

`ifdef PHY_REG_P2

`else

`endif

`ifdef DATA_SIZE_72

`ifdef x4

`ifdef RDIMM

`else

`endif

`else // x8

`endif // x4 

`endif

`ifdef DATA_SIZE_64  

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_56

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_48

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_40

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_32

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_24

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_16

`ifdef x4

`ifdef RDIMM

`else

`endif

`else

`endif

`endif

`ifdef DATA_SIZE_8

`ifdef x4

`else

`endif

`endif

`ifdef PHY_REG_P2

`endif

`ifdef WL_DYNDLY

`endif

`ifdef NO_WRITE_LEVEL

`else


`endif




`ifdef DLY_DQS_DQ

`else

`endif



`ifdef DLY_DQS_DQ

`else

`endif

`ifdef DLY_DQS_DQ

`endif

`ifdef ECP3_8_0

`else

`endif


`ifdef PHY_REG_P2

`else

`ifdef PHY_REG

`else

`endif

`endif

`ifdef x4


`else


`endif


`ifdef x4


`endif

`ifdef DATA_SIZE_8

`else

`ifdef x4



`else


`endif

`ifdef DATA_SIZE_16

`else

`ifdef x4



`else


`endif

`ifdef DATA_SIZE_24

`else

`ifdef x4



`else


`endif

`ifdef DATA_SIZE_32

`else

`ifdef x4



`else


`endif

`ifdef DATA_SIZE_40

`else

`ifdef x4



`else


`endif

`ifdef DATA_SIZE_48

`else

`ifdef x4



`else


`endif

`ifdef DATA_SIZE_56

`else

`ifdef x4



`else


`endif

`ifdef DATA_SIZE_64

`else

`ifdef x4



`else


`endif

`endif  // 72bit

`endif  // 64bit

`endif  // 56bit

`endif  // 48bit

`endif  // 40bit

`endif  // 32bit

`endif  // 24bit

`endif  // 16bit

`ifdef ECP3_SP2


`endif

`ifdef CLK_SWAP


`else


`endif


`ifdef DIFF


`endif

`ifdef RDIMM

`else

`endif

`ifdef RDIMM

`else

`endif

`ifdef DDR3_2T

`else   // 1T mode

`ifdef RDIMM

`else

`endif

`endif  // DDR3_2T 


`ifdef RDIMM

`else

`endif

`ifdef DESEL

`else

`endif









`ifdef RDIMM

`ifdef CS_WIDTH_1

`else

`endif

`else

`endif









localparam rt4038b = 245,hq1c5e = 32'hfdffd88b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ROW_WIDTH_12


`define  ROW_WDTH  13


`else


`define  ROW_WDTH  `ROW_WIDTH


`endif


`ifdef ENB_MEM_RST


`endif


`ifdef CLK_SYNC_TRACE


`endif


`ifdef WL_DYNDLY


`endif


`ifdef DLY_DQS_DQ


`else


`endif


`ifdef ENB_MEM_RST


`endif


`ifdef DIFF


`endif


`ifdef PHY_REG_P2


`else


`endif


`ifdef PHY_REG_P2


`endif


`ifdef DLY_DQS_DQ


`else


`endif


`ifdef DDR3_2T


`else


`endif


`ifdef NO_WRITE_LEVEL


`else


`endif


`define TSTAB1  `TSTAB/6


`define USR_RST_CLK_CNT  8'd20   // 20 x 5ns = 100 ns


`ifdef ENB_MEM_RST


`endif


`ifdef RDIMM


`ifdef REGRESSION 


`else


`endif


`else


`endif


`ifdef DESEL


`else


`endif


`define  P_MRS   4'h0


`define  P_READ  4'h5


`define  P_WRITE 4'h4


`define DQSDLL_LAT_CNT 5'd15


`ifdef CS_WIDTH_2


`else


`endif


`ifdef RDIMM1


`else


`endif


`ifdef DDR3_2T


`else


`endif


`ifdef PHY_REG_P2


`else


`endif


`ifdef DATA_SIZE_72


`ifdef x4


`ifdef RDIMM


`else


`endif


`else // x8


`endif // x4 


`endif


`ifdef DATA_SIZE_64  


`ifdef x4


`ifdef RDIMM


`else


`endif


`else


`endif


`endif


`ifdef DATA_SIZE_56


`ifdef x4


`ifdef RDIMM


`else


`endif


`else


`endif


`endif


`ifdef DATA_SIZE_48


`ifdef x4


`ifdef RDIMM


`else


`endif


`else


`endif


`endif


`ifdef DATA_SIZE_40


`ifdef x4


`ifdef RDIMM


`else


`endif


`else


`endif


`endif


`ifdef DATA_SIZE_32


`ifdef x4


`ifdef RDIMM


`else


`endif


`else


`endif


`endif


`ifdef DATA_SIZE_24


`ifdef x4


`ifdef RDIMM


`else


`endif


`else


`endif


`endif


`ifdef DATA_SIZE_16


`ifdef x4


`ifdef RDIMM


`else


`endif


`else


`endif


`endif


`ifdef DATA_SIZE_8


`ifdef x4


`else


`endif


`endif


`ifdef PHY_REG_P2


`endif


`ifdef WL_DYNDLY


`endif


`ifdef NO_WRITE_LEVEL


`else


`endif


`ifdef DLY_DQS_DQ


`else


`endif


`ifdef DLY_DQS_DQ


`else


`endif


`ifdef DLY_DQS_DQ


`endif


`ifdef ECP3_8_0


`else


`endif


`ifdef PHY_REG_P2


`else


`ifdef PHY_REG


`else


`endif


`endif


`ifdef x4


`else


`endif


`ifdef x4


`endif


`ifdef DATA_SIZE_8


`else


`ifdef x4


`else


`endif


`ifdef DATA_SIZE_16


`else


`ifdef x4


`else


`endif


`ifdef DATA_SIZE_24


`else


`ifdef x4


`else


`endif


`ifdef DATA_SIZE_32


`else


`ifdef x4


`else


`endif


`ifdef DATA_SIZE_40


`else


`ifdef x4


`else


`endif


`ifdef DATA_SIZE_48


`else


`ifdef x4


`else


`endif


`ifdef DATA_SIZE_56


`else


`ifdef x4


`else


`endif


`ifdef DATA_SIZE_64


`else


`ifdef x4


`else


`endif


`endif  // 72bit


`endif  // 64bit


`endif  // 56bit


`endif  // 48bit


`endif  // 40bit


`endif  // 32bit


`endif  // 24bit


`endif  // 16bit


`ifdef ECP3_SP2


`endif


`ifdef CLK_SWAP


`else


`endif


`ifdef DIFF


`endif


`ifdef RDIMM


`else


`endif


`ifdef RDIMM


`else


`endif


`ifdef DDR3_2T


`else   // 1T mode


`ifdef RDIMM


`else


`endif


`endif  // DDR3_2T 


`ifdef RDIMM


`else


`endif


`ifdef DESEL


`else


`endif


`ifdef RDIMM


`ifdef CS_WIDTH_1


`else


`endif


`else


`endif





`ifdef ROW_WIDTH_12



`define  ROW_WDTH  13



`else



`define  ROW_WDTH  `ROW_WIDTH



`endif
























`ifdef ENB_MEM_RST



`endif



`ifdef CLK_SYNC_TRACE



`endif



`ifdef WL_DYNDLY



`endif
   



















`ifdef DLY_DQS_DQ



`else



`endif





`ifdef ENB_MEM_RST



`endif



`ifdef DIFF



`endif



`ifdef PHY_REG_P2



`else



`endif



`ifdef PHY_REG_P2



`endif




`ifdef DLY_DQS_DQ



`else



`endif



`ifdef DDR3_2T
 assign  hdbf975 = 1'b1;

`else
 assign  hdbf975 = 1'b0;

`endif




`ifdef NO_WRITE_LEVEL



`else



`endif




`define TSTAB1  `TSTAB/6









`define USR_RST_CLK_CNT  8'd20   // 20 x 5ns = 100 ns

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      mrdcf77 <= 1'b0;   else      mrdcf77 <= nr6b762;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      gbe7bbc <= 8'h0;   else if (yma3f05 == `USR_RST_CLK_CNT - 1)      gbe7bbc <= 8'h0;   else if ((!nr6b762 && ip547e0) || |(yma3f05) )      gbe7bbc <= yma3f05 + 1;   else      gbe7bbc <= yma3f05;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      jr9b9ee <= 1'b0;   else if (ri1e9e7)      jr9b9ee <= 1'b1;
end
assign of7ae83    = rst_n & nr6b762 & ~|(yma3f05) & ksa8fc;

`ifdef ENB_MEM_RST

assign em_ddr_reset_n = os62d77;

`endif





`ifdef RDIMM



always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      tj3dde5 <= 8'h0;   else if (swbcbd8 || ww7797b)      tj3dde5 <= 8'h0;   else if (os62d77)      tj3dde5 <= tj3dde5 + 1;
end


`ifdef REGRESSION 
  assign swbcbd8 = (tj3dde5 == 9'd40);

`else
  assign swbcbd8 = (tj3dde5 == `TSTAB1);

`endif


always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      dmeef2f <= 3'd0;   else if (ww7797b)      dmeef2f <= 3'd0;   else if (swbcbd8)      dmeef2f <= dmeef2f + 1;
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      ww7797b <= 1'b0;   else if (!os62d77)      ww7797b <= 1'b0;   else if (dmeef2f == 3'd6)      ww7797b <= 1'b1;
end


`else

assign ww7797b = 1'b1;

`endif



always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin      lfa04dc   <= 1'b1;   end   else if (yx6535b) begin      lfa04dc   <= 1'b0;   end
end
always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin      gd26e7   <= 1'b1;      db1373d  <= 1'b1;   end   else  begin      gd26e7   <= ri25054;      db1373d  <= db282a3;   end
end



assign  cal_bc4 = sj856f4;
assign  dfi_init_complete = sj7b0f;
always @(posedge sclk or negedge rst_n) begin   if(!rst_n)        zm99229   <= 1'b0;   else                zm99229   <= yx6535b & ww7797b & ri1e9e7;
end

always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        kfbe06d      <= 1'b0;        phy_init_act     <= 1'b0;    end    else if (yx6535b && !bna5758) begin            kfbe06d      <= 1'b1;        phy_init_act     <= 1'b1;    end    else if (sj7b0f) begin        kfbe06d      <= 1'b0;        phy_init_act     <= 1'b0;    end
end
assign init_start    = bna5758 && !wl_act && !sj7b0f;


`ifdef DESEL

assign ksac9d1      = (rgeedc0) ? bn9efb3  : (fp91712 | (db8b897 & cm5c4be));

`else

assign ksac9d1      = (rgeedc0) ? bn9efb3  : fp91712;

`endif

assign al4bfac       = (rgeedc0) ? fnf67e4   : ep12f8c;
assign uvd92fe      = (rgeedc0) ? anbecfc  : fc2a45c;
assign wjc97f5        = (rgeedc0) ? alf7d9f    : jc522e2;
assign hb5fd64     = (rgeedc0) ? rt5a4f7 : db8b897;
assign vifeb27     = (rgeedc0) ? vvd27be : cm5c4be;
assign osf593a      = (rgeedc0) ? vk93df6  : ipe25f1;
assign zx64e88       = (rgeedc0) ? qib3f27 : sw97c65;
assign lf27446    = (rgeedc0) ? hqe2d2    : me4c525;
assign ba3a236   = (rgeedc0) ? pf71693 : ww62928;
assign osd11b3 = (rgeedc0) ? rv8b49e : pu14941;

assign   aa54b4 = ~xwf194d;









`define  P_MRS   4'h0



`define  P_READ  4'h5



`define  P_WRITE 4'h4


assign  jp5597f  =  `MRS0_INIT;
assign  coacbfe  =  `MRS1_INIT;
assign  mr65ff0  =  `MRS2_INIT;
assign  je2ff84  =  `MRS3_INIT;
assign   jpc711f = (db288d5 == `P_READ)  ? gd29380 : 1'b0;
assign   bn388ff = (db288d5 == `P_WRITE) ? ui49c05 : 1'b0;
assign   kqffe29       = (db288d5 == `P_WRITE) ? 1'b1 : 1'b0;
assign   wy1ffc5       = (db288d5 == `P_READ)  ? 1'b1 : 1'b0;

assign   pf452e3    = (qiabe9 | fn55f48 | (~xl963b & zzafa46) );
assign   of4b8f5   = ~(qiabe9 | fn55f48 | (~xl963b & zzafa46));
assign   sj2971e     = ~(fn55f48 | (~xl963b & zzafa46));









`define DQSDLL_LAT_CNT 5'd15


always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        uddcntln         <= 1'b0;        ec98a04        <= 5'd0;    end    else begin        if (gq2157d || ira42af) begin            uddcntln     <= 1'b1;            ec98a04    <= `DQSDLL_LAT_CNT;        end        else begin            if (jcf1cb7 != 5'd0)               ec98a04   <= jcf1cb7-1;            if (jcf1cb7 == 5'd0)               uddcntln    <= 1'b0;        end    end
end

assign sj8fb6f  = rg4d6ec;
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      su7db7c  <= 1'b0;      wjedbe1  <= 1'b0;      os6df0c  <= 1'b0;      en6f860  <= 1'b0;      fa7c305  <= 1'b0;      rge182a  <= 1'b0;   end   else begin      su7db7c  <= rg42446;      wjedbe1  <= mt12233;      os6df0c  <= db9119c;      en6f860  <= ks88ce7;      fa7c305  <= kq46739;      rge182a  <= ir339c9;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      osc47ff <= 1'b0;      kf23ff8 <= 1'b0;      eaff148      <= 1'b0;      off8a41      <= 1'b0;      psc520d      <= 1'b0;      sj2906a      <= 1'b0;      ne48355      <= 1'b0;      gb41aaa      <= 1'b0;   end   else begin      osc47ff <= mg1aba4;      kf23ff8 <= jcd5d21;      eaff148      <= gq2157d;      off8a41      <= qiabe9;      psc520d      <= fn55f48;      sj2906a      <= zzafa46;      ne48355      <= qg7d237;            gb41aaa      <= dze91b8;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      me5c7ac      <= 1'b0;      lde3d61      <= 1'b0;      fc1eb0f      <= 1'b0;      eaf587b      <= 1'b0;      czd938f     <= 1'b1;      ipc9c7d     <= 1'b1;      wj4e3ed     <= 1'b1;      fn71f6d     <= 1'b1;      ieac3d9       <= 1'b1;
      nr61ec9       <= 1'b1;
      qif64e       <= 1'b1;
      jp7b271       <= 1'b1;
   end   else begin
      me5c7ac   <= (qiabe9 | fn55f48 | (~xl963b & zzafa46) );      lde3d61   <= (fn55f48 | zzafa46 | (~xl963b & qg7d237) );      fc1eb0f   <= (zzafa46 | qg7d237 | (~xl963b & dze91b8) );      eaf587b   <= (qg7d237 | dze91b8 | (~xl963b & xw48dc7) );      czd938f  <= ~(qiabe9 | fn55f48 | (~xl963b & zzafa46));      ipc9c7d  <= ~(fn55f48 | zzafa46 | (~xl963b & qg7d237));      wj4e3ed  <= ~(zzafa46 | qg7d237 | (~xl963b & dze91b8));      fn71f6d  <= ~(qg7d237 | dze91b8 | (~xl963b & xw48dc7));      ieac3d9    <= ~(fn55f48 | (~xl963b & zzafa46));      nr61ec9    <= ~(zzafa46 | (~xl963b & qg7d237));      qif64e    <= ~(qg7d237 | (~xl963b & dze91b8));      jp7b271    <= ~(dze91b8 | (~xl963b & xw48dc7));
   end
end


assign  rg471c4 = mg1aba4 | epae90a;
assign  ddr_wr_lat_odd = jcd5d21 | hb74855;


`ifdef CS_WIDTH_2

assign  gbe8e38 = {&(fp91712),db8b897,cm5c4be,ipe25f1};

`else

assign  gbe8e38 = {fp91712,db8b897,cm5c4be,ipe25f1};

`endif






always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      vk2f608   <= 'd0;      jp7b042    <= 'd0;      dzd8217   <= 'd0;   end   else if (vi7c38b) begin      vk2f608   <= {uk3b1df[6],uk3b1df[5],uk3b1df[4],uk3b1df[2]};      jp7b042    <= {nrd8ef9[4],nrd8ef9[3]};      dzd8217   <= {pfc77ce[5],pfc77ce[4],pfc77ce[3]};   end   else if ((db288d5 == `P_MRS) & jc522e2 == 3'h0)      vk2f608   <= {fc2a45c[6],fc2a45c[5],fc2a45c[4],fc2a45c[2]};   else if ((db288d5 == `P_MRS) & jc522e2 == 3'h1)      jp7b042    <= {fc2a45c[4],fc2a45c[3]};   else if ((db288d5 == `P_MRS) & jc522e2 == 3'h2)      dzd8217   <= {fc2a45c[5],fc2a45c[4],fc2a45c[3]};
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      cbd555 <= 4'h0;   end   else begin      case (ec1f829)       4'b0010 : cbd555 <= 4'd5;       4'b0100 : cbd555 <= 4'd6;       4'b0110 : cbd555 <= 4'd7;       4'b1000 : cbd555 <= 4'd8;       4'b1010 : cbd555 <= 4'd9;       4'b1100 : cbd555 <= 4'd10;       default : cbd555 <= 4'd5;      endcase   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      wj6aaac <= 4'h0;   end   else begin      case (uie0a4e)       3'b000 : wj6aaac <= 4'h5;       3'b001 : wj6aaac <= 4'h6;       default: wj6aaac <= 4'h5;      endcase   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      bnaab2f <= 4'h0;      vv55565 <= 4'h0;   end   else begin      case (zxfc149)       2'b00 :begin              bnaab2f <= fp371d8;              vv55565 <= kq46e3b;              end       2'b01 :begin              bnaab2f <= fp371d8 + kq46e3b - 1;              vv55565 <= kq46e3b + kq46e3b - 1;              end       2'b10 :begin              bnaab2f <= fp371d8  + kq46e3b - 2;              vv55565 <= kq46e3b + kq46e3b - 2;              end       default:begin              bnaab2f <= fp371d8;              vv55565 <= kq46e3b;              end      endcase   end
end

assign gd17e22 = (db288d5 == `P_READ) ? ~cm5c4be : 1'b0;
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      lfbf115 <= 1'b0;      shf88af <= 1'b0;      uic457d <= 1'b0;      hd22be8 <= 1'b0;      ym15f47 <= 1'b0;      vxafa38 <= 1'b0;      kq7d1c7 <= 1'b0;   end   else begin      lfbf115 <= of4e029;      shf88af <= sh7014d;      uic457d <= oh80a6c;      hd22be8 <= mg5365;      ym15f47 <= ux29b28;      vxafa38 <= zk4d944;      kq7d1c7 <= by6ca23;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      pio_read        <= 1'b0;      kf85f8 <= 1'b0;      hqa8709     <= 1'b0;   end   else begin   case (rib8ec7)          4'd5 : begin                    pio_read        <= of4e029;                      kf85f8 <= 1'b1;                        hqa8709     <= rg42446;                 end          4'd6 : begin                    pio_read        <= of4e029;                      kf85f8 <= 1'b0;                        hqa8709     <= rg42446;                 end          4'd7 : begin                 pio_read        <= sh7014d;                 kf85f8 <= 1'b1;                 hqa8709     <= mt12233;                 end          4'd8 : begin                 pio_read        <= sh7014d;                 kf85f8 <= 1'b0;                 hqa8709     <= mt12233;                 end          4'd9 : begin                 pio_read        <= oh80a6c;                 kf85f8 <= 1'b1;                 hqa8709     <= mt12233;                 end         4'd10 : begin                 pio_read        <= oh80a6c;                 kf85f8 <= 1'b0;                 hqa8709     <= mt12233;                 end         4'd11 : begin                 pio_read        <= mg5365;                 kf85f8 <= 1'b1;                 hqa8709     <= db9119c;                 end         4'd12 : begin                 pio_read        <= mg5365;                 kf85f8 <= 1'b0;                 hqa8709     <= db9119c;                 end         4'd13 : begin                 pio_read        <= ux29b28;                 kf85f8 <= 1'b1;                 hqa8709     <= ks88ce7;                 end         4'd14 : begin                 pio_read        <= ux29b28;                 kf85f8 <= 1'b0;                 hqa8709     <= ks88ce7;                 end         4'd15 : begin                 pio_read        <= zk4d944;                 kf85f8 <= 1'b1;                 hqa8709     <= kq46739;                 end       default : begin                 pio_read        <= of4e029;                 kf85f8 <= 1'b0;                 hqa8709     <= 1'b0;                 end   endcase   end
end

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      ho42fc4 <= 1'b0;      ba2a5a0      <= {`DQS_WIDTH{1'b0}};      ls96813     <= 1'b1;      dm52d02       <= 1'b1;         end   else begin   case (pfc763b)          4'd5 : begin                    ho42fc4 <= 1'b1;                  ba2a5a0     <= {`DQS_WIDTH{ps5d639}};                 ls96813    <= zk58e5a;                 dm52d02      <= hoeb1cb;                                  end          4'd6 : begin                    ho42fc4 <= 1'b0;                  ba2a5a0     <= {`DQS_WIDTH{ps5d639}};                 ls96813    <= zk58e5a;                 dm52d02      <= hoeb1cb;                                  end            4'd8 : begin                    ho42fc4 <= 1'b0;                 ba2a5a0     <= {`DQS_WIDTH{hbc72d2}};                 ls96813    <= twee42;                 dm52d02      <= vvd2f0e;                                  end          4'd9 : begin                    ho42fc4 <= 1'b1;                 ba2a5a0     <= {`DQS_WIDTH{kf39697}};                 ls96813    <= ay77212;                 dm52d02      <= ym97877;                                  end         4'd10 : begin                    ho42fc4 <= 1'b0;                 ba2a5a0     <= {`DQS_WIDTH{kf39697}};                 ls96813    <= ay77212;                 dm52d02      <= ym97877;                                  end         4'd11 : begin                    ho42fc4 <= 1'b1;                 ba2a5a0     <= {`DQS_WIDTH{eacb4bc}};                 ls96813    <= cob9091;                 dm52d02      <= wybc3b9;                                  end         4'd12 : begin                    ho42fc4 <= 1'b0;                 ba2a5a0     <= {`DQS_WIDTH{eacb4bc}};                 ls96813    <= cob9091;                 dm52d02      <= wybc3b9;                                  end         4'd13 : begin                    ho42fc4 <= 1'b1;                 ba2a5a0     <= {`DQS_WIDTH{rt5a5e1}};                 ls96813    <= vvc8488;                 dm52d02      <= xwe1dc8;                                  end       default : begin                 ho42fc4 <= 1'b0;                 ba2a5a0      <= {`DQS_WIDTH{1'b0}};                 ls96813     <= 1'b1;                 dm52d02       <= 1'b1;                                  end   endcase   end
end

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      jc6c9e4 <= 1'b0;   else if (wwc11d2)      jc6c9e4 <= 1'b1;
end


`ifdef RDIMM1

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      uv7fc23 <= 1'b0;   else      uv7fc23 <= nee12c7;
end


`else

assign  uv7fc23 = nee12c7;

`endif


always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      yxfde62    <= 1'b0;      qgef315   <= 1'b0;      lf91fd6   <= 1'b0;      ux8feb6   <= 1'b0;      kd7f5b4   <= 1'b0;      icfada5   <= 1'b0;      qtd6d28   <= 1'b0;      jr28a2f     <= 1'b0;      rt4517e    <= 1'b0;      jr28bf6    <= 1'b0;      rt45fb6    <= 1'b0;      ls2fdb7    <= 1'b0;      ld7edbb    <= 1'b0;   end   else begin      yxfde62    <= uv7fc23;      qgef315   <= wwc11d2;      lf91fd6   <= wl8e90;      ux8feb6   <= yz121f5;      kd7f5b4   <= ux90fac;      icfada5   <= mg87d64;


`ifdef DDR3_2T
      qtd6d28   <= (lq6c13c && !dzc2acf) ? sw3eb20 : mg87d64;

`else
      qtd6d28   <= mg87d64;

`endif
      jr28a2f     <= xl963b;      rt4517e    <= wy23b;      jr28bf6    <= vk11d8;      rt45fb6    <= oh8ec2;      ls2fdb7    <= rg47615;      ld7edbb    <= ks3b0ab;   end
end


`ifdef PHY_REG_P2

always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      mg2bf89   <= 1'b0;   else      mg2bf89   <= (xl963b) ? uv7fc23 : (uv7fc23 & !wwc11d2 & !wl8e90);
end

`else

assign mg2bf89 = (xl963b) ? uv7fc23 : (uv7fc23 & !wwc11d2 & !wl8e90);

`endif


always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      pff6dde <= 1'b0;   else if (hd2717a && !xl38bd6 && jcc5eb7 )      pff6dde <= uv446ae;
end

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      cm49ed2       <= 1'b0;      bl4f691       <= 1'b0;      th7b48f       <= 1'b0;      hqad4bb <= 'b0;   end   else begin      cm49ed2       <= mg2bf89;      bl4f691       <= do20a02;      th7b48f       <= ou5012;      hqad4bb <= gd29add;
   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      kqf08e3  <= 1'b0;   end   else begin      kqf08e3  <= jcc5eb7;   end
end
assign hd84719 =  (gd23574) ? 1'b0 : (~jcc5eb7 | ~hodf3b8);




always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      rv3795f   <= {`DATA_WIDTH{1'b0}};   else      rv3795f   <= aa2e0bc;
end


`ifdef DATA_SIZE_72



`ifdef x4



`ifdef RDIMM
      assign   jpe6f2b = {|(sw82f04[71:68]), |(sw82f04[63:60]), |(sw82f04[55:52]),                           |(sw82f04[47:44]), |(sw82f04[39:36]), |(sw82f04[31:28]),                           |(sw82f04[23:20]), |(sw82f04[15:12]), |(sw82f04[ 7: 4]),                           |(sw82f04[67:64]), |(sw82f04[59:56]), |(sw82f04[51:48]),                           |(sw82f04[43:40]), |(sw82f04[35:32]), |(sw82f04[27:24]),                           |(sw82f04[19:16]), |(sw82f04[11: 8]), |(sw82f04[ 3: 0]) };


`else
      assign   jpe6f2b = {|(sw82f04[71:68]), |(sw82f04[67:64]),                           |(sw82f04[63:60]), |(sw82f04[59:56]), |(sw82f04[55:52]), |(sw82f04[51:48]),                           |(sw82f04[47:44]), |(sw82f04[43:40]), |(sw82f04[39:36]), |(sw82f04[35:32]),                           |(sw82f04[31:28]), |(sw82f04[27:24]), |(sw82f04[23:20]), |(sw82f04[19:16]),                           |(sw82f04[15:12]), |(sw82f04[11: 8]), |(sw82f04[ 7: 4]), |(sw82f04[ 3: 0]) };


`endif



`else // x8

assign   jpe6f2b = {|(sw82f04[71:64]), |(sw82f04[63:56]), |(sw82f04[55:48]), |(sw82f04[47:40]), |(sw82f04[39:32]),                     |(sw82f04[31:24]), |(sw82f04[23:16]), |(sw82f04[15: 8]), |(sw82f04[ 7: 0]) };

`endif // x4 



`endif




`ifdef DATA_SIZE_64  



`ifdef x4



`ifdef RDIMM
      assign   jpe6f2b = {|(sw82f04[63:60]), |(sw82f04[55:52]), |(sw82f04[47:44]), |(sw82f04[39:36]),                           |(sw82f04[31:28]), |(sw82f04[23:20]), |(sw82f04[15:12]), |(sw82f04[ 7: 4]),                           |(sw82f04[59:56]), |(sw82f04[51:48]), |(sw82f04[43:40]), |(sw82f04[35:32]),                           |(sw82f04[27:24]), |(sw82f04[19:16]), |(sw82f04[11: 8]), |(sw82f04[ 3: 0]) };


`else
      assign   jpe6f2b = {|(sw82f04[63:60]), |(sw82f04[59:56]), |(sw82f04[55:52]), |(sw82f04[51:48]),                           |(sw82f04[47:44]), |(sw82f04[43:40]), |(sw82f04[39:36]), |(sw82f04[35:32]),                           |(sw82f04[31:28]), |(sw82f04[27:24]), |(sw82f04[23:20]), |(sw82f04[19:16]),                           |(sw82f04[15:12]), |(sw82f04[11: 8]), |(sw82f04[ 7: 4]), |(sw82f04[ 3: 0]) };


`endif



`else
      assign   jpe6f2b = {|(sw82f04[63:56]), |(sw82f04[55:48]), |(sw82f04[47:40]), |(sw82f04[39:32]),                           |(sw82f04[31:24]), |(sw82f04[23:16]), |(sw82f04[15: 8]), |(sw82f04[ 7: 0]) };


`endif



`endif




`ifdef DATA_SIZE_56



`ifdef x4



`ifdef RDIMM
      assign   jpe6f2b = {|(sw82f04[55:52]), |(sw82f04[47:44]), |(sw82f04[39:36]),                           |(sw82f04[31:28]), |(sw82f04[23:20]), |(sw82f04[15:12]), |(sw82f04[ 7: 4]),                           |(sw82f04[51:48]), |(sw82f04[43:40]), |(sw82f04[35:32]),                           |(sw82f04[27:24]), |(sw82f04[19:16]), |(sw82f04[11: 8]), |(sw82f04[ 3: 0]) };


`else
      assign   jpe6f2b = {|(sw82f04[55:52]), |(sw82f04[51:48]),                           |(sw82f04[47:44]), |(sw82f04[43:40]), |(sw82f04[39:36]), |(sw82f04[35:32]),                           |(sw82f04[31:28]), |(sw82f04[27:24]), |(sw82f04[23:20]), |(sw82f04[19:16]),                           |(sw82f04[15:12]), |(sw82f04[11: 8]), |(sw82f04[ 7: 4]), |(sw82f04[ 3: 0]) };


`endif



`else

assign   jpe6f2b = {|(sw82f04[55:48]), |(sw82f04[47:40]), |(sw82f04[39:32]),                     |(sw82f04[31:24]), |(sw82f04[23:16]), |(sw82f04[15: 8]), |(sw82f04[ 7: 0]) };

`endif



`endif




`ifdef DATA_SIZE_48



`ifdef x4



`ifdef RDIMM
        assign   jpe6f2b = {|(sw82f04[47:44]), |(sw82f04[39:36]), |(sw82f04[31:28]),                             |(sw82f04[23:20]), |(sw82f04[15:12]), |(sw82f04[ 7: 4]),                             |(sw82f04[43:40]), |(sw82f04[35:32]), |(sw82f04[27:24]),                             |(sw82f04[19:16]), |(sw82f04[11: 8]), |(sw82f04[ 3: 0]) };


`else
        assign   jpe6f2b = {|(sw82f04[47:44]), |(sw82f04[43:40]), |(sw82f04[39:36]), |(sw82f04[35:32]),                             |(sw82f04[31:28]), |(sw82f04[27:24]), |(sw82f04[23:20]), |(sw82f04[19:16]),                             |(sw82f04[15:12]), |(sw82f04[11: 8]), |(sw82f04[ 7: 4]), |(sw82f04[ 3: 0]) };


`endif



`else

assign   jpe6f2b = {|(sw82f04[47:40]), |(sw82f04[39:32]),                     |(sw82f04[31:24]), |(sw82f04[23:16]), |(sw82f04[15: 8]), |(sw82f04[ 7: 0]) };

`endif



`endif




`ifdef DATA_SIZE_40



`ifdef x4



`ifdef RDIMM
      assign jpe6f2b = {|(sw82f04[39:36]), |(sw82f04[31:28]),                         |(sw82f04[23:20]), |(sw82f04[15:12]), |(sw82f04[ 7: 4]),                         |(sw82f04[35:32]), |(sw82f04[27:23]),                         |(sw82f04[19:16]), |(sw82f04[11: 8]), |(sw82f04[ 3: 0]) };


`else
      assign jpe6f2b = {|(sw82f04[39:36]), |(sw82f04[35:32]),                         |(sw82f04[31:28]), |(sw82f04[27:24]), |(sw82f04[23:20]), |(sw82f04[19:16]),                         |(sw82f04[15:12]), |(sw82f04[11: 8]), |(sw82f04[ 7: 4]), |(sw82f04[ 3: 0]) };


`endif



`else

assign   jpe6f2b = {|(sw82f04[39:32]),                     |(sw82f04[31:24]), |(sw82f04[23:16]), |(sw82f04[15: 8]), |(sw82f04[ 7: 0]) };

`endif



`endif




`ifdef DATA_SIZE_32



`ifdef x4



`ifdef RDIMM
      assign   jpe6f2b = {|(sw82f04[31:28]), |(sw82f04[23:20]), |(sw82f04[15:12]), |(sw82f04[ 7: 4]),                           |(sw82f04[27:24]), |(sw82f04[19:16]), |(sw82f04[11: 8]), |(sw82f04[ 3: 0]) };


`else
      assign   jpe6f2b = {|(sw82f04[31:28]), |(sw82f04[27:24]), |(sw82f04[23:20]), |(sw82f04[19:16]),                           |(sw82f04[15:12]), |(sw82f04[11: 8]), |(sw82f04[ 7: 4]), |(sw82f04[ 3: 0]) };


`endif



`else

assign   jpe6f2b = {|(sw82f04[31:24]), |(sw82f04[23:16]), |(sw82f04[15:8]), |(sw82f04[7:0])};

`endif



`endif




`ifdef DATA_SIZE_24



`ifdef x4



`ifdef RDIMM
      assign   jpe6f2b = {|(sw82f04[23:20]), |(sw82f04[15:12]), |(sw82f04[ 7: 4]),                           |(sw82f04[19:16]), |(sw82f04[11: 8]), |(sw82f04[ 3: 0]) };


`else
      assign   jpe6f2b = {|(sw82f04[23:20]), |(sw82f04[19:16]),                           |(sw82f04[15:12]), |(sw82f04[11: 8]), |(sw82f04[ 7: 4]), |(sw82f04[ 3: 0]) };


`endif



`else

assign   jpe6f2b = {|(sw82f04[23:16]), |(sw82f04[15:8]), |(sw82f04[7:0])};

`endif



`endif




`ifdef DATA_SIZE_16



`ifdef x4



`ifdef RDIMM
      assign   jpe6f2b = {|(sw82f04[15:12]), |(sw82f04[ 7: 4]),                           |(sw82f04[11: 8]), |(sw82f04[ 3: 0]) };


`else
      assign   jpe6f2b = {|(sw82f04[15:12]), |(sw82f04[11: 8]), |(sw82f04[ 7: 4]), |(sw82f04[ 3: 0]) };


`endif



`else

assign   jpe6f2b = {|(sw82f04[15: 8]), |(sw82f04[ 7: 0])};

`endif



`endif




`ifdef DATA_SIZE_8



`ifdef x4

assign   jpe6f2b = {|(sw82f04[ 7: 4]), |(sw82f04[ 3: 0]) };

`else

assign   jpe6f2b = |(sw82f04);

`endif



`endif



always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      eace0a9 <= 1'b0;   else      eace0a9 <= |(hod545e & wj705e0);
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      oub6ef6     <= {`DSIZE{1'b0}};      irbbd83 <= 1'b0;      hqb77b0          <= {`USER_DM{1'b0}};      osdec1c      <= {`DQS_WIDTH{1'b0}};      blf60e1       <= 1'b0;      ntb070f     <= 1'b0;   end   else  begin      oub6ef6     <= cbbe329;      irbbd83 <= uvc98a4;      hqb77b0          <= fc8ca6b;      osdec1c      <= mrd6ed4;      blf60e1       <= fcb76a5;      ntb070f     <= sjbb52b;   end
end


`ifdef PHY_REG_P2

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zm8387e     <= {`DSIZE{1'b0}};      vx1c3f2          <= {`USER_DM{1'b0}};      dme1f97 <= 1'b0;      oufcba      <= {`DQS_WIDTH{1'b0}};      pf7e5d0       <= 1'b0;      yxf2e87     <= 1'b0;   end   else  begin      zm8387e     <= ym1567e;      vx1c3f2          <= yzab3f1;      dme1f97 <= ea59f8c;      oufcba      <= tucfc60;      pf7e5d0       <= dz7e302;      yxf2e87     <= faf1817;   end
end

`endif











`ifdef WL_DYNDLY


always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        wl_dyndly    <= {7*`DQS_WIDTH{1'b0}};   end   else begin        wl_dyndly    <= ohbb718;   end
end

`endif




`ifdef NO_WRITE_LEVEL

assign  wl_act         = 1'b0;
assign  blf6489    = 1'b0;
assign  oh2cc2e     = 1'b0;
assign  ux85d13    = 16'h0;
assign  lq7ca36      = {`CS_WIDTH{1'b0}};
assign  mgb6966    = 1'b0;
assign  wl_done        = osdb8c5;
assign  sjb4b30     = {`DQS_WIDTH{1'b0}};
assign  wl_err         = 1'b0;
assign  wl_rst_datapath  = 1'b0;
assign  qge51b3       = {`CS_WIDTH{1'b0}};
assign  rg6cbe1              = 1'b0;

always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        vvf3192   <= {`DQS_WIDTH{1'b0}};        ohbb718    <= {7*`DQS_WIDTH{1'b0}};   end   else begin        vvf3192   <= {`DQS_WIDTH{1'b0}};        ohbb718    <= {`DQS_WIDTH{7'h00}};   end
end
always @(posedge sclk or negedge rst_n) begin   if(!rst_n) begin        osdb8c5   <= 1'b0;   end   else begin        if (vi7c38b)        osdb8c5   <= 1'b1;   end
end


`else

assign  osdb8c5 = vi7c38b;
always @ (posedge sclk or negedge rst_n) begin    if (!rst_n) begin        aaa3ac8      <= 3'b0;    end    else if (bna5758) begin        aaa3ac8      <= pfc77ce[5:3];    end
end

always @ (aaa3ac8) begin   case (aaa3ac8)    3'b000 : wl1d641 = 3'h3;    3'b001 : wl1d641 = 3'h3;    3'b010 : wl1d641 = 3'h4;    3'b011 : wl1d641 = 3'h4;    default: wl1d641 = 3'h3;   endcase
end
hb5a5ff ui43ab9(        .sclk               (sclk),
    .rst_n              (rst_n),
    .bnbffb9           (osdb8c5),    .gb6583d         (nrd8ef9[4:3]),    .oh2c1ec     (wl1d641),    .wyacaa4        (mr6a527 ),    .ng2a041           (bn9efb3 ),    .eace0a9              (ph949e3 ),    .qt70549            ({nrd8ef9[9],nrd8ef9[6],nrd8ef9[2]}),    .wy82a4c                ({nrd8ef9[5],nrd8ef9[1]} ),    .uk15260            (nrd8ef9[0] ),    .ux230f9          (pfc77ce[10:0] ),    .clocking_good      (ri1e9e7 ),    .wl_phase_dly_cnt   (`WL_DQS_PHASE_DLY_CNT),        .wl_done            (wl_done ),    .wl_err             (wl_err ),    .wl_act             (wl_act ),    .blf6489        (blf6489 ),    .oh2cc2e         (oh2cc2e),    .rt4f946        (rt4f946),    .ux85d13        (ux85d13) ,    .lq7ca36          (lq7ca36 ),    .mgb6966        (mgb6966),    .pu83cc6       (),    .sjb4b30         (sjb4b30),    .vvf3192       (vvf3192),    .ou98c97          (ohbb718),    .qge51b3         (qge51b3),    .wl_rst_datapath    (wl_rst_datapath)    );


`endif



cz7fd84 nrd7b52(      .clk(sclk ) ,   .rst_n(rst_n ),   .param_txpr(`TXPR),   .param_tmod(`TMOD),   .param_tmrd(`TMRD),   .param_tzqinit(`TZQINIT) ,   .init_start(gbc3768) ,
      .lq6621f(lq6621f ),   .qi98423( ),   .the666b(the666b ),   .oh3335e(oh3335e ),   .ls99af5(ls99af5 ),   .zxcd7aa(zxcd7aa ),   .zx6bd56(zx6bd56 ),   .sh5eab7(sh5eab7 ),   .eaf55bd(eaf55bd ),   .hdaade8(hdaade8 ),   .xwc566d(yxc60d6 ),   .fpbfbb7(fpbfbb7 ),   .init_done(en6a5db )
);
of4ee61 twad116(
   .clk(sclk ),   .rst_n(rst_n ),   .fpbfbb7(oh8f2e6 ),   .lq6621f(qg5cd50),   .addr_init_0(`MRS0_INIT),   .addr_init_1(`MRS1_INIT),   .addr_init_2(`MRS2_INIT),   .addr_init_3(`MRS3_INIT),   .the666b(ofd6f6a ),   .oh3335e(vkb7b55 ),   .ls99af5(lsbdaaa ),   .zxcd7aa(shed553 ),   .zx6bd56(of6aa9d ),   .sh5eab7(jp554ed ),   .eaf55bd(jraa76f ),   .hdaade8(os53b7e ),   .yxc60d6(shedf88),   .kfbe06d(rgeedc0),   .wl_act(wl_act),   .ux85d13(mg8897a),   .oh2cc2e(ww681ec),   .dm66174(rgdff21),   .pu30ba2(wwff90b),   .blf6489(dzecb68),
   .fa47a08(fa47a08 ),   .rv3d042(rv3d042 ),   .kde8216(kde8216 ),   .cz410b5(cz410b5 ),   .sj85ac(sj85ac ),   .tu42d64(tu42d64 ),   .zz16b22(zz16b22 ),   .wyacaa4(wyacaa4),   .mirror_on(mirror_on)
);
assign  jp6e8a3 = !hqe2d2[0];
assign  rv9b25f      = zxfc858;
always @ (negedge rst_n or posedge sclk) begin  if (!rst_n) begin     oh29ba2    <=  'b0;     dm4dd14 <=  1'b1;  end  else if ( wl_act && en41a07)  begin     oh29ba2    <= hod545e;     dm4dd14 <= 1'b0;  end  else  begin     oh29ba2    <=  'b0;     dm4dd14 <=  1'b1;  end
end





assign dfi_rddata = mg98c9d;
kf8055  kd6f6d5 (    .rst_n         (rst_n),    .sclk          (sclk),    .eclk          (hdaa7dd),    .zx55990      (yk53eee),    .aaacc86        (yz9f771),    .ddrclkpol     (ddrclkpol),    .fp32182      (th4a938),    .sj90c17        (rgee316),    .xy860bc        (dz718b2),    .hq305e3    (ri8c0bb),


`ifdef DLY_DQS_DQ
    .co82f1a     (mg56b2),


`else
    .co82f1a     (sw2b590),


`endif
    .sj178d0         (sj178d0),    .aabc685            (em_ddr_data)   );
jebdc43   ykefbe0 (    .sclk          (sclk),    .fn710da    (oh36257),    .sj90c17        (rgee316),    .xy860bc        (dz718b2),    .zm1b581   (em_ddr_dm)
);
ng89b0c  bnb0f60 (    .rst_n          (rst_n),    .dqsbufd_rst    (gd8a3d3),    .sclk           (sclk),    .eclk           (hdaa7dd),    .ps636f6          (hdaa7dd),    .jpf9f9a           (dqs_read),    .qgdbd92   (vvf3192),    .osdec91    (ohbb718),    .blf6489    (dzecb68),    .lsb244f (kf176ac),    .mg9227b (kf176ac),    .db913d8       (mtbb564),    .ls89ec7       (zkdab25),    .vv4f63b       (mr605da)  ,    .dqsdel         (mg34c40)  ,    .ddrclkpol      (ddrclkpol),    .prmbdet        (prmbdet),


`ifdef DLY_DQS_DQ
    .wy3bff7      (ww59eba),


`else
    .wy3bff7      (xweb3d7),


`endif
    .aaacc86         (aaacc86),    .zx55990       (zx55990),    .sj90c17         (sj90c17),    .xy860bc         (xy860bc),    .fcb8615       (fcb8615)  ,    .shc30aa            (em_ddr_dqs)
);
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zmb203c   <= {`DSIZE{1'b0}};      czd6407    <= {`DSIZE{1'b0}};   end   else begin      zmb203c   <= sw2b590;      czd6407    <= aa2b433;   end
end



`ifdef DLY_DQS_DQ

always @(negedge rst_n or posedge vifbacf) begin   if (!rst_n) begin      lqeb20d    <= 1'b0;   end   else begin      lqeb20d    <= ~lqeb20d;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      vifbacf         <= {`DQS_WIDTH{1'b0}};      rtdd67a         <= {`DQS_WIDTH{1'b0}};      zz8415a  <= {`DSIZE{1'b0}};      tw20ad6  <= {`DSIZE{1'b0}};   end   else begin      vifbacf         <= ww59eba;      rtdd67a         <= vifbacf;      zz8415a  <= mg56b2;      tw20ad6  <= zz8415a;   end
end


assign ea5906a        = lqeb20d ? (vifbacf[7] | rtdd67a[7])  : vifbacf[7];
assign zxc8351 = (lqeb20d && !ea5906a) ? tw20ad6[255:224] : zz8415a[255:224];
assign xweb3d7        = {ea5906a,vifbacf[6:0]};
assign sw2b590 = {zxc8351,zz8415a[223:0]};



`endif








always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      fpbf759     <= {`DQS_WIDTH{1'b1}};   end   else begin      fpbf759     <= xweb3d7;   end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      wl901e3 <= {`DQS_WIDTH{1'b0}};   end   else begin

`ifdef ECP3_8_0
      wl901e3 <= xweb3d7 ^ pfec5ae;


`else
      wl901e3 <= xweb3d7 & ~pfec5ae;


`endif
   end
end     generate        for (ipe792c=0; ipe792c<`DQS_WIDTH; ipe792c=ipe792c+1)        begin: an366c5        xl9b163 xl9b163(               .sclk              (sclk),               .rst_n             (rst_n),


`ifdef PHY_REG_P2
               .pio_read          (qgf5900),               .cal_bc4           (ks3b0ab),


`else



`ifdef PHY_REG
               .pio_read          (ux90fac),               .cal_bc4           (vk11d8),


`else
               .pio_read          (yz121f5),               .cal_bc4           (wy23b),


`endif



`endif
               .ls1eceb   (xj5a198[ipe792c]),               .dzf675b    (co97eeb[ipe792c])               );        end      endgenerate
assign qvd475  = |(nrdd8b5);
assign en6a3ac = &(nrdd8b5);



always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      shed93c        <= 1'b0;   else if ( !ba93a2f || (db32745 && !(hq1e093)) )      shed93c        <= 1'b0;   else if (vi63c12)      shed93c        <= 1'b1;
end

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      dfi_rddata_valid    <= 1'b0;   end   else begin      dfi_rddata_valid    <= db32745;   end
end





`ifdef x4
     generate        for (cz51d64=0; cz51d64<`DQS_WIDTH; cz51d64=cz51d64+1)        begin: mrc677a        qted8a6 qted8a6(               .sclk                 (sclk),               .rst_n                (rst_n),               .cal_bc4              (ldd8559),               .lqca207     (vi63c12),               .qi881dd     (nrdd8b5[cz51d64]),               .czd6407     (ri25686[(cz51d64*16)+15 : (cz51d64*16)]),               .rv3d1e2                (dze3b64[                (cz51d64*4)+3 :                 (cz51d64*4)]),               .kde2d14                (dze3b64[   `DATA_WIDTH +(cz51d64*4)+3 :    `DATA_WIDTH +(cz51d64*4)]),               .hq14be3                (dze3b64[(2*`DATA_WIDTH)+(cz51d64*4)+3 : (2*`DATA_WIDTH)+(cz51d64*4)]),               .dze359a                (dze3b64[(3*`DATA_WIDTH)+(cz51d64*4)+3 : (3*`DATA_WIDTH)+(cz51d64*4)])               );        end      endgenerate

`else
     generate        for (cz51d64=0; cz51d64<`DQS_WIDTH; cz51d64=cz51d64+1)        begin: mrc677a        qted8a6 qted8a6(               .sclk                 (sclk),               .rst_n                (rst_n),               .cal_bc4              (ldd8559),               .lqca207     (vi63c12),               .qi881dd     (nrdd8b5[cz51d64]),               .czd6407     (ri25686[(cz51d64*32)+31 : (cz51d64*32)]),               .rv3d1e2                (dze3b64[                (cz51d64*8)+7 :                 (cz51d64*8)]),               .kde2d14                (dze3b64[   `DATA_WIDTH +(cz51d64*8)+7 :    `DATA_WIDTH +(cz51d64*8)]),               .hq14be3                (dze3b64[(2*`DATA_WIDTH)+(cz51d64*8)+7 : (2*`DATA_WIDTH)+(cz51d64*8)]),               .dze359a                (dze3b64[(3*`DATA_WIDTH)+(cz51d64*8)+7 : (3*`DATA_WIDTH)+(cz51d64*8)])               );        end      endgenerate

`endif




     wy1f02e ipf8170(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[2:0]),               .dqs_read          (dqs_read[0])               ) ;


`ifdef x4
     wy1f02e byd0b91(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[5:3]),               .dqs_read          (dqs_read[1])               ) ;


`endif




`ifdef DATA_SIZE_8



`else



`ifdef x4
     wy1f02e ir268f9(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[8:6]),               .dqs_read          (dqs_read[2])               ) ;     wy1f02e ps79dc8(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[11:9]),               .dqs_read          (dqs_read[3])               ) ;


`else
     wy1f02e byd0b91(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[5:3]),               .dqs_read          (dqs_read[1])               ) ;


`endif





`ifdef DATA_SIZE_16



`else




`ifdef x4
     wy1f02e of6aa42(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[14:12]),               .dqs_read          (dqs_read[4])               ) ;     wy1f02e tj3216(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[17:15]),               .dqs_read          (dqs_read[5])               ) ;


`else
     wy1f02e ir268f9(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[8:6]),               .dqs_read          (dqs_read[2])               ) ;


`endif





`ifdef DATA_SIZE_24



`else





`ifdef x4
     wy1f02e rtfc5bf(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[20:18]),               .dqs_read          (dqs_read[6])               ) ;     wy1f02e ls93be5(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[23:21]),               .dqs_read          (dqs_read[7])               ) ;


`else
     wy1f02e ps79dc8(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[11:9]),               .dqs_read          (dqs_read[3])               ) ;


`endif






`ifdef DATA_SIZE_32



`else





`ifdef x4
     wy1f02e nr7ec97(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[26:24]),               .dqs_read          (dqs_read[8])               ) ;     wy1f02e ba9636b(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[29:27]),               .dqs_read          (dqs_read[9])               ) ;


`else
     wy1f02e of6aa42(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[14:12]),               .dqs_read          (dqs_read[4])               ) ;


`endif






`ifdef DATA_SIZE_40



`else





`ifdef x4
     wy1f02e mgaee7(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[32:30]),               .dqs_read          (dqs_read[10])               ) ;     wy1f02e rg5d703(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[35:33]),               .dqs_read          (dqs_read[11])               ) ;


`else
     wy1f02e tj3216(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[17:15]),               .dqs_read          (dqs_read[5])               ) ;


`endif




`ifdef DATA_SIZE_48



`else





`ifdef x4
     wy1f02e bn9ed02(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[38:36]),               .dqs_read          (dqs_read[12])               ) ;     wy1f02e aa8dfbe(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[41:39]),               .dqs_read          (dqs_read[13])               ) ;


`else
     wy1f02e rtfc5bf(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[20:18]),               .dqs_read          (dqs_read[6])               ) ;


`endif





`ifdef DATA_SIZE_56



`else






`ifdef x4
     wy1f02e ipccca1(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[44:42]),               .dqs_read          (dqs_read[14])               ) ;     wy1f02e zz9ad4(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[47:45]),               .dqs_read          (dqs_read[15])               ) ;


`else
     wy1f02e ls93be5(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[23:21]),               .dqs_read          (dqs_read[7])               ) ;


`endif







`ifdef DATA_SIZE_64



`else





`ifdef x4
     wy1f02e ou2b3a1(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[50:48]),               .dqs_read          (dqs_read[16])               ) ;     wy1f02e fpaf8e2(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[53:51]),               .dqs_read          (dqs_read[17])               ) ;


`else
     wy1f02e nr7ec97(               .rst_n             (rst_n),               .sclk              (sclk),               .sclk2x            (sclk2x),               .hdbf975            (lq6c13c),               .pff6dde        (dzc2acf),               .mg2bf89           (mg2bf89),               .cm49ed2        (do20a02),               .bl4f691        (ou5012),               .th7b48f        (lf28090),               .read_pulse_tap    (tw2f871[26:24]),               .dqs_read          (dqs_read[8])               ) ;


`endif






`endif  // 72bit



`endif  // 64bit



`endif  // 56bit



`endif  // 48bit



`endif  // 40bit



`endif  // 32bit



`endif  // 24bit



`endif  // 16bit







`ifdef ECP3_SP2

DQSBUFG thc7de7 (.SCLK(sclk2x), .DDRCLKPOL(), .DQCLK1(ir80f1d));

`endif





`ifdef CLK_SWAP
   iebcf84 uve7c21 [`CLKO_WIDTH -1:0] (.ym3e10d(sclk2x), .db84349(1'b1), .ym21a4e(1'b0),       .cbd270(psd0cc6), .kq49c23(doad160)) ;

`else
   iebcf84 uve7c21 [`CLKO_WIDTH -1:0] (.ym3e10d(sclk2x), .db84349(1'b0), .ym21a4e(1'b1),       .cbd270(psd0cc6), .kq49c23(doad160)) ;

`endif



OB hqb8fcf [`CLKO_WIDTH -1:0] (.I(doad160), .O(em_ddr_clk));


`ifdef DIFF

OB rtf9ef3 [`CLKO_WIDTH -1:0] (.I(~doad160), .O(kdd6feb));

`endif






`ifdef RDIMM

assign of75926 = 1'b1;

`else

assign of75926 = 1'b0;

`endif




`ifdef RDIMM

always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        qv7420   <= 1'b0;     end     else if (mr605f4 && thf9dc2) begin        qv7420   <= 1'b1;     end     else if (mr605f4 && !thf9dc2) begin        qv7420   <= 1'b0;     end
end

`else

always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        qv7420   <= 1'b0;     end     else        qv7420   <= 1'b1;
end

`endif





`ifdef DDR3_2T


always @(posedge sclk  or negedge rst_n) begin   if (~rst_n)      ui77342   <= 1'b0;   else      ui77342   <= mr605f4;
end
always @(posedge sclk  or negedge rst_n) begin     if (~rst_n) begin        do3a105   <= 1'b0;        end       else if (ui77342)begin        do3a105   <= ~gd23574;       end
end
always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      ie9743c     <= {`DSIZE{1'b0}};      xlba1e0 <= 1'b0;      fn710da          <= {`USER_DM{1'b0}};      co8783a      <= {`DQS_WIDTH{1'b0}};      sj3c1d0       <= 1'b0;      qge0e84     <= 1'b0;   end   else  begin      case (coac95a)        1'b0: begin            ie9743c     <= ym1567e;            fn710da          <= yzab3f1;            xlba1e0 <= ea59f8c;            co8783a      <= tucfc60;            sj3c1d0       <= dz7e302;            qge0e84     <= faf1817;            end      1'b1: begin            ie9743c     <= zm8387e;            fn710da          <= vx1c3f2;            xlba1e0 <= dme1f97;            co8783a      <= oufcba;            sj3c1d0       <= pf7e5d0;            qge0e84     <= yxf2e87;            end       endcase    end
end


`else   // 1T mode




`ifdef RDIMM

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      ie9743c     <= {`DSIZE{1'b0}};      xlba1e0 <= 1'b0;      fn710da          <= {`USER_DM{1'b0}};      co8783a      <= {`DQS_WIDTH{1'b0}};      sj3c1d0       <= 1'b0;      qge0e84     <= 1'b0;   end   else  begin   case (jcd592b)     1'b0: begin         ie9743c     <= ym1567e;         xlba1e0 <= ea59f8c;         fn710da          <= yzab3f1;         co8783a      <= tucfc60;         sj3c1d0       <= dz7e302;         qge0e84     <= faf1817;         end   1'b1: begin         ie9743c     <= zm8387e;         xlba1e0 <= dme1f97;         fn710da          <= vx1c3f2;         co8783a      <= oufcba;         sj3c1d0       <= pf7e5d0;         qge0e84     <= yxf2e87;         end    endcase    end
end

`else

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      ie9743c     <= {`DSIZE{1'b0}};      xlba1e0 <= 1'b0;      fn710da          <= {`USER_DM{1'b0}};      co8783a      <= {`DQS_WIDTH{1'b0}};      sj3c1d0       <= 1'b0;      qge0e84     <= 1'b0;   end   else  begin   case (jcd592b)     1'b0: begin         ie9743c     <= cbbe329;         xlba1e0 <= uvc98a4;         fn710da          <= fc8ca6b;         co8783a      <= mrd6ed4;         sj3c1d0       <= fcb76a5;         qge0e84     <= sjbb52b;         end   1'b1: begin         ie9743c     <= ym1567e;         xlba1e0 <= ea59f8c;         fn710da          <= yzab3f1;         co8783a      <= tucfc60;         sj3c1d0       <= dz7e302;         qge0e84     <= faf1817;         end    endcase    end
end

`endif




`endif  // DDR3_2T 







assign aye5d77 = (gd23574 & ~qgf049a) | (thf9dc2 & qgf049a)  | uv446ae;

mt185fc byd0e1b (                      .rst_n       (rst_n),                      .sclk        (sclk) ,                      .hdbf975      (lq6c13c),                      .mirror_on   (kd609e3),                      .aye5d77     (tw4f1c),                      .ddr_cs_n    (zm2f5bb),                      .ddr_ras_n   (hd2717a),                      .ddr_cas_n   (xl38bd6),                      .ddr_we_n    (jcc5eb7),                      .ddr_ba      (dzfc9c5),                      .ddr_addr    (yz9f938),                      .ddr_cke     (fae4e2f),                      .zmb8369    (of7adda),                      .ip4e07c      (ip4e07c),                      .jp4a34b  (jp4a34b),                      .en51a5f  (en51a5f),                      .ou8d2fc  (ou8d2fc),                      .ne697e0  (ne697e0),                      .al4bf03   (al4bf03),                      .hb5f81c   (hb5f81c),                      .xjfc0e7   (xjfc0e7),                      .eae073e   (eae073e),                      .db39f1 (db39f1),                      .bn1cf8e (bn1cf8e),                      .wje7c76   (blf939c),                      .ou3e3b5   (cz4e735),                      .psf1da9  (psf1da9),                      .vx8ed4b  (vx8ed4b),                      .rg76a5e  (rg76a5e),                      .hdb52f2  (hdb52f2)              );      


`ifdef RDIMM
  assign wje7c76 = (yx4151f) ? {`CS_WIDTH{1'b1}} : oub93d4;  assign ou3e3b5 = (yx4151f) ? {`CS_WIDTH{1'b1}} : dz4f505;

`else
  assign wje7c76 = oub93d4;  assign ou3e3b5 = dz4f505;

`endif




`ifdef DESEL


always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      zx649a8     <= 1'b1;      ie24d46 <= 1'b0;      ep26a30     <= 1'b1;      ba35185     <= 1'b1;   end   else begin      zx649a8     <= db285c9;      ie24d46 <= gd23574;      ep26a30     <= mrd99d7;      ba35185     <= ls2f667;   end
end







assign je93e4e = (phy_init_act & ~dzecb68) | (~phy_init_act & ( db285c9 | (~ep26a30 & ~ba35185)));
assign ir9f273 = (phy_init_act & mrc9ea0)    | (~phy_init_act & ( mrc9ea0 ));



`else

assign je93e4e = db285c9;
assign ir9f273 = mrc9ea0;

`endif



iebcf84 ir367b1  (.ym3e10d(sclk), .db84349(rt45ecc), .ym21a4e(ls2f667),                   .cbd270(sclk), .kq49c23(irb46c9));
iebcf84 kf252e  (.ym3e10d(sclk), .db84349(hb7b33a), .ym21a4e(mrd99d7),                   .cbd270(sclk), .kq49c23(qgead1b));
iebcf84 xw57745  (.ym3e10d(sclk), .db84349(gbccebc), .ym21a4e(ea675e5),                   .cbd270(sclk), .kq49c23(ww568d9));
iebcf84 vve3ba3 [`BANK_WIDTH -1 :0] (.ym3e10d(sclk), .db84349(xy3af28), .ym21a4e(hbd7942),                   .cbd270(sclk), .kq49c23(faebab4));
iebcf84 ay7749c [`ROW_WDTH -1:0]  (.ym3e10d(sclk), .db84349(qibca17), .ym21a4e(eae50b9),                   .cbd270(sclk), .kq49c23(ne5d5a3));


iebcf84 ie87f92  [`CS_WIDTH-1:0] (.ym3e10d(sclk), .db84349(xw42e4f), .ym21a4e(ep1727a),                    .cbd270(sclk), .kq49c23(ksa364c));
iebcf84 pf4f334 [`CKE_WIDTH -1:0]  (.ym3e10d(sclk), .db84349(ip7a82f), .ym21a4e(osd417c),                    .cbd270(sclk), .kq49c23(tw1b260));
iebcf84 co8745e [`CS_WIDTH-1:0] (.ym3e10d(sclk), .db84349(xla0be1), .ym21a4e(sw5f0e),                    .cbd270(sclk), .kq49c23(ww68b03));


assign #1 qv18f6f  = jccff49;
assign #1 sh6063d  = os773fd;
assign #1 lf31ed  = ksb9fe9;
assign #1 rt45818  = dbb5dcf;
assign #1 mt2c0c7 = cbaee7f;



`ifdef RDIMM



`ifdef CS_WIDTH_1
    assign #1 nrc7b7c  = {1'b1,al7fa4a};


`else
    assign #1 nrc7b7c  = al7fa4a;


`endif



`else

assign #1 nrc7b7c  = al7fa4a;

`endif


assign #1 gbedf37  = enfd254;
assign #1 db3dbe6  = ph38d26;
OB fnd8877                     (.I(qv18f6f), .O(em_ddr_cas_n));
OB rief80                     (.I(sh6063d), .O(em_ddr_ras_n));
OB wwf0085                      (.I(lf31ed) , .O(em_ddr_we_n)) ;
OB aa10a25   [`BANK_WIDTH -1:0] (.I(rt45818) , .O(em_ddr_ba))     ;
OB kd44a26 [`ROW_WDTH -1:0]   (.I(mt2c0c7), .O(em_ddr_addr))  ;

OB en44d5e    [`CS_WIDTH_BB-1:0]  (.I(nrc7b7c), .O(em_ddr_cs_n))   ;
OB anabd6a   [`CKE_WIDTH -1:0]  (.I(gbedf37) , .O(em_ddr_cke))    ;
OB baad569   [`CS_WIDTH-1:0]    (.I(db3dbe6), .O(em_ddr_odt))    ;

always@* begin hdaa7dd<=pua8071[0];ri1e9e7<=pua8071[1];gd8a3d3<=pua8071[2];mg34c40<=pua8071[3];fc2a45c<={dfi_address>>1,pua8071[4]};jc522e2<={dfi_bank>>1,pua8071[5]};fp91712<={dfi_cs_n>>1,pua8071[6]};db8b897<=pua8071[7];cm5c4be<=pua8071[8];ipe25f1<=pua8071[9];ep12f8c<=pua8071[10];sw97c65<={dfi_odt>>1,pua8071[11]};cbbe329<={dfi_wrdata>>1,pua8071[12]};xwf194d<=pua8071[13];fc8ca6b<={dfi_wrdata_mask>>1,pua8071[14]};yx6535b<=pua8071[15];gd29add<={read_pulse_tap>>1,pua8071[16]};rg4d6ec<=pua8071[17];nr6b762<=pua8071[18];jcf1cb7<={ec98a04>>1,pua8071[19]};nrdd8b5<={co97eeb>>1,pua8071[20]};pfec5ae<={fpbf759>>1,pua8071[21]};os62d77<=pua8071[22];ph949e3<=pua8071[23];dbb5dcf<={faebab4>>1,pua8071[24]};cbaee7f<={ne5d5a3>>1,pua8071[25]};os773fd<=pua8071[26];ksb9fe9<=pua8071[27];jccff49<=pua8071[28];al7fa4a<={ksa364c>>1,pua8071[29]};enfd254<={tw1b260>>1,pua8071[30]};rgee316<={sj90c17>>1,pua8071[31]};dz718b2<={xy860bc>>1,pua8071[32]};th4a938<={fcb8615>>1,pua8071[33]};yz9f771<={aaacc86>>1,pua8071[34]};yk53eee<={zx55990>>1,pua8071[35]};tj271a4<={doad160>>1,pua8071[36]};ph38d26<={ww68b03>>1,pua8071[37]};yxc6937<={rt45818>>1,pua8071[38]};ks349bc<={mt2c0c7>>1,pua8071[39]};gda4de1<=pua8071[40];oh26f0c<=pua8071[41];fp37865<=pua8071[42];mgbc32e<={nrc7b7c>>1,pua8071[43]};vie1970<={db3dbe6>>1,pua8071[44]};fpcb82<={gbedf37>>1,pua8071[45]};tw4f1c<=pua8071[46];aa2e0bc<={sj178d0>>1,pua8071[47]};wj705e0<={jpe6f2b>>1,pua8071[48]};sw82f04<={rv3795f>>1,pua8071[49]};qv17820<=pua8071[50];ksbc105<=pua8071[51];eae0828<=pua8071[52];xy4140<=pua8071[53];do20a02<=pua8071[54];ou5012<=pua8071[55];lf28090<=pua8071[56];wwc11d2<=pua8071[57];wl8e90<=pua8071[58];yz121f5<=pua8071[59];ux90fac<=pua8071[60];mg87d64<=pua8071[61];sw3eb20<=pua8071[62];qgf5900<=pua8071[63];lq6c13c<=pua8071[64];dmdae4c<=pua8071[65];rtd7263<={ou24f3c>>1,pua8071[66]};wy23b<=pua8071[67];vk11d8<=pua8071[68];oh8ec2<=pua8071[69];rg47615<=pua8071[70];ks3b0ab<=pua8071[71];ldd8559<=pua8071[72];dzc2acf<=pua8071[73];ym1567e<={oub6ef6>>1,pua8071[74]};yzab3f1<={hqb77b0>>1,pua8071[75]};ea59f8c<=pua8071[76];tucfc60<={osdec1c>>1,pua8071[77]};dz7e302<=pua8071[78];faf1817<=pua8071[79];ri8c0bb<={ie9743c>>1,pua8071[80]};mr605da<=pua8071[81];oh36257<={fn710da>>1,pua8071[82]};kf176ac<={co8783a>>1,pua8071[83]};mtbb564<=pua8071[84];zkdab25<=pua8071[85];jcd592b<=pua8071[86];coac95a<=pua8071[87];nr64ad0<=pua8071[88];ri25686<={czd6407>>1,pua8071[89]};aa2b433<={zmb203c>>1,pua8071[90]};xj5a198<={wl901e3>>1,pua8071[91]};psd0cc6<=pua8071[92];zm86632<=pua8071[93];yz33193<=pua8071[94];mg98c9d<={dze3b64>>1,pua8071[95]};gbc64e8<=pua8071[96];db32745<=pua8071[97];ba93a2f<=pua8071[98];kd609e3<=pua8071[99];mr605f4<=pua8071[100];rt45ecc<=pua8071[101];ls2f667<=pua8071[102];hb7b33a<=pua8071[103];mrd99d7<=pua8071[104];gbccebc<=pua8071[105];ea675e5<=pua8071[106];xy3af28<={xjfc0e7>>1,pua8071[107]};hbd7942<={eae073e>>1,pua8071[108]};qibca17<={db39f1>>1,pua8071[109]};eae50b9<={bn1cf8e>>1,pua8071[110]};db285c9<={wje7c76>>1,pua8071[111]};xw42e4f<={je93e4e>>1,pua8071[112]};ep1727a<={ir9f273>>1,pua8071[113]};oub93d4<={blf939c>>1,pua8071[114]};mrc9ea0<={ou3e3b5>>1,pua8071[115]};dz4f505<={cz4e735>>1,pua8071[116]};ip7a82f<={psf1da9>>1,pua8071[117]};osd417c<={vx8ed4b>>1,pua8071[118]};xla0be1<={rg76a5e>>1,pua8071[119]};sw5f0e<={hdb52f2>>1,pua8071[120]};tw2f871<={hqad4bb>>1,pua8071[121]};vi7c38b<=pua8071[122];hod545e<={sjb4b30>>1,pua8071[123]};hqe2d2<={oh29ba2>>1,pua8071[124]};pf71693<=pua8071[125];rv8b49e<=pua8071[126];rt5a4f7<=pua8071[127];vvd27be<=pua8071[128];vk93df6<=pua8071[129];bn9efb3<=pua8071[130];alf7d9f<={sj85ac>>1,pua8071[131]};anbecfc<={tu42d64>>1,pua8071[132]};fnf67e4<=pua8071[133];qib3f27<={rv9b25f>>1,pua8071[134]};yz9f938<={uvd92fe>>1,pua8071[135]};dzfc9c5<={wjc97f5>>1,pua8071[136]};fae4e2f<={al4bfac>>1,pua8071[137]};hd2717a<=pua8071[138];xl38bd6<=pua8071[139];jcc5eb7<=pua8071[140];zm2f5bb<={ksac9d1>>1,pua8071[141]};of7adda<={zx64e88>>1,pua8071[142]};mrd6ed4<={lf27446>>1,pua8071[143]};fcb76a5<=pua8071[144];sjbb52b<=pua8071[145];gbc3768<=pua8071[146];sj7b0f<=pua8071[147];bna5758<=pua8071[148];rgeedc0<=pua8071[149];ps5d639<=pua8071[150];hoeb1cb<=pua8071[151];zk58e5a<=pua8071[152];hbc72d2<=pua8071[153];kf39697<=pua8071[154];eacb4bc<=pua8071[155];rt5a5e1<=pua8071[156];vvd2f0e<=pua8071[157];ym97877<=pua8071[158];wybc3b9<=pua8071[159];xwe1dc8<=pua8071[160];twee42<=pua8071[161];ay77212<=pua8071[162];cob9091<=pua8071[163];vvc8488<=pua8071[164];rg42446<=pua8071[165];mt12233<=pua8071[166];db9119c<=pua8071[167];ks88ce7<=pua8071[168];kq46739<=pua8071[169];ir339c9<=pua8071[170];ls9ce4c<=pua8071[171];sj856f4<=pua8071[172];xl963b<=pua8071[173];uvc98a4<=pua8071[174];me4c525<={ba2a5a0>>1,pua8071[175]};ww62928<=pua8071[176];pu14941<=pua8071[177];qg5cd50<=pua8071[178];ri25054<=pua8071[179];db282a3<=pua8071[180];yx4151f<=pua8071[181];ksa8fc<=pua8071[182];ip547e0<=pua8071[183];yma3f05<={gbe7bbc>>1,pua8071[184]};ec1f829<={vk2f608>>1,pua8071[185]};zxfc149<={jp7b042>>1,pua8071[186]};uie0a4e<={dzd8217>>1,pua8071[187]};nee12c7<=pua8071[188];gd29380<=pua8071[189];ui49c05<=pua8071[190];of4e029<=pua8071[191];sh7014d<=pua8071[192];oh80a6c<=pua8071[193];mg5365<=pua8071[194];ux29b28<=pua8071[195];zk4d944<=pua8071[196];by6ca23<=pua8071[197];en6511a<=pua8071[198];db288d5<={gbe8e38>>1,pua8071[199]};uv446ae<=pua8071[200];
gd23574<=pua8071[201];mg1aba4<=pua8071[202];jcd5d21<=pua8071[203];epae90a<=pua8071[204];hb74855<=pua8071[205];ira42af<=pua8071[206];gq2157d<=pua8071[207];qiabe9<=pua8071[208];fn55f48<=pua8071[209];zzafa46<=pua8071[210];qg7d237<=pua8071[211];dze91b8<=pua8071[212];xw48dc7<=pua8071[213];kq46e3b<={cbd555>>1,pua8071[214]};fp371d8<={wj6aaac>>1,pua8071[215]};rib8ec7<={vv55565>>1,pua8071[216]};pfc763b<={bnaab2f>>1,pua8071[217]};uk3b1df<={jp5597f>>1,pua8071[218]};nrd8ef9<={coacbfe>>1,pua8071[219]};pfc77ce<={mr65ff0>>1,pua8071[220]};uk3be77<={je2ff84>>1,pua8071[221]};hodf3b8<=pua8071[222];thf9dc2<=pua8071[223];dzecb68<=pua8071[224];wwff90b<={lq7ca36>>1,pua8071[225]};ww681ec<=pua8071[226];rgdff21<=pua8071[227];en41a07<=pua8071[228];zxfc858<={qge51b3>>1,pua8071[229]};ofd6f6a<=pua8071[230];vkb7b55<=pua8071[231];lsbdaaa<=pua8071[232];shed553<=pua8071[233];of6aa9d<=pua8071[234];jp554ed<=pua8071[235];jraa76f<=pua8071[236];os53b7e<=pua8071[237];shedf88<=pua8071[238];oh8f2e6<=pua8071[239];mr6a527<=pua8071[240];mg8897a<={ux85d13>>1,pua8071[241]};vi63c12<=pua8071[242];hq1e093<=pua8071[243];qgf049a<=pua8071[244];end
always@* begin ks1500e[2047]<=clocking_good;ks1500e[2046]<=dqsbufd_rst;ks1500e[2045]<=hqb77b0[0];ks1500e[2044]<=dqsdel;ks1500e[2042]<=irbbd83;ks1500e[2040]<=dfi_address[0];ks1500e[2036]<=osdec1c[0];ks1500e[2035]<=kfbe06d;ks1500e[2032]<=dfi_bank[0];ks1500e[2025]<=blf60e1;ks1500e[2023]<=pf452e3;ks1500e[2017]<=dfi_cs_n[0];ks1500e[2011]<=hd84719;ks1500e[2002]<=ntb070f;ks1500e[1999]<=sj2971e;ks1500e[1992]<=read_pulse_tap[0];ks1500e[1987]<=dfi_ras_n;ks1500e[1974]<=blf6489;ks1500e[1957]<=ie9743c[0];ks1500e[1952]<=sh5eab7;ks1500e[1950]<=of4b8f5;ks1500e[1947]<=qv3c76c;ks1500e[1937]<=nr61ec9;ks1500e[1936]<=mac_bc4;ks1500e[1927]<=dfi_cas_n;ks1500e[1922]<=mrdcf77;ks1500e[1919]<=ls2fdb7;ks1500e[1913]<=zmb203c[0];ks1500e[1901]<=lq7ca36[0];ks1500e[1873]<=doad160[0];ks1500e[1867]<=xlba1e0;ks1500e[1857]<=eaf55bd;ks1500e[1852]<=me5c7ac;ks1500e[1851]<=ou24f3c[0];ks1500e[1849]<=kd7f5b4;ks1500e[1847]<=do893da;ks1500e[1846]<=dze3b64[0];ks1500e[1827]<=qif64e;ks1500e[1825]<=mem_rst_n;ks1500e[1807]<=dfi_we_n;ks1500e[1802]<=vx8ed4b[0];ks1500e[1797]<=gbe7bbc[0];ks1500e[1791]<=ld7edbb;ks1500e[1780]<=ls99af5;ks1500e[1779]<=wl901e3[0];ks1500e[1776]<=gd26e7;ks1500e[1767]<=qgef315;ks1500e[1761]<=ou3e3b5[0];ks1500e[1758]<=qge51b3[0];ks1500e[1755]<=oh2cc2e;ks1500e[1733]<=ip4e07c;ks1500e[1729]<=os6df0c;ks1500e[1726]<=jp5597f[0];ks1500e[1716]<=al4bfac[0];ks1500e[1698]<=ww68b03[0];ks1500e[1687]<=fn710da[0];ks1500e[1679]<=zx64e88[0];ks1500e[1673]<=vxafa38;ks1500e[1666]<=hdaade8;ks1500e[1657]<=lde3d61;ks1500e[1655]<=jr28a2f;ks1500e[1651]<=icfada5;ks1500e[1646]<=cm49ed2;ks1500e[1644]<=ux1db27;ks1500e[1606]<=jp7b271;ks1500e[1602]<=ec98a04[0];ks1500e[1577]<=ou8d2fc;ks1500e[1567]<=dfi_cke;ks1500e[1558]<=cz410b5;ks1500e[1557]<=rg76a5e[0];ks1500e[1552]<=kqffe29;ks1500e[1547]<=rge182a;ks1500e[1546]<=vk2f608[0];ks1500e[1535]<=pff6dde;ks1500e[1526]<=je2ff84[0];ks1500e[1512]<=zxcd7aa;ks1500e[1510]<=ir80f1d;ks1500e[1504]<=db1373d;ks1500e[1502]<=fad082b;ks1500e[1486]<=lf91fd6;ks1500e[1474]<=cz4e735[0];ks1500e[1469]<=the666b;ks1500e[1468]<=lq6621f;ks1500e[1464]<=ir9f273[0];ks1500e[1463]<=rt4f946;ks1500e[1453]<=uvd92fe[0];ks1500e[1443]<=osf593a;ks1500e[1418]<=jp4a34b;ks1500e[1413]<=rv3d042;ks1500e[1410]<=en6f860;ks1500e[1405]<=coacbfe[0];ks1500e[1384]<=hb5fd64;ks1500e[1377]<=dm4dd14;ks1500e[1348]<=rt45818[0];ks1500e[1332]<=lfbf115;ks1500e[1326]<=co8783a[0];ks1500e[1325]<=eae073e[0];ks1500e[1311]<=lf27446[0];ks1500e[1299]<=kq7d1c7;ks1500e[1296]<=sh6063d;ks1500e[1287]<=irb46c9;ks1500e[1284]<=yxc60d6;ks1500e[1266]<=fc1eb0f;ks1500e[1263]<=rt4517e;ks1500e[1255]<=qtd6d28;ks1500e[1244]<=bl4f691;ks1500e[1240]<=shed93c;ks1500e[1233]<=uic457d;ks1500e[1218]<=osc47ff;ks1500e[1211]<=qge0e84;ks1500e[1207]<=bn1cf8e[0];ks1500e[1165]<=czd938f;ks1500e[1157]<=co97eeb[0];ks1500e[1151]<=osd11b3;ks1500e[1132]<=fn71f6d;ks1500e[1106]<=ne697e0;ks1500e[1100]<=rg471c4;ks1500e[1088]<=qv18f6f;ks1500e[1086]<=dfi_odt[0];ks1500e[1077]<=gb41aaa;ks1500e[1069]<=fa47a08;ks1500e[1067]<=hdb52f2[0];ks1500e[1064]<=eace0a9;ks1500e[1057]<=eaff148;ks1500e[1053]<=tw1b260[0];ks1500e[1046]<=hqa8709;ks1500e[1044]<=jp7b042[0];ks1500e[1041]<=wyacaa4;ks1500e[1038]<=aye5d77;ks1500e[1023]<=eclk;ks1500e[1022]<=oub6ef6[0];ks1500e[1017]<=zm99229;ks1500e[1005]<=kqf08e3;ks1500e[996]<=dfi_init_start;ks1500e[976]<=zx6bd56;ks1500e[973]<=sj78ed;ks1500e[968]<=ieac3d9;ks1500e[961]<=jr9b9ee;ks1500e[959]<=rt45fb6;ks1500e[956]<=czd6407[0];ks1500e[936]<=zx55990[0];ks1500e[925]<=nrc8209;ks1500e[924]<=ux8feb6;ks1500e[923]<=hof127b;ks1500e[901]<=psf1da9[0];ks1500e[890]<=oh3335e;ks1500e[888]<=lfa04dc;ks1500e[883]<=yxfde62;ks1500e[880]<=blf939c[0];ks1500e[879]<=mgb6966;ks1500e[866]<=mirror_on;ks1500e[864]<=wjedbe1;ks1500e[863]<=bnaab2f[0];ks1500e[858]<=wjc97f5[0];ks1500e[839]<=ksac9d1[0];ks1500e[836]<=ym15f47;ks1500e[788]<=en51a5f;ks1500e[779]<=kde8216;ks1500e[776]<=wy1ffc5;ks1500e[773]<=fa7c305;ks1500e[763]<=mr65ff0[0];ks1500e[751]<=do3a105;ks1500e[734]<=ls96813;ks1500e[732]<=je93e4e[0];ks1500e[726]<=rv9b25f[0];ks1500e[721]<=vifeb27;ks1500e[706]<=jp6e8a3;ks1500e[688]<=oh29ba2[0];ks1500e[666]<=gd17e22;ks1500e[662]<=xjfc0e7[0];ks1500e[648]<=mt2c0c7[0];ks1500e[643]<=ww568d9;ks1500e[616]<=shf88af;ks1500e[609]<=bn388ff;ks1500e[605]<=sj3c1d0;ks1500e[603]<=db39f1[0];ks1500e[575]<=ba3a236;ks1500e[566]<=wj4e3ed;ks1500e[550]<=gbe8e38[0];ks1500e[544]<=lf31ed;ks1500e[538]<=ne48355;ks1500e[532]<=of7ae83;ks1500e[526]<=ksa364c[0];ks1500e[520]<=fpbfbb7;ks1500e[519]<=gbedf37[0];ks1500e[508]<=wl_done;ks1500e[498]<=dfi_wrdata_mask[0];ks1500e[484]<=eaf587b;ks1500e[479]<=jr28bf6;ks1500e[468]<=aaacc86[0];ks1500e[462]<=hdbf975;ks1500e[461]<=nefe24f;ks1500e[441]<=th7b48f;ks1500e[433]<=jc6c9e4;ks1500e[432]<=su7db7c;ks1500e[431]<=vv55565[0];ks1500e[418]<=hd22be8;ks1500e[388]<=kf23ff8;ks1500e[375]<=qv7420;ks1500e[367]<=dm52d02;ks1500e[366]<=wje7c76[0];ks1500e[363]<=zz16b22;ks1500e[344]<=sjb4b30[0];ks1500e[333]<=ho42fc4;ks1500e[331]<=hb5f81c;ks1500e[321]<=qgead1b;ks1500e[304]<=jpc711f;ks1500e[283]<=ipc9c7d;ks1500e[280]<=of75926;ks1500e[269]<=sj2906a;ks1500e[266]<=fpbf759[0];ks1500e[259]<=db3dbe6[0];ks1500e[254]<=init_start;ks1500e[249]<=dfi_wrdata_en;ks1500e[234]<=fcb8615[0];ks1500e[230]<=ecbcafe;ks1500e[216]<=sj8fb6f;ks1500e[215]<=wj6aaac[0];ks1500e[183]<=ba2a5a0[0];ks1500e[181]<=tu42d64[0];ks1500e[172]<=en6a5db;ks1500e[166]<=kf85f8;ks1500e[165]<=al4bf03;ks1500e[160]<=ne5d5a3[0];ks1500e[152]<=ddr_wr_lat_odd;ks1500e[140]<=en6a3ac;ks1500e[134]<=psc520d;ks1500e[129]<=nrc7b7c[0];ks1500e[124]<=dfi_wrdata[0];ks1500e[117]<=xy860bc[0];ks1500e[115]<=rv3795f[0];ks1500e[107]<=cbd555[0];ks1500e[91]<=aa54b4;ks1500e[90]<=sj85ac[0];ks1500e[86]<=hqad4bb[0];ks1500e[83]<=pio_read;ks1500e[80]<=faebab4[0];ks1500e[70]<=qvd475;ks1500e[67]<=off8a41;ks1500e[58]<=sj90c17[0];ks1500e[57]<=jpe6f2b[0];ks1500e[45]<=cal_bc4;ks1500e[41]<=dzd8217[0];ks1500e[35]<=ux85d13[0];ks1500e[28]<=sj178d0[0];end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule




`ifdef x4

`define GDATA_WIDTH 16

`else

`define GDATA_WIDTH 32 

`endif
`timescale 1 ns / 100 ps
module qted8a6 (
                 sclk,
                 rst_n,
                 cal_bc4,
                 lqca207,
                 qi881dd,
                 czd6407,
                 rv3d1e2,
                 kde2d14,
                 hq14be3,
                 dze359a
                 );
input                            rst_n;
input                            sclk;
input                            cal_bc4;
input                            lqca207;
input                            qi881dd;
input  [  `GDATA_WIDTH    -1:0]  czd6407;
output [ (`GDATA_WIDTH/4) -1:0]  rv3d1e2;
output [ (`GDATA_WIDTH/4) -1:0]  kde2d14;
output [ (`GDATA_WIDTH/4) -1:0]  hq14be3;
output [ (`GDATA_WIDTH/4) -1:0]  dze359a;
reg                              ou2b1e7;
reg    [  `GDATA_WIDTH    -1:0]  dm58f38;
reg                              nrc79c2;
wire   [ (`GDATA_WIDTH/4) -1:0]  rv3d1e2;
wire   [ (`GDATA_WIDTH/4) -1:0]  kde2d14;
wire   [ (`GDATA_WIDTH/4) -1:0]  hq14be3;
wire   [ (`GDATA_WIDTH/4) -1:0]  dze359a;
reg    [  `GDATA_WIDTH    -1:0]  bn16b36 ;
reg                              xlb59b7;
reg                              ecacdbf;
reg                              by66df8;

`ifdef x4

`else

`endif
reg xl963b;
reg fcb7e1c;
reg phbf0e2;
reg [`GDATA_WIDTH - 1 : 0] ri25686;
reg ofc38bc;
reg [`GDATA_WIDTH - 1 : 0] lf1c5e4;
reg cze2f27;
reg [`GDATA_WIDTH - 1 : 0] mt1793d;
reg ecbc9ed;
reg nee4f69;
reg tj27b4a;
reg [2047:0] ks1500e;
wire [10:0] pua8071;

`ifdef x4

`else

`endif

localparam rt4038b = 11,hq1c5e = 32'hfdffca4b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef x4


`else


`endif

always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      dm58f38    <= {`GDATA_WIDTH{1'b0}};      ou2b1e7    <= 1'b0;      xlb59b7            <= 1'b0;      ecacdbf            <= 1'b0;      by66df8            <= 1'b0;   end   else begin      dm58f38    <= ri25686;      ou2b1e7    <= phbf0e2;      xlb59b7            <= xl963b;      ecacdbf            <= ecbc9ed;      by66df8            <= nee4f69;   end
end



always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      nrc79c2    <= 1'b0;   end
   else if (!fcb7e1c || (!phbf0e2 && ofc38bc && !cze2f27 && !tj27b4a) ) begin      nrc79c2    <= 1'b0;   end   else if (fcb7e1c && !phbf0e2) begin      nrc79c2    <= 1'b1;   end   else if (tj27b4a) begin      nrc79c2    <= 1'b0;   end
end


always @(negedge rst_n or posedge sclk) begin   if (!rst_n) begin      bn16b36    <= {`GDATA_WIDTH{1'b0}};   end   else begin      bn16b36    <= cze2f27 ? ri25686 : lf1c5e4;   end
end






`ifdef x4

assign rv3d1e2 = {mt1793d[12],mt1793d[ 8],mt1793d[4],mt1793d[0]};  
assign kde2d14 = {mt1793d[13],mt1793d[ 9],mt1793d[5],mt1793d[1]};  
assign hq14be3 = {mt1793d[14],mt1793d[10],mt1793d[6],mt1793d[2]};  
assign dze359a = {mt1793d[15],mt1793d[11],mt1793d[7],mt1793d[3]};  

`else

assign rv3d1e2 = {mt1793d[28],mt1793d[24],mt1793d[20],mt1793d[16],mt1793d[12],mt1793d[ 8],mt1793d[4],mt1793d[0]};  
assign kde2d14 = {mt1793d[29],mt1793d[25],mt1793d[21],mt1793d[17],mt1793d[13],mt1793d[ 9],mt1793d[5],mt1793d[1]};  
assign hq14be3 = {mt1793d[30],mt1793d[26],mt1793d[22],mt1793d[18],mt1793d[14],mt1793d[10],mt1793d[6],mt1793d[2]};  
assign dze359a = {mt1793d[31],mt1793d[27],mt1793d[23],mt1793d[19],mt1793d[15],mt1793d[11],mt1793d[7],mt1793d[3]};  

`endif


always@* begin xl963b<=pua8071[0];fcb7e1c<=pua8071[1];phbf0e2<=pua8071[2];ri25686<={czd6407>>1,pua8071[3]};ofc38bc<=pua8071[4];lf1c5e4<={dm58f38>>1,pua8071[5]};cze2f27<=pua8071[6];mt1793d<={bn16b36>>1,pua8071[7]};ecbc9ed<=pua8071[8];nee4f69<=pua8071[9];tj27b4a<=pua8071[10];end
always@* begin ks1500e[2047]<=lqca207;ks1500e[2046]<=qi881dd;ks1500e[2044]<=czd6407[0];ks1500e[2040]<=ou2b1e7;ks1500e[2033]<=dm58f38[0];ks1500e[2019]<=nrc79c2;ks1500e[1991]<=bn16b36[0];ks1500e[1935]<=xlb59b7;ks1500e[1823]<=ecacdbf;ks1500e[1598]<=by66df8;ks1500e[1023]<=cal_bc4;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule



`timescale 1 ns / 100 ps
module iebcf84 (
	            ym3e10d,
		    db84349,
		    ym21a4e,
                    cbd270,
		    kq49c23);
input    ym3e10d;
input    db84349;
input    ym21a4e;
input    cbd270;
output   kq49c23;
wire     kq49c23;

`ifdef ECP3_SP2

`else

`endif
reg pfe66df;
reg ir336fe;
reg rv9b7f5;
reg sudbfae;
reg [2047:0] ks1500e;
wire [3:0] pua8071;

`ifdef ECP3_SP2


`else


`endif

localparam rt4038b = 4,hq1c5e = 32'hfdffd28b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef ECP3_SP2


`else


`endif


`ifdef ECP3_SP2
   ODDRXD  ald90ca  (.SCLK(ym3e10d), .DA(db84349), .DB(ym21a4e), .DQCLK1(cbd270), .Q(kq49c23));

`else
   ODDRXD1 ald90ca  (.SCLK(ym3e10d), .DA(db84349), .DB(ym21a4e), .Q(kq49c23)) ;

`endif


always@* begin pfe66df<=pua8071[0];ir336fe<=pua8071[1];rv9b7f5<=pua8071[2];sudbfae<=pua8071[3];end
always@* begin ks1500e[2047]<=db84349;ks1500e[2046]<=ym21a4e;ks1500e[2044]<=cbd270;ks1500e[1023]<=ym3e10d;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule



`timescale 1 ns / 100 ps
module wy1f02e (
                   rst_n,
                   sclk,
                   sclk2x,
                   hdbf975,
                   pff6dde,
                   mg2bf89,
                   cm49ed2,
                   bl4f691,
                   th7b48f,
                   read_pulse_tap,
                   dqs_read
                   );
input            rst_n;
input            sclk;
input            sclk2x;
input            hdbf975;
input            pff6dde;
input            mg2bf89;
input            cm49ed2;
input            bl4f691;
input            th7b48f;
input [2 : 0]    read_pulse_tap;
output           dqs_read;
reg              jpf624f         ;
reg              yzb127f      ;
reg              je893fc      ;
wire             yk49fe2      ;
reg              vv4ff11 ;
reg              sh7f88e     ;
reg              thfc474     ;
reg              ale23a6     ;
wire             dqs_read          ;
reg   [2 : 0]    hqad4bb;

`ifdef DDR3_2T
wire   nr74d16;

`ifdef SIM

`else

`endif

`else   // 1T

`ifdef SIM

`else

`endif

`endif
reg lq6c13c;
reg dzc2acf;
reg baa2dc8;
reg do20a02;
reg ou5012;
reg lf28090;
reg [2 : 0] gd29add;
reg ic43ec6;
reg mg1f630;
reg fafb180;
reg xjd8c03;
reg qtc601e;
reg do300f5;
reg yz807aa;
reg nt3d54;
reg [2 : 0] tw2f871;
reg [2047:0] ks1500e;
wire [15:0] pua8071;

`ifdef DDR3_2T

`ifdef SIM

`else

`endif

`else   // 1T

`ifdef SIM

`else

`endif

`endif

localparam rt4038b = 16,hq1c5e = 32'hfdffd84b;
localparam [31:0] jee2f3 = hq1c5e;
localparam ph8bcde = hq1c5e & 4'hf;
localparam [11:0] jpf37b4 = 'h7ff;
wire [(1 << ph8bcde) -1:0] icded3f;
reg [rt4038b-1:0] ohb4fce;
reg [ph8bcde-1:0] fc3f3ab [0:1];
reg [ph8bcde-1:0] icceadf;
reg sh756f8;
integer ohab7c4;
integer en5be24;


`ifdef DDR3_2T


`ifdef SIM


`else


`endif


`else   // 1T


`ifdef SIM


`else


`endif


`endif


`ifdef DDR3_2T
  assign nr74d16 = lq6c13c & ~dzc2acf;


`ifdef SIM
  always @(negedge rst_n or posedge sclk) begin     if (!rst_n)        hqad4bb <= 3'h0;     else if (gd29add < 3'd3)        hqad4bb <= (nr74d16) ? 3'h2 : 3'h0;     else        hqad4bb <= (nr74d16) ? gd29add : gd29add - 3'd2;  end


`else
  always @(negedge rst_n or posedge sclk) begin     if (!rst_n)        hqad4bb <= 3'h0;     else        hqad4bb <= (nr74d16) ? gd29add + 2 : gd29add;  end


`endif




`else   // 1T




`ifdef SIM
  always @(negedge rst_n or posedge sclk) begin     if (!rst_n)        hqad4bb <= 3'h0;     else if (gd29add < 3'd3)        hqad4bb <= 3'h0;     else        hqad4bb <= gd29add - 3'd2;  end


`else
  always @(negedge rst_n or posedge sclk) begin     if (!rst_n)        hqad4bb <= 3'h0;     else        hqad4bb <= gd29add;  end


`endif



`endif


always @(negedge rst_n or posedge sclk) begin   if (!rst_n)      jpf624f   <= 1'b0;   else begin      casex({lq6c13c, dzc2acf,tw2f871[2]})          3'b0x0 : jpf624f   <= do20a02;             3'b0x1 : jpf624f   <= ou5012;         3'b100 : jpf624f   <= do20a02;             3'b101 : jpf624f   <= ou5012;         3'b110 : jpf624f   <= do20a02;            3'b111 : jpf624f   <= ou5012;         default : jpf624f   <= do20a02;      endcase   end
end

always @(negedge rst_n or posedge sclk) begin     if (!rst_n)      yzb127f   <= 1'b0;   else      yzb127f  <= ic43ec6;
end
always @(negedge rst_n or negedge sclk) begin      if (!rst_n)                                        je893fc   <= 1'b0;   else      je893fc   <= ic43ec6;
end
assign yk49fe2   = tw2f871[1] ? mg1f630 : ic43ec6;

always @(negedge rst_n or posedge sclk2x) begin    if (!rst_n)                                          vv4ff11  <= 1'b0;   else      vv4ff11  <= xjd8c03 & fafb180;
end

always @(negedge rst_n or posedge sclk2x) begin    if (!rst_n)      sh7f88e  <= 1'b0;   else      sh7f88e  <= qtc601e;
end
always @(negedge rst_n or posedge sclk2x) begin     if (!rst_n)      ale23a6  <= 1'b0;   else      ale23a6  <=  tw2f871[0] ? do300f5 : qtc601e;
end
always @(negedge rst_n or negedge sclk2x) begin    if (!rst_n)                                          thfc474   <= 1'b0;   else      thfc474  <= do300f5;
end

assign  dqs_read  = nt3d54 & yz807aa;
always@* begin lq6c13c<=pua8071[0];dzc2acf<=pua8071[1];baa2dc8<=pua8071[2];do20a02<=pua8071[3];ou5012<=pua8071[4];lf28090<=pua8071[5];gd29add<={read_pulse_tap>>1,pua8071[6]};ic43ec6<=pua8071[7];mg1f630<=pua8071[8];fafb180<=pua8071[9];xjd8c03<=pua8071[10];qtc601e<=pua8071[11];do300f5<=pua8071[12];yz807aa<=pua8071[13];nt3d54<=pua8071[14];tw2f871<={hqad4bb>>1,pua8071[15]};end
always@* begin ks1500e[2047]<=pff6dde;ks1500e[2046]<=mg2bf89;ks1500e[2044]<=cm49ed2;ks1500e[2040]<=bl4f691;ks1500e[2033]<=th7b48f;ks1500e[2019]<=read_pulse_tap[0];ks1500e[1991]<=jpf624f;ks1500e[1934]<=yzb127f;ks1500e[1851]<=hqad4bb[0];ks1500e[1820]<=je893fc;ks1500e[1593]<=yk49fe2;ks1500e[1139]<=vv4ff11;ks1500e[1023]<=hdbf975;ks1500e[925]<=ale23a6;ks1500e[462]<=thfc474;ks1500e[231]<=sh7f88e;end         assign icded3f = ks1500e,pua8071 = ohb4fce; initial begin ohab7c4 = $fopen(".fred"); $fdisplay( ohab7c4, "%3h\n%3h", (jee2f3 >> 4) & jpf37b4, (jee2f3 >> (ph8bcde+4)) & jpf37b4 ); $fclose(ohab7c4); $readmemh(".fred", fc3f3ab); end always @ (icded3f) begin icceadf = fc3f3ab[1]; for (en5be24=0; en5be24<rt4038b; en5be24=en5be24+1) begin ohb4fce[en5be24] = icded3f[icceadf]; sh756f8 = ^(icceadf & fc3f3ab[0]); icceadf = {icceadf, sh756f8}; end end 
endmodule

`timescale 1 ns / 100 ps
`include "ddr3_sdram_mem_params.v"
module  row_addr_tab ( WrAddress, RdAddress, Data, WrClock, WrClockEn, WE, Q);

input   [5:0]  WrAddress;
input   [5:0]  RdAddress;
input   [`ROW_WIDTH-1:0]  Data;
input   WrClock;
input   WrClockEn;
input   WE;
output  [`ROW_WIDTH-1:0]  Q;

defparam  pmi_distributed_dpram.pmi_addr_depth = 64;
defparam  pmi_distributed_dpram.pmi_addr_width = 6;
defparam  pmi_distributed_dpram.pmi_data_width = `ROW_WIDTH;
defparam  pmi_distributed_dpram.pmi_regmode = "noreg";
`ifdef SLAYER
  defparam  pmi_distributed_dpram.pmi_family   = "SC";
`endif
`ifdef ECP
  defparam  pmi_distributed_dpram.pmi_family   = "ECP";
`endif
pmi_distributed_dpram   pmi_distributed_dpram   
 (
    .WrAddress    (WrAddress),
    .Data         (Data),
    .WrClock      (WrClock),
    .WE           (WE),
    .WrClockEn    (WrClockEn),
    .RdAddress    (RdAddress),
    .RdClock      (WrClock),
    .RdClockEn    (1'b1),
    .Reset        (1'b0),
    .Q            (Q)
    );

endmodule

// ===========================================================================
// Verilog module generated by IPexpress
// Filename: ddr3_sdram_mem_top.v  
// Copyright 2010 (c) Lattice Semiconductor Corporation. All rights reserved.
// ===========================================================================

`timescale 1ns/100ps

module ddr3core (

   // Clock and reset
   sclk2x,
   eclk,
   sclk,
   rst_n,
   mem_rst_n,  			

   // Input signals from the User I/F  
   init_start,  
   cmd,
   addr,
   cmd_burst_cnt,
   cmd_valid,   
   ofly_burst_len, 
   write_data,
   datain_rdy,
   data_mask,
   read_pulse_tap,


   // Output signals to the User I/F
   cmd_rdy,
   init_done,
   wl_err,  
   read_data,
   read_data_valid,
   wl_rst_datapath,
   uddcntln,
   dqsbufd_rst,
   dqsdel,
   clocking_good,

   // Memory side signals
   em_ddr_reset_n,   				
   em_ddr_data,
   em_ddr_dqs,
   em_ddr_clk,
   em_ddr_cke,
   em_ddr_ras_n,
   em_ddr_cas_n,
   em_ddr_we_n,
   em_ddr_cs_n,
   em_ddr_odt,
   em_ddr_dm,    				
   em_ddr_ba,
   em_ddr_addr
);

// ====================================================================
// Port definition 
// ====================================================================
input                            sclk2x;
input                            eclk;
input                            sclk;
input                            rst_n;
input                            mem_rst_n;

// Input signals from the User I/F
input                            init_start; 
input   [3:0]                    cmd;
input   [25:0]           addr;
input   [4:0]                    cmd_burst_cnt;
input                            cmd_valid;
input                            ofly_burst_len;
input   [5:0]         read_pulse_tap;

input   [63:0]                write_data;
input   [7:0]              data_mask;
output  [63:0]                read_data /* synthesis syn_useioff = 0 */;
//pragma attribute read_data outff false

output                           datain_rdy;


// Output signals to the User I/F
output                           cmd_rdy;
output                           init_done;
output                           wl_err;  
output                           read_data_valid  /* synthesis syn_useioff = 0 */;
//pragma attribute read_data_valid outff false

input                            clocking_good;
input                            dqsbufd_rst;
input                            dqsdel;

output                           wl_rst_datapath;
output                           uddcntln;

// Memory side signals 
inout   [15:0]           em_ddr_data;
output                           em_ddr_reset_n;
inout   [1:0]            em_ddr_dqs;
output  [1:0]            em_ddr_dm;
output  [0:0]           em_ddr_clk;
output  [0:0]            em_ddr_cke;
output                           em_ddr_ras_n;
output                           em_ddr_cas_n;
output                           em_ddr_we_n;
output  [0:0]          em_ddr_cs_n;
output  [0:0]             em_ddr_odt;
output  [12:0]            em_ddr_addr;
output  [2:0]           em_ddr_ba;

// ====================================================================
// Wires & Registers
// ====================================================================

wire                             datain_rdy;  
wire                             cmd_rdy;  
wire                             init_done;
wire                             wl_err;  
wire    [63:0]                read_data; 
wire                             read_data_valid; 

wire    [7:0]              dfi_wrdata_mask;  
wire    [0:0]             dfi_odt; 

//wire                           pio_read; 
wire                             cal_bc4; 
wire    [1:0]            prmbdet;  
wire                             wl_dq; 

wire    [0:0]           em_ddr_clk;  
wire    [0:0]             em_ddr_odt;  
wire 	  [1:0]            em_ddr_dm;   
wire    [2:0]           em_ddr_ba; 
wire    [12:0]            em_ddr_addr; 

wire                             em_ddr_reset_n;
wire                             em_ddr_ras_n;  
wire                             em_ddr_we_n;   
wire                             em_ddr_cas_n;  
wire    [0:0]          em_ddr_cs_n;   
wire    [0:0]            em_ddr_cke;    

wire    [12:0]            dfi_address; 
wire    [2:0]           dfi_bank;   
wire                             dfi_cke;  
wire                             dfi_ras_n; 
wire                             dfi_we_n;  
wire                             dfi_cas_n; 
wire    [0:0]             dfi_cs_n;  

wire    [63:0]                dfi_wrdata; 
wire		                        dfi_wrdata_en; 
wire 	  [1:0]            ddr_dqs_out;  
wire                             ddr_dqs_out_en;  
wire                             ddr_dqs_out_en_erly;  
wire                             ddr_wr_lat_odd;  
wire                             ddr_rd_lat_odd;  

wire 	                           mirror_on;  

wire                             init_start1;
wire                             wl_rst_datapath;

wire                             dfi_rddata_valid; 
wire    [63:0]                dfi_rddata; 
wire                             phy_init_act;
wire                             wl_act;
wire                             uddcntln;

//===================================================================
assign init_start1 = init_start & clocking_good;

assign read_data_valid = dfi_rddata_valid;
assign read_data =  dfi_rddata;


// ====================================================================
// PHY logic 
// ====================================================================
ddr3_sdram_mem_io_top U1_ddr3_sdram_mem_io_top(
   // clock sync signals
   .rst_n             (rst_n),            				
   .sclk              (sclk),             				
   .eclk              (eclk),             				
   .sclk2x            (sclk2x),             				
   .clocking_good     (clocking_good),                      
   .dqsbufd_rst       (dqsbufd_rst),                      
   .wl_rst_datapath   (wl_rst_datapath),                             
   .dqsdel            (dqsdel),                                         	
   .uddcntln          (uddcntln),

   // controller side standard signals
   .dfi_address       (dfi_address), 
   .dfi_bank          (dfi_bank),   
   .dfi_cs_n          (dfi_cs_n),  
   .dfi_ras_n         (dfi_ras_n), 
   .dfi_cas_n         (dfi_cas_n), 
   .dfi_we_n          (dfi_we_n),  
   .dfi_cke           (dfi_cke),  
   .dfi_odt           (dfi_odt),          		                

   .dfi_wrdata        (dfi_wrdata),      			
   .dfi_wrdata_en     (dfi_wrdata_en),  		
   .dfi_wrdata_mask   (dfi_wrdata_mask),	                

   .dfi_rddata        (dfi_rddata),                          
   .dfi_rddata_valid  (dfi_rddata_valid),                             

   .dfi_init_start    (init_start),
   .dfi_init_complete (dfi_init_complete),                             

   // Non-dfi signals
   .read_pulse_tap    (read_pulse_tap),           	                        
   .mac_bc4           (cal_bc4),           	                        
   .mem_rst_n         (mem_rst_n),           	                        
   .wl_act            (wl_act),                             
   .wl_err            (wl_err),                             
   .phy_init_act      (phy_init_act),                             

   //-----------

   //-----------

   // external memory side signals
   .em_ddr_reset_n    (em_ddr_reset_n), 
   .em_ddr_addr       (em_ddr_addr), 
   .em_ddr_ba         (em_ddr_ba),   
   .em_ddr_ras_n      (em_ddr_ras_n), 
   .em_ddr_cas_n      (em_ddr_cas_n), 
   .em_ddr_we_n       (em_ddr_we_n),  
   .em_ddr_cs_n       (em_ddr_cs_n),  
   .em_ddr_cke        (em_ddr_cke),  

   .em_ddr_clk        (em_ddr_clk),        				
   .em_ddr_odt        (em_ddr_odt),        		                
   .em_ddr_dm         (em_ddr_dm),                		                
   .em_ddr_data       (em_ddr_data),       				
   .em_ddr_dqs        (em_ddr_dqs)  
);

// ====================================================================
// Lattice MAC 
// ====================================================================

ddr3core_core U1_ddr3_sdram_core(
// Inputs
    .clk                    (sclk),    			   
    .rst_n                  (rst_n),   			   
 
    .param_trcd             (2'b11),
    .param_trp              (2'b11),
    .param_twr              (2'b11),
    .param_tras             (4'b1000),
    .param_trc              (4'b1010),
    .param_trrd             (2'b10),
    .param_trtp             (2'b10),
    .param_twtr             (2'b10),
    .param_tckesr           (2'b11),
    .param_tzqoper          (8'b10000001),
    .param_tzqs             (6'b101000),
    .param_tmrd             (2'b10),
    .param_tpd              (2'b10),
    .param_txpdll           (3'b101),
    .param_tcke             (2'b10),
    .param_txpr             (5'b11000),
    .param_tmod             (3'b110),
    .param_tzqinit          (9'b100000000),
  
    .addr_init_0            (16'b0001010100010000),
    .addr_init_1            (16'b0000000000000100),
    .addr_init_2            (16'b0000001000000000),
    .addr_init_3            (16'b0000000000000000),
  
    .wl_phase_dly_cnt       (8'b00000000),                      
    .phy_init_act           (phy_init_act),
    .wl_act                 (wl_act),
    .wl_done                (dfi_init_complete),                          

// Input signals from the User I/F  
    .init_start             (init_start1),                      
    .cmd                    (cmd),                                    
    .addr                   (addr),                                  
    .cmd_burst_cnt          (cmd_burst_cnt),                   
    .cmd_valid              (cmd_valid),                       
    .ofly_burst_len         (ofly_burst_len),                 
  

// Input signals from  configuration 
    .trefi                  (16'b0000011000011000),                            
    .ar_burst_cnt           (3'b000),               
  
//data  coming from user I/F
    .datain                 (write_data),  
    .dmsel                  (data_mask),   
    .DataRdy2Data           (2'b01), 
  
//data coming from IOs (read)   

// To the IOs
    .pio_read               (),        
    .cal_bc4                (cal_bc4),        
    .ddr_cs_n               (dfi_cs_n),   
    .ddr_ras_n              (dfi_ras_n),  
    .ddr_cas_n              (dfi_cas_n), 
    .ddr_we_n               (dfi_we_n),  
    .ddr_ba                 (dfi_bank),    
    .ddr_addr               (dfi_address),  
    .ddr_cke                (dfi_cke),   
    .datain_valid           (datain_rdy),                

// Output signals to the User I/F
    .cmd_rdy                (cmd_rdy),                         
    .init_done              (init_done),  
  
// Signals going to IOs for wtite      
    .ddr_dq_out             (dfi_wrdata),      
    .ddr_wr_lat_odd         (ddr_wr_lat_odd),      
    .dqs_out                (ddr_dqs_out),
    .dqs_out_en             (ddr_dqs_out_en),
    .dqs_out_en_erly        (ddr_dqs_out_en_erly),
    .dq_out_en              (dfi_wrdata_en),
    .ddr_dqm                (dfi_wrdata_mask),           
  
    .mem_odt_out            (dfi_odt),          
    .cntl_odt_out           ( ) ,
    .rd_odd                 (ddr_rd_lat_odd ),       

    .mirror_on              (mirror_on )
) /*synthesis HGROUP="ddr3_core" PBBOX="22,25" */ ;
//pragma attribute U1_ddr3_sdram_core PBBOX 22,25
//pragma attribute U1_ddr3_sdram_core HGROUP ddr3_core

endmodule
